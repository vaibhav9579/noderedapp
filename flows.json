[
    {
        "id": "cadcef1c8b97565d",
        "type": "tab",
        "label": "MainDashboard",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "12a45c02a0c64fe9",
        "type": "tab",
        "label": "AnalogInputFlow",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "7df8dcd3568b0c28",
        "type": "tab",
        "label": "DigitalInputFlow",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "93b5a3b37e35c7cc",
        "type": "tab",
        "label": "DigitalOutputFlow",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "220c4ff864c32f49",
        "type": "tab",
        "label": "EnergyMeter ",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "28a1f791cc37d4af",
        "type": "tab",
        "label": "Analog Input Reports ",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "8ef2b9c6e0a1e471",
        "type": "tab",
        "label": "Digital Input Reports",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "f08276ee447f37b8",
        "type": "tab",
        "label": "Digital Output Reports ",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "6f1510e0d3f3fb6d",
        "type": "tab",
        "label": "Energy Meter Reports",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "aac47978af025130",
        "type": "tab",
        "label": "Energy Meter Chart",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "0cbe8ea7e32aba1c",
        "type": "tab",
        "label": "Analog Input Charts",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "10fb4113ae3f7f6b",
        "type": "group",
        "z": "220c4ff864c32f49",
        "name": "VLN, RV, YV, BV Values Showing ",
        "style": {
            "fill": "#ffefbf",
            "label": true,
            "stroke": "#000000",
            "color": "#ff0000"
        },
        "nodes": [
            "02816f40541446b1",
            "dbd49a8b18d5940c",
            "8059502cd03a9597",
            "1e723bafbc1f19a1",
            "6ec0682ddc34f516",
            "ef8bbddf1e05c949",
            "bc2042b14260a298",
            "fdb933d6e8eda600"
        ],
        "x": 894,
        "y": 1699,
        "w": 352,
        "h": 202
    },
    {
        "id": "6a1247cd5a634ac3",
        "type": "group",
        "z": "220c4ff864c32f49",
        "name": "PF, Freq and Wh Charts ",
        "style": {
            "label": true,
            "stroke": "#000000",
            "fill": "#bfdbef",
            "color": "#ff0000"
        },
        "nodes": [
            "d0010c9e4a06adbb",
            "6da3df05f31abdbe",
            "90d2368b500f4080",
            "25e13ce4f50eb485",
            "986f187ad72614d2",
            "6f9950eecd75576a"
        ],
        "x": 934,
        "y": 399,
        "w": 632,
        "h": 202
    },
    {
        "id": "58cd1db56c8bd316",
        "type": "group",
        "z": "220c4ff864c32f49",
        "name": "RA, BA, TA, YA  Values Showing",
        "style": {
            "stroke": "#92d04f",
            "label": true,
            "fill": "#ffffbf",
            "color": "#ff0000"
        },
        "nodes": [
            "80eeb2e416e46c25",
            "8ab68da31f195a09",
            "645262c5c0f5eb98",
            "953d9618f3398874",
            "2c570846ad550a2f",
            "e62cf6fd2a924f40",
            "262fe69e071036a9",
            "1852ea907cb1834e"
        ],
        "x": 884,
        "y": 1419,
        "w": 372,
        "h": 202,
        "info": "# good"
    },
    {
        "id": "b287cac207f7a873",
        "type": "group",
        "z": "220c4ff864c32f49",
        "name": "Wh, Freq, PF Values Showing",
        "style": {
            "stroke": "#000000",
            "fill": "#e3f3d3",
            "label": true,
            "color": "#ff0000"
        },
        "nodes": [
            "306fcad3d8f3fe66",
            "c20fdf237f5682bc",
            "e55d5a524ae49380",
            "cfb6dbd6f3f9c0e9",
            "60147517bc133b70",
            "6be6cb2672047f41"
        ],
        "x": 914,
        "y": 1159,
        "w": 332,
        "h": 202
    },
    {
        "id": "562971a2a1395d1f",
        "type": "group",
        "z": "cadcef1c8b97565d",
        "name": "All Dashboards Links",
        "style": {
            "stroke": "#000000",
            "fill": "#ffbfbf",
            "label": true,
            "color": "#ff0000"
        },
        "nodes": [
            "e81c653ba3189836",
            "e39f7d8d1358f151",
            "03dc7af723724342",
            "9b45753bf6ad0a27",
            "77f2a07df446733a",
            "d101e9d44b20ef62",
            "499be2230dd367f7",
            "7040aa4d4c527c47",
            "5fe31866a28e0e84"
        ],
        "x": 794,
        "y": 219,
        "w": 812,
        "h": 202
    },
    {
        "id": "746fe73aa459f946",
        "type": "group",
        "z": "cadcef1c8b97565d",
        "name": "Dashboard Images",
        "style": {
            "stroke": "#000000",
            "fill": "#ffdf7f",
            "label": true,
            "color": "#ff0000"
        },
        "nodes": [
            "c93fe699ade7c84b",
            "6fed24810e7a3207",
            "8a7abb84372dd6cc",
            "727da1d79f9cb827",
            "3b7aa8b6b5364091"
        ],
        "x": 734,
        "y": 599,
        "w": 552,
        "h": 262
    },
    {
        "id": "4d6b70619c6303f3",
        "type": "group",
        "z": "12a45c02a0c64fe9",
        "name": "Header Section ",
        "style": {
            "stroke": "#000000",
            "fill": "#ffff7f",
            "label": true,
            "color": "#ff0000"
        },
        "nodes": [
            "0fda901ebb2bc40c",
            "547f8fb5673ee257",
            "1314546855e36edc",
            "f29d6a6ea9b859c1",
            "76f98e9ff882eb6d",
            "ac46f2a4edb1817e"
        ],
        "x": 374,
        "y": 39,
        "w": 892,
        "h": 142
    },
    {
        "id": "8e38933a15a2eb57",
        "type": "group",
        "z": "12a45c02a0c64fe9",
        "name": "Time Stamp",
        "style": {
            "label": true,
            "stroke": "#000000",
            "fill": "#bfdbef",
            "color": "#ff0000"
        },
        "nodes": [
            "61005d7208d60b2b",
            "e969b6bb6e6bb3b5",
            "6aa6b7eb4072e74a",
            "2880a2b99922b161",
            "e805f2d90cfa3357",
            "2fa8d2ae10d3c790",
            "7da65b4a84d5a00d",
            "d01d3c04d587c467"
        ],
        "x": 174,
        "y": 1359,
        "w": 372,
        "h": 202
    },
    {
        "id": "25c418f90e64c1ff",
        "type": "group",
        "z": "12a45c02a0c64fe9",
        "name": "Storing Data to DB",
        "style": {
            "stroke": "#000000",
            "fill": "#e3f3d3",
            "label": true,
            "color": "#ff0000"
        },
        "nodes": [
            "70fb4845a5497fa2",
            "324c594592b32e57"
        ],
        "x": 534,
        "y": 279,
        "w": 792,
        "h": 82
    },
    {
        "id": "cf0a6c41cc925f39",
        "type": "group",
        "z": "12a45c02a0c64fe9",
        "name": "Blank Space ",
        "style": {
            "stroke": "#000000",
            "fill": "#ffffbf",
            "label": true,
            "color": "#ff0000"
        },
        "nodes": [
            "77c1a42d99835aa9",
            "a105a45676f7a675"
        ],
        "x": 654,
        "y": 1539,
        "w": 452,
        "h": 82
    },
    {
        "id": "573424824436e8ab",
        "type": "group",
        "z": "12a45c02a0c64fe9",
        "name": "Analog Inputs Params",
        "style": {
            "stroke": "#000000",
            "fill": "#bfdbef",
            "label": true
        },
        "nodes": [
            "061d8d545ed3e7c3",
            "9019e3b114c0dc27",
            "21fa519085759197",
            "0608e6f6dff7fc05",
            "73b92bf5475504ef",
            "d43d7cc189600610",
            "98039dfcc2634192",
            "c954b54511723ecf",
            "c2cd6bfb56f4fa8e",
            "aef9da3af3fec4fc",
            "fdfc94d02e19eac3",
            "ef6265836635a9bc",
            "cdd8f52ae1ea6869",
            "bede445bb60c8b7f",
            "cd9f97e06ce76eac",
            "ea588878d82cc1d8",
            "88ffcaa741a4e4c1",
            "3ca2442b8bef5dab",
            "fb607e860751b71b",
            "2be4992e8ac60f18",
            "28a61903c3817220",
            "afafe612342113d6",
            "d252a157f0acf877",
            "5b5bcae07bb5c02c"
        ],
        "x": 774,
        "y": 579,
        "w": 732,
        "h": 822
    },
    {
        "id": "56d9bbb12c6ac8cc",
        "type": "group",
        "z": "7df8dcd3568b0c28",
        "name": "Timestamp ",
        "style": {
            "stroke": "#000000",
            "fill": "#bfdbef",
            "label": true,
            "color": "#ff0000"
        },
        "nodes": [
            "6731c490c36e6a27",
            "0156988b62d0e36e",
            "335a313373625858",
            "694f909517e0333b",
            "285f93ac69df70b0",
            "a589a98fabe7738c",
            "dab2ac9aabed3d03",
            "e2118cf978c77976",
            "5d4eb560dda53e1f",
            "954c4c34e70dfde4",
            "2f03da309d6c62f0",
            "d0989e75bbd9d3f1"
        ],
        "x": 714,
        "y": 379,
        "w": 352,
        "h": 282
    },
    {
        "id": "587d35133a0589f4",
        "type": "group",
        "z": "7df8dcd3568b0c28",
        "name": "Header Section",
        "style": {
            "stroke": "#000000",
            "fill": "#bfc7d7",
            "label": true,
            "color": "#ff0000"
        },
        "nodes": [
            "a12c05b9325a7ac0",
            "46047c19e248360c",
            "7cc497f15984b8f1",
            "544af6e302726b84",
            "23736984e18eb9a0",
            "1f4594762b3891b0",
            "ba00bfa409db6a49",
            "da3197d7cfdf1f4d",
            "e2fc7b8814598285",
            "c30a6cea67fba55e"
        ],
        "x": 494,
        "y": 79,
        "w": 1252,
        "h": 242
    },
    {
        "id": "738c62c6244a1991",
        "type": "group",
        "z": "220c4ff864c32f49",
        "name": "Blank Space",
        "style": {
            "stroke": "#000000",
            "fill": "#dbcbe7",
            "label": true,
            "color": "#ff0000"
        },
        "nodes": [
            "068ede4fe0a64759",
            "5d5fc8360254ea06",
            "de3d2820115acc35",
            "438731f209a28a35",
            "6e2ad98c9e83b117"
        ],
        "x": 174,
        "y": 1499,
        "w": 272,
        "h": 302
    },
    {
        "id": "8c4079981c186fed",
        "type": "group",
        "z": "220c4ff864c32f49",
        "name": "Timestamp ",
        "style": {
            "stroke": "#000000",
            "fill": "#dbcbe7",
            "label": true,
            "color": "#ff0000"
        },
        "nodes": [
            "3162e2433e420403",
            "11b08a249089cfec",
            "391a8edae11647c8",
            "2d69bde789f6e5be",
            "3e9ba444b9b4db35",
            "f1b837ebf715177c",
            "121f4cc47ab8effc",
            "1af3db15a25f14fa",
            "400682529edcfd18",
            "3e58ca0a56de892e",
            "05075f785ca6fcc2"
        ],
        "x": 574,
        "y": 1459,
        "w": 172,
        "h": 482
    },
    {
        "id": "899c7b1d76378fe8",
        "type": "group",
        "z": "220c4ff864c32f49",
        "name": "Header Section",
        "style": {
            "stroke": "#000000",
            "fill": "#ffbfbf",
            "label": true,
            "color": "#ff0000"
        },
        "nodes": [
            "bfa26dddcf734146",
            "f06e039a98ee4b0d",
            "0babae2e670d5bcf",
            "c559c76d6f0d031b",
            "a0da38d1318027fd",
            "35e89134809098e9",
            "e703ecbfbc0b3793",
            "3abff9fdd9b5975c",
            "6642574b6690b376"
        ],
        "x": 354,
        "y": 139,
        "w": 1472,
        "h": 142
    },
    {
        "id": "c29e176bee6df1d2",
        "type": "group",
        "z": "220c4ff864c32f49",
        "name": "RA, YA, BA, TA Charts",
        "style": {
            "stroke": "#000000",
            "fill": "#ffefbf",
            "label": true,
            "color": "#ff0000"
        },
        "nodes": [
            "c355f3adcfca9452",
            "15560cbb2c270bf2",
            "98773619f302047a",
            "7c9effe526e56bcb",
            "a650a9dd7fa6f4bf"
        ],
        "x": 914,
        "y": 679,
        "w": 852,
        "h": 202
    },
    {
        "id": "7fdf43f5d8a02fad",
        "type": "group",
        "z": "220c4ff864c32f49",
        "name": "RV, YV,BV, VLN Chart",
        "style": {
            "label": true,
            "stroke": "#dbcbe7",
            "fill": "#e3f3d3",
            "color": "#ff0000"
        },
        "nodes": [
            "a6335f6ad976504f",
            "dc757ea9c5908196",
            "0b686daa74307867",
            "676732ce881b45d4",
            "ac355dd78d50341f"
        ],
        "x": 914,
        "y": 919,
        "w": 872,
        "h": 202
    },
    {
        "id": "3c594854df33e109",
        "type": "group",
        "z": "28a1f791cc37d4af",
        "name": "Header",
        "style": {
            "stroke": "#000000",
            "fill": "#ffbfbf",
            "label": true,
            "color": "#ff0000"
        },
        "nodes": [
            "8fee521ae997a3f0",
            "7270a12ffdbaebda",
            "22e20e1ab129d3b3"
        ],
        "x": 454,
        "y": 39,
        "w": 672,
        "h": 82
    },
    {
        "id": "ed1a3249c92f181e",
        "type": "group",
        "z": "93b5a3b37e35c7cc",
        "name": "Digital Outputs Timestamp",
        "style": {
            "stroke": "#000000",
            "fill": "#e3f3d3",
            "label": true,
            "color": "#ff0000"
        },
        "nodes": [
            "7ccb11cdd11622ec",
            "2747e0bef079eb3d",
            "c26e38eed09e8708",
            "5297d8d4d8152057",
            "5be58c7b09ab0f75",
            "44962c98c4554660",
            "87c857c8808f3a19",
            "ff3a8471d8730a24",
            "4abce75a09dffce1",
            "c090d0fdc146d797",
            "4e8da70f8bf3f19c",
            "d2af08f8e0163b01"
        ],
        "x": 154,
        "y": 99,
        "w": 452,
        "h": 262
    },
    {
        "id": "f4ac132e5fb73ead",
        "type": "group",
        "z": "0cbe8ea7e32aba1c",
        "name": "AI01",
        "style": {
            "stroke": "#000000",
            "fill": "#ff7f7f",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "67e08e7d9ad5392a",
            "80e12a216487b44f",
            "55aab8a78a99e0b1",
            "5875da8baa8e9f7a",
            "fa5444fd418f429b",
            "60f1992b63382ff2",
            "8bb53c4e8431f0d8",
            "bd79a077c65f9e08",
            "1ab6ca7fec248ecf"
        ],
        "x": 14,
        "y": 199,
        "w": 1652,
        "h": 182
    },
    {
        "id": "c2e3551606d0b674",
        "type": "ui_base",
        "theme": {
            "name": "theme-dark",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#46adfb",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "reset": false
            },
            "themeState": {
                "base-color": {
                    "default": "#097479",
                    "value": "#097479",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#0eb8c0",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": true
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "ea4292e54e9739dd",
        "type": "MySQLdatabase",
        "name": "",
        "host": "127.0.0.1",
        "port": "3306",
        "db": "officedata",
        "tz": "",
        "charset": "UTF8"
    },
    {
        "id": "665f18f8041514a1",
        "type": "mqtt-broker",
        "name": "",
        "broker": "15.207.187.242",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "INS/MBIOT_ETH/09995/UTILITY",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "4fe2c62974bb15b6",
        "type": "ui_group",
        "name": "",
        "tab": "e18da0b4a6055789",
        "order": 2,
        "disp": true,
        "width": 26,
        "collapse": false,
        "className": ""
    },
    {
        "id": "e18da0b4a6055789",
        "type": "ui_tab",
        "name": "Analog Inputs",
        "icon": "dashboard",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "28285c085f1c151a",
        "type": "ui_tab",
        "name": "Energy Meter",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "d1a79b5b1b683bcd",
        "type": "ui_group",
        "name": "",
        "tab": "28285c085f1c151a",
        "order": 3,
        "disp": true,
        "width": 23,
        "collapse": false,
        "className": ""
    },
    {
        "id": "1215a62befc082b0",
        "type": "ui_tab",
        "name": "Digital Inputs",
        "icon": "dashboard",
        "order": 4,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "0f5b01afb2f3a18c",
        "type": "ui_group",
        "name": "",
        "tab": "1215a62befc082b0",
        "order": 1,
        "disp": true,
        "width": 15,
        "collapse": false,
        "className": ""
    },
    {
        "id": "ed3efce847bfe3ba",
        "type": "ui_tab",
        "name": "Digital Outputs",
        "icon": "dashboard",
        "order": 5,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "1cec39bef7c1040b",
        "type": "ui_group",
        "name": "",
        "tab": "ed3efce847bfe3ba",
        "order": 1,
        "disp": true,
        "width": 18,
        "collapse": false,
        "className": ""
    },
    {
        "id": "d44baeea9c314c1d",
        "type": "ui_tab",
        "name": "Dashboard",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "904330506182892e",
        "type": "ui_tab",
        "name": "Analog Input Reports",
        "icon": "dashboard",
        "order": 8,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "e5356d149c2603da",
        "type": "ui_group",
        "name": "",
        "tab": "904330506182892e",
        "order": 1,
        "disp": true,
        "width": "30",
        "collapse": false,
        "className": ""
    },
    {
        "id": "49af5de3222b52f6",
        "type": "ui_group",
        "name": "Main Dashboard",
        "tab": "d44baeea9c314c1d",
        "order": 6,
        "disp": true,
        "width": "22",
        "collapse": false,
        "className": ""
    },
    {
        "id": "15d3b7460c8a7796",
        "type": "ui_spacer",
        "z": "cadcef1c8b97565d",
        "name": "spacer",
        "group": "49af5de3222b52f6",
        "order": 1,
        "width": 22,
        "height": 1
    },
    {
        "id": "69f12b76ce65ff2a",
        "type": "ui_spacer",
        "z": "cadcef1c8b97565d",
        "name": "spacer",
        "group": "49af5de3222b52f6",
        "order": 2,
        "width": 5,
        "height": 1
    },
    {
        "id": "4557aac564e9174b",
        "type": "ui_spacer",
        "z": "cadcef1c8b97565d",
        "name": "spacer",
        "group": "49af5de3222b52f6",
        "order": 5,
        "width": 5,
        "height": 1
    },
    {
        "id": "c836c7ac69ac2beb",
        "type": "ui_spacer",
        "z": "cadcef1c8b97565d",
        "name": "spacer",
        "group": "49af5de3222b52f6",
        "order": 6,
        "width": 5,
        "height": 1
    },
    {
        "id": "499da0c099a98f33",
        "type": "ui_spacer",
        "z": "cadcef1c8b97565d",
        "name": "spacer",
        "group": "49af5de3222b52f6",
        "order": 7,
        "width": 5,
        "height": 1
    },
    {
        "id": "2ba6489eae7e22d1",
        "type": "ui_spacer",
        "z": "cadcef1c8b97565d",
        "name": "spacer",
        "group": "49af5de3222b52f6",
        "order": 8,
        "width": 5,
        "height": 1
    },
    {
        "id": "4d63e476960ab045",
        "type": "ui_spacer",
        "z": "cadcef1c8b97565d",
        "name": "spacer",
        "group": "49af5de3222b52f6",
        "order": 9,
        "width": 5,
        "height": 1
    },
    {
        "id": "0cfd7c4ce63c7c16",
        "type": "ui_spacer",
        "z": "cadcef1c8b97565d",
        "name": "spacer",
        "group": "49af5de3222b52f6",
        "order": 10,
        "width": 5,
        "height": 1
    },
    {
        "id": "1a9d10ef7ddae0df",
        "type": "ui_spacer",
        "z": "cadcef1c8b97565d",
        "name": "spacer",
        "group": "49af5de3222b52f6",
        "order": 13,
        "width": 5,
        "height": 1
    },
    {
        "id": "abaf8242c6e331b6",
        "type": "ui_spacer",
        "z": "cadcef1c8b97565d",
        "name": "spacer",
        "group": "49af5de3222b52f6",
        "order": 14,
        "width": 22,
        "height": 1
    },
    {
        "id": "410c59ede722dff5",
        "type": "ui_spacer",
        "z": "cadcef1c8b97565d",
        "name": "spacer",
        "group": "49af5de3222b52f6",
        "order": 15,
        "width": 5,
        "height": 1
    },
    {
        "id": "fe6a40141ff3f7d0",
        "type": "ui_spacer",
        "z": "cadcef1c8b97565d",
        "name": "spacer",
        "group": "49af5de3222b52f6",
        "order": 18,
        "width": 5,
        "height": 1
    },
    {
        "id": "2ac25cc37345490b",
        "type": "ui_spacer",
        "z": "cadcef1c8b97565d",
        "name": "spacer",
        "group": "49af5de3222b52f6",
        "order": 19,
        "width": 5,
        "height": 1
    },
    {
        "id": "6512c59a3f3e416e",
        "type": "ui_spacer",
        "z": "cadcef1c8b97565d",
        "name": "spacer",
        "group": "49af5de3222b52f6",
        "order": 20,
        "width": 5,
        "height": 1
    },
    {
        "id": "fa6295e8023876d0",
        "type": "ui_spacer",
        "z": "cadcef1c8b97565d",
        "name": "spacer",
        "group": "49af5de3222b52f6",
        "order": 21,
        "width": 5,
        "height": 1
    },
    {
        "id": "2ef404a44234b6cb",
        "type": "ui_spacer",
        "z": "cadcef1c8b97565d",
        "name": "spacer",
        "group": "49af5de3222b52f6",
        "order": 22,
        "width": 5,
        "height": 1
    },
    {
        "id": "6f70fcee12167df1",
        "type": "ui_spacer",
        "z": "cadcef1c8b97565d",
        "name": "spacer",
        "group": "49af5de3222b52f6",
        "order": 23,
        "width": 5,
        "height": 1
    },
    {
        "id": "4f260f05c388000b",
        "type": "ui_spacer",
        "z": "cadcef1c8b97565d",
        "name": "spacer",
        "group": "49af5de3222b52f6",
        "order": 26,
        "width": 5,
        "height": 1
    },
    {
        "id": "ca9aa979495bd92d",
        "type": "ui_spacer",
        "z": "cadcef1c8b97565d",
        "name": "spacer",
        "group": "49af5de3222b52f6",
        "order": 27,
        "width": 22,
        "height": 1
    },
    {
        "id": "c0839fee6b778437",
        "type": "ui_group",
        "name": "",
        "tab": "28285c085f1c151a",
        "order": 1,
        "disp": true,
        "width": 13,
        "collapse": false,
        "className": ""
    },
    {
        "id": "4350a2cad5b88dd0",
        "type": "ui_group",
        "name": "",
        "tab": "e18da0b4a6055789",
        "order": 1,
        "disp": true,
        "width": "12",
        "collapse": false,
        "className": ""
    },
    {
        "id": "c16baad6604e43ec",
        "type": "ui_tab",
        "name": "Digital Inputs Reports",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "a63dce05bd491489",
        "type": "ui_group",
        "name": "DI Reports",
        "tab": "c16baad6604e43ec",
        "order": 1,
        "disp": true,
        "width": 30,
        "collapse": false,
        "className": ""
    },
    {
        "id": "a6c1d70374c391c1",
        "type": "ui_tab",
        "name": "Digital Output Report",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "edb81bbef5b2de26",
        "type": "ui_group",
        "name": "DO Reports",
        "tab": "a6c1d70374c391c1",
        "order": 1,
        "disp": true,
        "width": 30,
        "collapse": false,
        "className": ""
    },
    {
        "id": "86b190f5ba1b637a",
        "type": "ui_tab",
        "name": "Energy Meter Reports",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "41333f3402391294",
        "type": "ui_group",
        "name": "Energy M Reports",
        "tab": "86b190f5ba1b637a",
        "order": 1,
        "disp": true,
        "width": 30,
        "collapse": false,
        "className": ""
    },
    {
        "id": "a158372b62002039",
        "type": "ui_spacer",
        "z": "12a45c02a0c64fe9",
        "name": "spacer",
        "group": "4350a2cad5b88dd0",
        "order": 1,
        "width": 12,
        "height": 1
    },
    {
        "id": "b39708f8b21cbd9d",
        "type": "ui_spacer",
        "z": "12a45c02a0c64fe9",
        "name": "spacer",
        "group": "4350a2cad5b88dd0",
        "order": 2,
        "width": 12,
        "height": 1
    },
    {
        "id": "a0b89335abeba3ff",
        "type": "ui_spacer",
        "z": "12a45c02a0c64fe9",
        "name": "spacer",
        "group": "4350a2cad5b88dd0",
        "order": 3,
        "width": 12,
        "height": 1
    },
    {
        "id": "327ced80c2776634",
        "type": "ui_spacer",
        "z": "12a45c02a0c64fe9",
        "name": "spacer",
        "group": "4350a2cad5b88dd0",
        "order": 4,
        "width": 1,
        "height": 1
    },
    {
        "id": "78e6a4127ed64d4c",
        "type": "ui_spacer",
        "z": "12a45c02a0c64fe9",
        "name": "spacer",
        "group": "4350a2cad5b88dd0",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "6a1ff430516d3ff0",
        "type": "ui_spacer",
        "z": "12a45c02a0c64fe9",
        "name": "spacer",
        "group": "4350a2cad5b88dd0",
        "order": 9,
        "width": 2,
        "height": 1
    },
    {
        "id": "0647f8db9144110b",
        "type": "ui_spacer",
        "z": "12a45c02a0c64fe9",
        "name": "spacer",
        "group": "4350a2cad5b88dd0",
        "order": 10,
        "width": 1,
        "height": 1
    },
    {
        "id": "e8fa8ef79952ccf8",
        "type": "ui_spacer",
        "z": "12a45c02a0c64fe9",
        "name": "spacer",
        "group": "4350a2cad5b88dd0",
        "order": 13,
        "width": 1,
        "height": 1
    },
    {
        "id": "0997aa7b3267a915",
        "type": "ui_spacer",
        "z": "12a45c02a0c64fe9",
        "name": "spacer",
        "group": "4350a2cad5b88dd0",
        "order": 14,
        "width": 1,
        "height": 1
    },
    {
        "id": "a0e2e946cb5316d0",
        "type": "ui_spacer",
        "z": "12a45c02a0c64fe9",
        "name": "spacer",
        "group": "4350a2cad5b88dd0",
        "order": 17,
        "width": 1,
        "height": 1
    },
    {
        "id": "551ffe8f173d1321",
        "type": "ui_spacer",
        "z": "12a45c02a0c64fe9",
        "name": "spacer",
        "group": "4350a2cad5b88dd0",
        "order": 18,
        "width": 1,
        "height": 1
    },
    {
        "id": "0db54b6827c3627b",
        "type": "ui_spacer",
        "z": "12a45c02a0c64fe9",
        "name": "spacer",
        "group": "4350a2cad5b88dd0",
        "order": 21,
        "width": 1,
        "height": 1
    },
    {
        "id": "f28bcdd29b40af68",
        "type": "ui_spacer",
        "z": "12a45c02a0c64fe9",
        "name": "spacer",
        "group": "4350a2cad5b88dd0",
        "order": 22,
        "width": 1,
        "height": 1
    },
    {
        "id": "8e2bd0f24320c7c3",
        "type": "ui_spacer",
        "z": "12a45c02a0c64fe9",
        "name": "spacer",
        "group": "4350a2cad5b88dd0",
        "order": 25,
        "width": 1,
        "height": 1
    },
    {
        "id": "39a7ad88b28f705a",
        "type": "ui_spacer",
        "z": "12a45c02a0c64fe9",
        "name": "spacer",
        "group": "4350a2cad5b88dd0",
        "order": 26,
        "width": 1,
        "height": 1
    },
    {
        "id": "8020dd7d3e890f4a",
        "type": "ui_spacer",
        "z": "12a45c02a0c64fe9",
        "name": "spacer",
        "group": "4350a2cad5b88dd0",
        "order": 29,
        "width": 1,
        "height": 1
    },
    {
        "id": "7c9aad75e149ed23",
        "type": "ui_spacer",
        "z": "12a45c02a0c64fe9",
        "name": "spacer",
        "group": "4350a2cad5b88dd0",
        "order": 30,
        "width": 12,
        "height": 1
    },
    {
        "id": "71e69cb16ec6b18c",
        "type": "ui_spacer",
        "z": "12a45c02a0c64fe9",
        "name": "spacer",
        "group": "4350a2cad5b88dd0",
        "order": 31,
        "width": 1,
        "height": 1
    },
    {
        "id": "c5f51079bef82eae",
        "type": "ui_spacer",
        "z": "12a45c02a0c64fe9",
        "name": "spacer",
        "group": "4350a2cad5b88dd0",
        "order": 34,
        "width": 1,
        "height": 1
    },
    {
        "id": "d6dab37d29ab91de",
        "type": "ui_spacer",
        "z": "12a45c02a0c64fe9",
        "name": "spacer",
        "group": "4350a2cad5b88dd0",
        "order": 35,
        "width": 1,
        "height": 1
    },
    {
        "id": "70382f22fe750dbf",
        "type": "ui_spacer",
        "z": "12a45c02a0c64fe9",
        "name": "spacer",
        "group": "4350a2cad5b88dd0",
        "order": 38,
        "width": 1,
        "height": 1
    },
    {
        "id": "6a9df243acbbfcf8",
        "type": "ui_spacer",
        "z": "12a45c02a0c64fe9",
        "name": "spacer",
        "group": "4350a2cad5b88dd0",
        "order": 39,
        "width": 1,
        "height": 1
    },
    {
        "id": "1b617105418137f3",
        "type": "ui_spacer",
        "z": "12a45c02a0c64fe9",
        "name": "spacer",
        "group": "4350a2cad5b88dd0",
        "order": 42,
        "width": 1,
        "height": 1
    },
    {
        "id": "4b51a2830112b162",
        "type": "ui_spacer",
        "z": "12a45c02a0c64fe9",
        "name": "spacer",
        "group": "4350a2cad5b88dd0",
        "order": 43,
        "width": 12,
        "height": 1
    },
    {
        "id": "9fa8eaa44ac96b2a",
        "type": "ui_spacer",
        "z": "12a45c02a0c64fe9",
        "name": "spacer",
        "group": "4fe2c62974bb15b6",
        "order": 1,
        "width": 26,
        "height": 1
    },
    {
        "id": "3dda83584d37b025",
        "type": "ui_spacer",
        "z": "12a45c02a0c64fe9",
        "name": "spacer",
        "group": "4fe2c62974bb15b6",
        "order": 2,
        "width": 1,
        "height": 1
    },
    {
        "id": "263dcdd23c608cf6",
        "type": "ui_spacer",
        "z": "12a45c02a0c64fe9",
        "name": "spacer",
        "group": "4fe2c62974bb15b6",
        "order": 4,
        "width": 15,
        "height": 1
    },
    {
        "id": "6e53372bacfe9fcb",
        "type": "ui_spacer",
        "z": "12a45c02a0c64fe9",
        "name": "spacer",
        "group": "4fe2c62974bb15b6",
        "order": 7,
        "width": 1,
        "height": 1
    },
    {
        "id": "6877ddd8ef85611c",
        "type": "ui_spacer",
        "z": "12a45c02a0c64fe9",
        "name": "spacer",
        "group": "4fe2c62974bb15b6",
        "order": 8,
        "width": 26,
        "height": 1
    },
    {
        "id": "d8fd9f45bf0bc24d",
        "type": "ui_spacer",
        "z": "12a45c02a0c64fe9",
        "name": "spacer",
        "group": "4fe2c62974bb15b6",
        "order": 9,
        "width": 1,
        "height": 1
    },
    {
        "id": "695e40ec6b153e56",
        "type": "ui_spacer",
        "z": "12a45c02a0c64fe9",
        "name": "spacer",
        "group": "4fe2c62974bb15b6",
        "order": 14,
        "width": 1,
        "height": 1
    },
    {
        "id": "0126578733a468e2",
        "type": "ui_spacer",
        "z": "12a45c02a0c64fe9",
        "name": "spacer",
        "group": "4fe2c62974bb15b6",
        "order": 15,
        "width": 1,
        "height": 1
    },
    {
        "id": "b55d974fbc962fac",
        "type": "ui_spacer",
        "z": "12a45c02a0c64fe9",
        "name": "spacer",
        "group": "4fe2c62974bb15b6",
        "order": 16,
        "width": 1,
        "height": 1
    },
    {
        "id": "1f51afc59fba3946",
        "type": "ui_spacer",
        "z": "12a45c02a0c64fe9",
        "name": "spacer",
        "group": "4fe2c62974bb15b6",
        "order": 17,
        "width": 1,
        "height": 1
    },
    {
        "id": "35458c0bcf077c2a",
        "type": "ui_spacer",
        "z": "12a45c02a0c64fe9",
        "name": "spacer",
        "group": "4fe2c62974bb15b6",
        "order": 18,
        "width": 1,
        "height": 1
    },
    {
        "id": "e71c6976e1ac8933",
        "type": "ui_spacer",
        "z": "12a45c02a0c64fe9",
        "name": "spacer",
        "group": "4fe2c62974bb15b6",
        "order": 19,
        "width": 1,
        "height": 1
    },
    {
        "id": "d9a5d99ef2bc634c",
        "type": "ui_spacer",
        "z": "12a45c02a0c64fe9",
        "name": "spacer",
        "group": "4fe2c62974bb15b6",
        "order": 20,
        "width": 1,
        "height": 1
    },
    {
        "id": "3495ed823d693eef",
        "type": "ui_spacer",
        "z": "12a45c02a0c64fe9",
        "name": "spacer",
        "group": "4fe2c62974bb15b6",
        "order": 21,
        "width": 26,
        "height": 1
    },
    {
        "id": "991ec8d81e86b892",
        "type": "ui_spacer",
        "z": "12a45c02a0c64fe9",
        "name": "spacer",
        "group": "4fe2c62974bb15b6",
        "order": 22,
        "width": 1,
        "height": 1
    },
    {
        "id": "337f6e9bae9694d4",
        "type": "ui_spacer",
        "z": "12a45c02a0c64fe9",
        "name": "spacer",
        "group": "4fe2c62974bb15b6",
        "order": 27,
        "width": 1,
        "height": 1
    },
    {
        "id": "cd9a1429e6c3f2db",
        "type": "ui_spacer",
        "z": "12a45c02a0c64fe9",
        "name": "spacer",
        "group": "4fe2c62974bb15b6",
        "order": 28,
        "width": 1,
        "height": 1
    },
    {
        "id": "e3b74c5e95d767e8",
        "type": "ui_spacer",
        "z": "12a45c02a0c64fe9",
        "name": "spacer",
        "group": "4fe2c62974bb15b6",
        "order": 29,
        "width": 1,
        "height": 1
    },
    {
        "id": "1545b0fa5547fb70",
        "type": "ui_spacer",
        "z": "12a45c02a0c64fe9",
        "name": "spacer",
        "group": "4fe2c62974bb15b6",
        "order": 30,
        "width": 1,
        "height": 1
    },
    {
        "id": "a6b1f71887212c3e",
        "type": "ui_spacer",
        "z": "12a45c02a0c64fe9",
        "name": "spacer",
        "group": "4fe2c62974bb15b6",
        "order": 31,
        "width": 1,
        "height": 1
    },
    {
        "id": "387f7c275575209a",
        "type": "ui_spacer",
        "z": "12a45c02a0c64fe9",
        "name": "spacer",
        "group": "4fe2c62974bb15b6",
        "order": 32,
        "width": 1,
        "height": 1
    },
    {
        "id": "cc8eff40e725adc3",
        "type": "ui_spacer",
        "z": "12a45c02a0c64fe9",
        "name": "spacer",
        "group": "4fe2c62974bb15b6",
        "order": 33,
        "width": 1,
        "height": 1
    },
    {
        "id": "7ae71d2b82dd6191",
        "type": "ui_spacer",
        "z": "12a45c02a0c64fe9",
        "name": "spacer",
        "group": "4fe2c62974bb15b6",
        "order": 34,
        "width": 26,
        "height": 1
    },
    {
        "id": "dc3a6cfeee543623",
        "type": "ui_spacer",
        "z": "12a45c02a0c64fe9",
        "name": "spacer",
        "group": "4fe2c62974bb15b6",
        "order": 35,
        "width": 26,
        "height": 1
    },
    {
        "id": "df436b9ec51cbd66",
        "type": "ui_spacer",
        "z": "28a1f791cc37d4af",
        "name": "spacer",
        "group": "e5356d149c2603da",
        "order": 1,
        "width": 2,
        "height": 1
    },
    {
        "id": "135f47824f5c87ec",
        "type": "ui_spacer",
        "z": "28a1f791cc37d4af",
        "name": "spacer",
        "group": "e5356d149c2603da",
        "order": 3,
        "width": 4,
        "height": 1
    },
    {
        "id": "fe44b805231f1064",
        "type": "ui_spacer",
        "z": "28a1f791cc37d4af",
        "name": "spacer",
        "group": "e5356d149c2603da",
        "order": 5,
        "width": 15,
        "height": 1
    },
    {
        "id": "d8f82090409441ab",
        "type": "ui_spacer",
        "z": "28a1f791cc37d4af",
        "name": "spacer",
        "group": "e5356d149c2603da",
        "order": 7,
        "width": 1,
        "height": 1
    },
    {
        "id": "b3d045273ae332ac",
        "type": "ui_spacer",
        "z": "28a1f791cc37d4af",
        "name": "spacer",
        "group": "e5356d149c2603da",
        "order": 9,
        "width": 20,
        "height": 1
    },
    {
        "id": "3cb1258a475d790a",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "c0839fee6b778437",
        "order": 1,
        "width": 2,
        "height": 1
    },
    {
        "id": "d501d43de7be4f81",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "c0839fee6b778437",
        "order": 3,
        "width": 6,
        "height": 1
    },
    {
        "id": "2b438e21dec2a976",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "c0839fee6b778437",
        "order": 4,
        "width": 13,
        "height": 1
    },
    {
        "id": "b4314a59cfd05c6c",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "c0839fee6b778437",
        "order": 5,
        "width": 13,
        "height": 1
    },
    {
        "id": "374c5b1afbf2cd5b",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "c0839fee6b778437",
        "order": 6,
        "width": 13,
        "height": 1
    },
    {
        "id": "29c6da24809529ef",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "c0839fee6b778437",
        "order": 7,
        "width": 1,
        "height": 1
    },
    {
        "id": "3687b94cb357998b",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "c0839fee6b778437",
        "order": 9,
        "width": 1,
        "height": 1
    },
    {
        "id": "9ca334d92b08ce98",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "c0839fee6b778437",
        "order": 12,
        "width": 3,
        "height": 1
    },
    {
        "id": "fd65a8649456f076",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "c0839fee6b778437",
        "order": 13,
        "width": 1,
        "height": 1
    },
    {
        "id": "ba0d73c668116604",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "c0839fee6b778437",
        "order": 16,
        "width": 2,
        "height": 1
    },
    {
        "id": "50126d5b3fcf521a",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "c0839fee6b778437",
        "order": 17,
        "width": 1,
        "height": 1
    },
    {
        "id": "3a6c4f0473a041e1",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "c0839fee6b778437",
        "order": 20,
        "width": 3,
        "height": 1
    },
    {
        "id": "1ae18cc6b5919b4c",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "c0839fee6b778437",
        "order": 21,
        "width": 1,
        "height": 1
    },
    {
        "id": "314efb08987c8d6e",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "c0839fee6b778437",
        "order": 24,
        "width": 3,
        "height": 1
    },
    {
        "id": "1c97ef18078a0502",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "c0839fee6b778437",
        "order": 25,
        "width": 13,
        "height": 1
    },
    {
        "id": "e2d3bcf5eaee7a26",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "c0839fee6b778437",
        "order": 26,
        "width": 13,
        "height": 1
    },
    {
        "id": "9b713f4cb2690dcb",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "c0839fee6b778437",
        "order": 27,
        "width": 13,
        "height": 1
    },
    {
        "id": "146f07e3a41047cf",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "c0839fee6b778437",
        "order": 28,
        "width": 1,
        "height": 1
    },
    {
        "id": "bbb57bd86df756f2",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "c0839fee6b778437",
        "order": 31,
        "width": 3,
        "height": 1
    },
    {
        "id": "84db8c2cdd5b3a5d",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "c0839fee6b778437",
        "order": 32,
        "width": 1,
        "height": 1
    },
    {
        "id": "9f45fa8023218639",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "c0839fee6b778437",
        "order": 35,
        "width": 3,
        "height": 1
    },
    {
        "id": "83b6fef83e19a65d",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "c0839fee6b778437",
        "order": 36,
        "width": 1,
        "height": 1
    },
    {
        "id": "b76e4ba423d46045",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "c0839fee6b778437",
        "order": 39,
        "width": 3,
        "height": 1
    },
    {
        "id": "ac93e4427ecd9847",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "c0839fee6b778437",
        "order": 40,
        "width": 1,
        "height": 1
    },
    {
        "id": "552530fedb6880a7",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "c0839fee6b778437",
        "order": 43,
        "width": 3,
        "height": 1
    },
    {
        "id": "23c6a418c6e0c65c",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "c0839fee6b778437",
        "order": 44,
        "width": 13,
        "height": 1
    },
    {
        "id": "afa4b26e032b0b1b",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "c0839fee6b778437",
        "order": 45,
        "width": 13,
        "height": 1
    },
    {
        "id": "85be3cbb9fa88706",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "c0839fee6b778437",
        "order": 46,
        "width": 1,
        "height": 1
    },
    {
        "id": "9288b6af11b648bb",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "c0839fee6b778437",
        "order": 49,
        "width": 3,
        "height": 1
    },
    {
        "id": "3ebbabea809e5327",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "c0839fee6b778437",
        "order": 50,
        "width": 1,
        "height": 1
    },
    {
        "id": "9a1cfaf4aa0f6b75",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "c0839fee6b778437",
        "order": 53,
        "width": 3,
        "height": 1
    },
    {
        "id": "527d564aca99c45c",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "c0839fee6b778437",
        "order": 54,
        "width": 1,
        "height": 1
    },
    {
        "id": "7c43e235bb76c833",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "c0839fee6b778437",
        "order": 57,
        "width": 3,
        "height": 1
    },
    {
        "id": "e22881685fbd43ed",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "c0839fee6b778437",
        "order": 58,
        "width": 1,
        "height": 1
    },
    {
        "id": "ea9d854c1a79b1e4",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "c0839fee6b778437",
        "order": 61,
        "width": 3,
        "height": 1
    },
    {
        "id": "fc4b0d193ea940ac",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "c0839fee6b778437",
        "order": 62,
        "width": 13,
        "height": 1
    },
    {
        "id": "93a4bb26829e724c",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "c0839fee6b778437",
        "order": 64,
        "width": 1,
        "height": 1
    },
    {
        "id": "ca49d3d3fd0a0974",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "c0839fee6b778437",
        "order": 66,
        "width": 2,
        "height": 1
    },
    {
        "id": "efe5372f97cc57f1",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "c0839fee6b778437",
        "order": 67,
        "width": 13,
        "height": 1
    },
    {
        "id": "8ec666ab25d6fa56",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "c0839fee6b778437",
        "order": 68,
        "width": 13,
        "height": 1
    },
    {
        "id": "58d70aa79cc5e281",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "c0839fee6b778437",
        "order": 69,
        "width": 13,
        "height": 1
    },
    {
        "id": "19d40117a0fc7182",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "c0839fee6b778437",
        "order": 70,
        "width": 3,
        "height": 1
    },
    {
        "id": "ae7862846f22fca8",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "c0839fee6b778437",
        "order": 72,
        "width": 5,
        "height": 1
    },
    {
        "id": "29507510cd1bed32",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "d1a79b5b1b683bcd",
        "order": 2,
        "width": 7,
        "height": 1
    },
    {
        "id": "8d3413aeb9cb2089",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "d1a79b5b1b683bcd",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "364032841b09aa85",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "d1a79b5b1b683bcd",
        "order": 6,
        "width": 23,
        "height": 1
    },
    {
        "id": "eb714c756c0a219d",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "d1a79b5b1b683bcd",
        "order": 7,
        "width": 23,
        "height": 1
    },
    {
        "id": "4a3121489cf4bfbe",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "d1a79b5b1b683bcd",
        "order": 8,
        "width": 23,
        "height": 1
    },
    {
        "id": "b4c1e84b150b0bdf",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "d1a79b5b1b683bcd",
        "order": 12,
        "width": 5,
        "height": 1
    },
    {
        "id": "3997f82800e852d7",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "d1a79b5b1b683bcd",
        "order": 13,
        "width": 5,
        "height": 1
    },
    {
        "id": "ab228648e8839ae7",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "d1a79b5b1b683bcd",
        "order": 14,
        "width": 5,
        "height": 1
    },
    {
        "id": "0b1f23c2469bb7c7",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "d1a79b5b1b683bcd",
        "order": 15,
        "width": 5,
        "height": 1
    },
    {
        "id": "5104e4a4b1e1fccb",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "d1a79b5b1b683bcd",
        "order": 16,
        "width": 23,
        "height": 1
    },
    {
        "id": "5beb5595bbf299df",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "d1a79b5b1b683bcd",
        "order": 17,
        "width": 23,
        "height": 1
    },
    {
        "id": "a86b3dd744ff6ac0",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "d1a79b5b1b683bcd",
        "order": 18,
        "width": 23,
        "height": 1
    },
    {
        "id": "fa36a2e8256c49a0",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "d1a79b5b1b683bcd",
        "order": 20,
        "width": 3,
        "height": 1
    },
    {
        "id": "a90782092bb6318d",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "d1a79b5b1b683bcd",
        "order": 21,
        "width": 3,
        "height": 1
    },
    {
        "id": "14f44b3bbc8d68ab",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "d1a79b5b1b683bcd",
        "order": 22,
        "width": 3,
        "height": 1
    },
    {
        "id": "facef00cd90ea4f8",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "d1a79b5b1b683bcd",
        "order": 23,
        "width": 3,
        "height": 1
    },
    {
        "id": "8c5d1283927734de",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "d1a79b5b1b683bcd",
        "order": 24,
        "width": 23,
        "height": 1
    },
    {
        "id": "eb3702919000948c",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "d1a79b5b1b683bcd",
        "order": 25,
        "width": 23,
        "height": 1
    },
    {
        "id": "2c050fbb5883ad84",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "d1a79b5b1b683bcd",
        "order": 27,
        "width": 3,
        "height": 1
    },
    {
        "id": "b7399bae413a8682",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "d1a79b5b1b683bcd",
        "order": 28,
        "width": 3,
        "height": 1
    },
    {
        "id": "5d30f0dcc74be280",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "d1a79b5b1b683bcd",
        "order": 29,
        "width": 3,
        "height": 1
    },
    {
        "id": "431260c8ef5ba0dd",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "d1a79b5b1b683bcd",
        "order": 30,
        "width": 3,
        "height": 1
    },
    {
        "id": "886d517958cc68c3",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "d1a79b5b1b683bcd",
        "order": 31,
        "width": 23,
        "height": 1
    },
    {
        "id": "9545b2a4a7e46852",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "d1a79b5b1b683bcd",
        "order": 32,
        "width": 23,
        "height": 1
    },
    {
        "id": "1010e2d9fa44dbe4",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "d1a79b5b1b683bcd",
        "order": 33,
        "width": 23,
        "height": 1
    },
    {
        "id": "0e37520d638abb34",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "d1a79b5b1b683bcd",
        "order": 34,
        "width": 23,
        "height": 1
    },
    {
        "id": "d1e4c6629c420199",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "d1a79b5b1b683bcd",
        "order": 35,
        "width": 23,
        "height": 1
    },
    {
        "id": "cd5fc9164d746fbc",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "d1a79b5b1b683bcd",
        "order": 37,
        "width": 1,
        "height": 1
    },
    {
        "id": "b46f13c1cc61cc07",
        "type": "ui_spacer",
        "z": "8ef2b9c6e0a1e471",
        "name": "spacer",
        "group": "a63dce05bd491489",
        "order": 1,
        "width": 22,
        "height": 1
    },
    {
        "id": "345f4e81f9cad1e4",
        "type": "ui_spacer",
        "z": "8ef2b9c6e0a1e471",
        "name": "spacer",
        "group": "a63dce05bd491489",
        "order": 3,
        "width": 1,
        "height": 1
    },
    {
        "id": "7482afd306cc2193",
        "type": "ui_spacer",
        "z": "8ef2b9c6e0a1e471",
        "name": "spacer",
        "group": "a63dce05bd491489",
        "order": 5,
        "width": 3,
        "height": 1
    },
    {
        "id": "76aaf7afbf132b22",
        "type": "ui_spacer",
        "z": "8ef2b9c6e0a1e471",
        "name": "spacer",
        "group": "a63dce05bd491489",
        "order": 7,
        "width": 1,
        "height": 1
    },
    {
        "id": "b8751843ee8dcc3a",
        "type": "ui_spacer",
        "z": "8ef2b9c6e0a1e471",
        "name": "spacer",
        "group": "a63dce05bd491489",
        "order": 9,
        "width": 15,
        "height": 1
    },
    {
        "id": "5594a8bae14ae62e",
        "type": "ui_spacer",
        "z": "8ef2b9c6e0a1e471",
        "name": "spacer",
        "group": "edb81bbef5b2de26",
        "order": 1,
        "width": 18,
        "height": 1
    },
    {
        "id": "6e221032fe7522d7",
        "type": "ui_spacer",
        "z": "8ef2b9c6e0a1e471",
        "name": "spacer",
        "group": "edb81bbef5b2de26",
        "order": 3,
        "width": 7,
        "height": 1
    },
    {
        "id": "02359a1d06f1c77e",
        "type": "ui_spacer",
        "z": "8ef2b9c6e0a1e471",
        "name": "spacer",
        "group": "edb81bbef5b2de26",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "11ab5049f6936e44",
        "type": "ui_spacer",
        "z": "8ef2b9c6e0a1e471",
        "name": "spacer",
        "group": "edb81bbef5b2de26",
        "order": 7,
        "width": 1,
        "height": 1
    },
    {
        "id": "90dd786143de7328",
        "type": "ui_spacer",
        "z": "8ef2b9c6e0a1e471",
        "name": "spacer",
        "group": "edb81bbef5b2de26",
        "order": 9,
        "width": 15,
        "height": 1
    },
    {
        "id": "8f6d741e638c3666",
        "type": "ui_spacer",
        "z": "7df8dcd3568b0c28",
        "name": "spacer",
        "group": "0f5b01afb2f3a18c",
        "order": 2,
        "width": 6,
        "height": 1
    },
    {
        "id": "2a5d34480de98f94",
        "type": "ui_spacer",
        "z": "7df8dcd3568b0c28",
        "name": "spacer",
        "group": "0f5b01afb2f3a18c",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "7663f462cc6c9080",
        "type": "ui_spacer",
        "z": "7df8dcd3568b0c28",
        "name": "spacer",
        "group": "0f5b01afb2f3a18c",
        "order": 6,
        "width": 2,
        "height": 1
    },
    {
        "id": "36bf82e4462c5ae9",
        "type": "ui_spacer",
        "z": "7df8dcd3568b0c28",
        "name": "spacer",
        "group": "0f5b01afb2f3a18c",
        "order": 9,
        "width": 1,
        "height": 1
    },
    {
        "id": "41ea698f2d12d52d",
        "type": "ui_spacer",
        "z": "7df8dcd3568b0c28",
        "name": "spacer",
        "group": "0f5b01afb2f3a18c",
        "order": 11,
        "width": 3,
        "height": 1
    },
    {
        "id": "bb461dc3ce551308",
        "type": "ui_spacer",
        "z": "7df8dcd3568b0c28",
        "name": "spacer",
        "group": "0f5b01afb2f3a18c",
        "order": 12,
        "width": 2,
        "height": 1
    },
    {
        "id": "6101965deb2ed4e9",
        "type": "ui_spacer",
        "z": "7df8dcd3568b0c28",
        "name": "spacer",
        "group": "0f5b01afb2f3a18c",
        "order": 16,
        "width": 2,
        "height": 1
    },
    {
        "id": "ef38a6566ef58dd7",
        "type": "ui_spacer",
        "z": "7df8dcd3568b0c28",
        "name": "spacer",
        "group": "0f5b01afb2f3a18c",
        "order": 17,
        "width": 2,
        "height": 1
    },
    {
        "id": "e8a00034794da61b",
        "type": "ui_spacer",
        "z": "7df8dcd3568b0c28",
        "name": "spacer",
        "group": "0f5b01afb2f3a18c",
        "order": 21,
        "width": 2,
        "height": 1
    },
    {
        "id": "f01fdd712121a7d9",
        "type": "ui_spacer",
        "z": "7df8dcd3568b0c28",
        "name": "spacer",
        "group": "0f5b01afb2f3a18c",
        "order": 22,
        "width": 2,
        "height": 1
    },
    {
        "id": "d6c0133857040096",
        "type": "ui_spacer",
        "z": "7df8dcd3568b0c28",
        "name": "spacer",
        "group": "0f5b01afb2f3a18c",
        "order": 26,
        "width": 2,
        "height": 1
    },
    {
        "id": "e235a54964a2f547",
        "type": "ui_spacer",
        "z": "7df8dcd3568b0c28",
        "name": "spacer",
        "group": "0f5b01afb2f3a18c",
        "order": 27,
        "width": 2,
        "height": 1
    },
    {
        "id": "1732d65d8a7d711a",
        "type": "ui_spacer",
        "z": "7df8dcd3568b0c28",
        "name": "spacer",
        "group": "0f5b01afb2f3a18c",
        "order": 31,
        "width": 2,
        "height": 1
    },
    {
        "id": "134c3c787a5e8933",
        "type": "ui_spacer",
        "z": "7df8dcd3568b0c28",
        "name": "spacer",
        "group": "0f5b01afb2f3a18c",
        "order": 32,
        "width": 2,
        "height": 1
    },
    {
        "id": "225eafe72af5a06e",
        "type": "ui_spacer",
        "z": "7df8dcd3568b0c28",
        "name": "spacer",
        "group": "0f5b01afb2f3a18c",
        "order": 36,
        "width": 2,
        "height": 1
    },
    {
        "id": "f2c52c84b1d02863",
        "type": "ui_spacer",
        "z": "7df8dcd3568b0c28",
        "name": "spacer",
        "group": "0f5b01afb2f3a18c",
        "order": 37,
        "width": 2,
        "height": 1
    },
    {
        "id": "585d76d085147474",
        "type": "ui_spacer",
        "z": "7df8dcd3568b0c28",
        "name": "spacer",
        "group": "0f5b01afb2f3a18c",
        "order": 41,
        "width": 2,
        "height": 1
    },
    {
        "id": "1111a1f084c63495",
        "type": "ui_spacer",
        "z": "7df8dcd3568b0c28",
        "name": "spacer",
        "group": "0f5b01afb2f3a18c",
        "order": 42,
        "width": 2,
        "height": 1
    },
    {
        "id": "cd21d09662f10ed5",
        "type": "ui_spacer",
        "z": "7df8dcd3568b0c28",
        "name": "spacer",
        "group": "0f5b01afb2f3a18c",
        "order": 46,
        "width": 2,
        "height": 1
    },
    {
        "id": "81c7ba4c90626224",
        "type": "ui_spacer",
        "z": "7df8dcd3568b0c28",
        "name": "spacer",
        "group": "0f5b01afb2f3a18c",
        "order": 47,
        "width": 2,
        "height": 1
    },
    {
        "id": "24683dd0db91e186",
        "type": "ui_spacer",
        "z": "7df8dcd3568b0c28",
        "name": "spacer",
        "group": "0f5b01afb2f3a18c",
        "order": 51,
        "width": 2,
        "height": 1
    },
    {
        "id": "275083ace017edbf",
        "type": "ui_spacer",
        "z": "7df8dcd3568b0c28",
        "name": "spacer",
        "group": "0f5b01afb2f3a18c",
        "order": 52,
        "width": 2,
        "height": 1
    },
    {
        "id": "ea9f90c7a07ad46f",
        "type": "ui_spacer",
        "z": "7df8dcd3568b0c28",
        "name": "spacer",
        "group": "0f5b01afb2f3a18c",
        "order": 56,
        "width": 2,
        "height": 1
    },
    {
        "id": "c725659ccd0f9160",
        "type": "ui_spacer",
        "z": "7df8dcd3568b0c28",
        "name": "spacer",
        "group": "0f5b01afb2f3a18c",
        "order": 57,
        "width": 2,
        "height": 1
    },
    {
        "id": "2de17f96e3f4ab62",
        "type": "ui_spacer",
        "z": "7df8dcd3568b0c28",
        "name": "spacer",
        "group": "0f5b01afb2f3a18c",
        "order": 61,
        "width": 2,
        "height": 1
    },
    {
        "id": "38686b5042ac9b01",
        "type": "ui_spacer",
        "z": "7df8dcd3568b0c28",
        "name": "spacer",
        "group": "0f5b01afb2f3a18c",
        "order": 62,
        "width": 2,
        "height": 1
    },
    {
        "id": "9327a62b7ca1b4bc",
        "type": "ui_spacer",
        "z": "7df8dcd3568b0c28",
        "name": "spacer",
        "group": "0f5b01afb2f3a18c",
        "order": 66,
        "width": 2,
        "height": 1
    },
    {
        "id": "25edaf9fc844a175",
        "type": "ui_spacer",
        "z": "7df8dcd3568b0c28",
        "name": "spacer",
        "group": "0f5b01afb2f3a18c",
        "order": 67,
        "width": 2,
        "height": 1
    },
    {
        "id": "a8afaf550b194ed6",
        "type": "ui_spacer",
        "z": "7df8dcd3568b0c28",
        "name": "spacer",
        "group": "0f5b01afb2f3a18c",
        "order": 71,
        "width": 2,
        "height": 1
    },
    {
        "id": "88064330c5fab2c4",
        "type": "ui_spacer",
        "z": "7df8dcd3568b0c28",
        "name": "spacer",
        "group": "0f5b01afb2f3a18c",
        "order": 72,
        "width": 15,
        "height": 1
    },
    {
        "id": "b69c39f2eb903504",
        "type": "ui_spacer",
        "z": "7df8dcd3568b0c28",
        "name": "spacer",
        "group": "0f5b01afb2f3a18c",
        "order": 73,
        "width": 15,
        "height": 1
    },
    {
        "id": "f48258fdc754dc49",
        "type": "ui_spacer",
        "z": "7df8dcd3568b0c28",
        "name": "spacer",
        "group": "1cec39bef7c1040b",
        "order": 1,
        "width": 4,
        "height": 1
    },
    {
        "id": "763b7bff336ed2fd",
        "type": "ui_spacer",
        "z": "7df8dcd3568b0c28",
        "name": "spacer",
        "group": "1cec39bef7c1040b",
        "order": 3,
        "width": 4,
        "height": 1
    },
    {
        "id": "38d186beee655d71",
        "type": "ui_spacer",
        "z": "7df8dcd3568b0c28",
        "name": "spacer",
        "group": "1cec39bef7c1040b",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "8f88f4cb479054d9",
        "type": "ui_spacer",
        "z": "7df8dcd3568b0c28",
        "name": "spacer",
        "group": "1cec39bef7c1040b",
        "order": 7,
        "width": 18,
        "height": 1
    },
    {
        "id": "8de863f4ecee86c6",
        "type": "ui_spacer",
        "z": "7df8dcd3568b0c28",
        "name": "spacer",
        "group": "1cec39bef7c1040b",
        "order": 8,
        "width": 18,
        "height": 1
    },
    {
        "id": "1b18725b36d4e341",
        "type": "ui_spacer",
        "z": "7df8dcd3568b0c28",
        "name": "spacer",
        "group": "1cec39bef7c1040b",
        "order": 9,
        "width": 1,
        "height": 1
    },
    {
        "id": "73fa551b2433bcca",
        "type": "ui_spacer",
        "z": "7df8dcd3568b0c28",
        "name": "spacer",
        "group": "1cec39bef7c1040b",
        "order": 12,
        "width": 1,
        "height": 1
    },
    {
        "id": "2cb59ef9e5c89306",
        "type": "ui_spacer",
        "z": "7df8dcd3568b0c28",
        "name": "spacer",
        "group": "1cec39bef7c1040b",
        "order": 15,
        "width": 4,
        "height": 1
    },
    {
        "id": "c21d548585c0f621",
        "type": "ui_spacer",
        "z": "7df8dcd3568b0c28",
        "name": "spacer",
        "group": "1cec39bef7c1040b",
        "order": 16,
        "width": 18,
        "height": 1
    },
    {
        "id": "f6f94cfb6e9b82e6",
        "type": "ui_spacer",
        "z": "7df8dcd3568b0c28",
        "name": "spacer",
        "group": "1cec39bef7c1040b",
        "order": 17,
        "width": 1,
        "height": 1
    },
    {
        "id": "7a7304dd7574d809",
        "type": "ui_spacer",
        "z": "7df8dcd3568b0c28",
        "name": "spacer",
        "group": "1cec39bef7c1040b",
        "order": 22,
        "width": 4,
        "height": 1
    },
    {
        "id": "00275b4ff8c9b61f",
        "type": "ui_spacer",
        "z": "7df8dcd3568b0c28",
        "name": "spacer",
        "group": "1cec39bef7c1040b",
        "order": 23,
        "width": 1,
        "height": 1
    },
    {
        "id": "04f4dfc89bf57f96",
        "type": "ui_spacer",
        "z": "7df8dcd3568b0c28",
        "name": "spacer",
        "group": "1cec39bef7c1040b",
        "order": 28,
        "width": 4,
        "height": 1
    },
    {
        "id": "6d4140335a25b3ca",
        "type": "ui_spacer",
        "z": "7df8dcd3568b0c28",
        "name": "spacer",
        "group": "1cec39bef7c1040b",
        "order": 29,
        "width": 1,
        "height": 1
    },
    {
        "id": "4c975406c45e11d7",
        "type": "ui_spacer",
        "z": "7df8dcd3568b0c28",
        "name": "spacer",
        "group": "1cec39bef7c1040b",
        "order": 34,
        "width": 4,
        "height": 1
    },
    {
        "id": "d3433983c2b83d04",
        "type": "ui_spacer",
        "z": "7df8dcd3568b0c28",
        "name": "spacer",
        "group": "1cec39bef7c1040b",
        "order": 35,
        "width": 1,
        "height": 1
    },
    {
        "id": "e955fea955bfaa02",
        "type": "ui_spacer",
        "z": "7df8dcd3568b0c28",
        "name": "spacer",
        "group": "1cec39bef7c1040b",
        "order": 40,
        "width": 4,
        "height": 1
    },
    {
        "id": "baab470ab3f39d79",
        "type": "ui_spacer",
        "z": "7df8dcd3568b0c28",
        "name": "spacer",
        "group": "1cec39bef7c1040b",
        "order": 41,
        "width": 1,
        "height": 1
    },
    {
        "id": "ceca8517fed544b5",
        "type": "ui_spacer",
        "z": "7df8dcd3568b0c28",
        "name": "spacer",
        "group": "1cec39bef7c1040b",
        "order": 46,
        "width": 4,
        "height": 1
    },
    {
        "id": "96541c6c7fd0d234",
        "type": "ui_spacer",
        "z": "7df8dcd3568b0c28",
        "name": "spacer",
        "group": "1cec39bef7c1040b",
        "order": 47,
        "width": 1,
        "height": 1
    },
    {
        "id": "ed8ada020b0e9f9c",
        "type": "ui_spacer",
        "z": "7df8dcd3568b0c28",
        "name": "spacer",
        "group": "1cec39bef7c1040b",
        "order": 52,
        "width": 4,
        "height": 1
    },
    {
        "id": "77ab6fc1dd180dda",
        "type": "ui_spacer",
        "z": "7df8dcd3568b0c28",
        "name": "spacer",
        "group": "1cec39bef7c1040b",
        "order": 53,
        "width": 1,
        "height": 1
    },
    {
        "id": "04c6ec72c1d7fc0b",
        "type": "ui_spacer",
        "z": "7df8dcd3568b0c28",
        "name": "spacer",
        "group": "1cec39bef7c1040b",
        "order": 58,
        "width": 4,
        "height": 1
    },
    {
        "id": "8211254f2619a40f",
        "type": "ui_spacer",
        "z": "7df8dcd3568b0c28",
        "name": "spacer",
        "group": "1cec39bef7c1040b",
        "order": 59,
        "width": 1,
        "height": 1
    },
    {
        "id": "1409efa27e5b5690",
        "type": "ui_spacer",
        "z": "7df8dcd3568b0c28",
        "name": "spacer",
        "group": "1cec39bef7c1040b",
        "order": 64,
        "width": 4,
        "height": 1
    },
    {
        "id": "13c75c943eae05ef",
        "type": "ui_spacer",
        "z": "7df8dcd3568b0c28",
        "name": "spacer",
        "group": "1cec39bef7c1040b",
        "order": 65,
        "width": 1,
        "height": 1
    },
    {
        "id": "78d8f4613eacdd67",
        "type": "ui_spacer",
        "z": "7df8dcd3568b0c28",
        "name": "spacer",
        "group": "1cec39bef7c1040b",
        "order": 70,
        "width": 4,
        "height": 1
    },
    {
        "id": "9dec1540755b8326",
        "type": "ui_spacer",
        "z": "7df8dcd3568b0c28",
        "name": "spacer",
        "group": "1cec39bef7c1040b",
        "order": 71,
        "width": 1,
        "height": 1
    },
    {
        "id": "fe7ce6bfdd63392a",
        "type": "ui_spacer",
        "z": "7df8dcd3568b0c28",
        "name": "spacer",
        "group": "1cec39bef7c1040b",
        "order": 76,
        "width": 4,
        "height": 1
    },
    {
        "id": "c9f52ae0aa01fd80",
        "type": "ui_spacer",
        "z": "7df8dcd3568b0c28",
        "name": "spacer",
        "group": "1cec39bef7c1040b",
        "order": 77,
        "width": 1,
        "height": 1
    },
    {
        "id": "ac5c79bc169fa3ca",
        "type": "ui_spacer",
        "z": "7df8dcd3568b0c28",
        "name": "spacer",
        "group": "1cec39bef7c1040b",
        "order": 82,
        "width": 4,
        "height": 1
    },
    {
        "id": "65eb8a4cad504973",
        "type": "ui_spacer",
        "z": "7df8dcd3568b0c28",
        "name": "spacer",
        "group": "1cec39bef7c1040b",
        "order": 83,
        "width": 1,
        "height": 1
    },
    {
        "id": "3c879b63213a57bd",
        "type": "ui_spacer",
        "z": "7df8dcd3568b0c28",
        "name": "spacer",
        "group": "1cec39bef7c1040b",
        "order": 88,
        "width": 4,
        "height": 1
    },
    {
        "id": "1b6afae019b0a5c0",
        "type": "ui_spacer",
        "z": "7df8dcd3568b0c28",
        "name": "spacer",
        "group": "1cec39bef7c1040b",
        "order": 89,
        "width": 18,
        "height": 1
    },
    {
        "id": "0f2e289988f44347",
        "type": "ui_spacer",
        "z": "7df8dcd3568b0c28",
        "name": "spacer",
        "group": "1cec39bef7c1040b",
        "order": 90,
        "width": 18,
        "height": 1
    },
    {
        "id": "108aa9ba03344871",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "41333f3402391294",
        "order": 1,
        "width": 4,
        "height": 1
    },
    {
        "id": "eb7f8a82ba11e93b",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "41333f3402391294",
        "order": 3,
        "width": 3,
        "height": 1
    },
    {
        "id": "f0f3ec64e8330b40",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "41333f3402391294",
        "order": 5,
        "width": 14,
        "height": 1
    },
    {
        "id": "8c3c1183e3bc1a38",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "41333f3402391294",
        "order": 7,
        "width": 1,
        "height": 1
    },
    {
        "id": "636b93a7d25b7769",
        "type": "ui_spacer",
        "z": "220c4ff864c32f49",
        "name": "spacer",
        "group": "41333f3402391294",
        "order": 9,
        "width": 20,
        "height": 1
    },
    {
        "id": "34cd8ec7de67baf2",
        "type": "ui_tab",
        "name": "Energy Meter Chart",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "5ebffeb5127455f3",
        "type": "ui_group",
        "name": "Energy Meter Chart",
        "tab": "34cd8ec7de67baf2",
        "order": 1,
        "disp": true,
        "width": 30,
        "collapse": false,
        "className": ""
    },
    {
        "id": "833ff9202485d201",
        "type": "ui_spacer",
        "z": "aac47978af025130",
        "name": "spacer",
        "group": "5ebffeb5127455f3",
        "order": 2,
        "width": 24,
        "height": 1
    },
    {
        "id": "f3f59e3c56f8a2e1",
        "type": "ui_spacer",
        "z": "aac47978af025130",
        "name": "spacer",
        "group": "5ebffeb5127455f3",
        "order": 4,
        "width": 2,
        "height": 1
    },
    {
        "id": "73711985fdd22fe0",
        "type": "ui_spacer",
        "z": "aac47978af025130",
        "name": "spacer",
        "group": "5ebffeb5127455f3",
        "order": 6,
        "width": 19,
        "height": 1
    },
    {
        "id": "341e40b5a98d8dd0",
        "type": "ui_spacer",
        "z": "aac47978af025130",
        "name": "spacer",
        "group": "5ebffeb5127455f3",
        "order": 8,
        "width": 1,
        "height": 1
    },
    {
        "id": "4e96e956f9456e41",
        "type": "ui_spacer",
        "z": "aac47978af025130",
        "name": "spacer",
        "group": "5ebffeb5127455f3",
        "order": 9,
        "width": 1,
        "height": 1
    },
    {
        "id": "928e04a433f39d0b",
        "type": "ui_spacer",
        "z": "aac47978af025130",
        "name": "spacer",
        "group": "5ebffeb5127455f3",
        "order": 10,
        "width": 1,
        "height": 1
    },
    {
        "id": "f5279966dec096d6",
        "type": "ui_spacer",
        "z": "aac47978af025130",
        "name": "spacer",
        "group": "5ebffeb5127455f3",
        "order": 11,
        "width": 1,
        "height": 1
    },
    {
        "id": "28ab32fa9c23bc60",
        "type": "ui_spacer",
        "z": "aac47978af025130",
        "name": "spacer",
        "group": "5ebffeb5127455f3",
        "order": 12,
        "width": 1,
        "height": 1
    },
    {
        "id": "4089662fb9914742",
        "type": "ui_spacer",
        "z": "aac47978af025130",
        "name": "spacer",
        "group": "5ebffeb5127455f3",
        "order": 13,
        "width": 1,
        "height": 1
    },
    {
        "id": "05544b9953bb9a21",
        "type": "ui_spacer",
        "z": "aac47978af025130",
        "name": "spacer",
        "group": "5ebffeb5127455f3",
        "order": 14,
        "width": 1,
        "height": 1
    },
    {
        "id": "b07e0e115ed282d1",
        "type": "ui_spacer",
        "z": "aac47978af025130",
        "name": "spacer",
        "group": "5ebffeb5127455f3",
        "order": 15,
        "width": 1,
        "height": 1
    },
    {
        "id": "1852c72a3ddb5a22",
        "type": "ui_spacer",
        "z": "aac47978af025130",
        "name": "spacer",
        "group": "5ebffeb5127455f3",
        "order": 16,
        "width": 1,
        "height": 1
    },
    {
        "id": "94719e5018db3e06",
        "type": "ui_spacer",
        "z": "aac47978af025130",
        "name": "spacer",
        "group": "5ebffeb5127455f3",
        "order": 17,
        "width": 1,
        "height": 1
    },
    {
        "id": "6bcafd77a96367c1",
        "type": "ui_spacer",
        "z": "aac47978af025130",
        "name": "spacer",
        "group": "5ebffeb5127455f3",
        "order": 19,
        "width": 1,
        "height": 1
    },
    {
        "id": "4465c7ae3cd2d723",
        "type": "ui_spacer",
        "z": "aac47978af025130",
        "name": "spacer",
        "group": "5ebffeb5127455f3",
        "order": 20,
        "width": 1,
        "height": 1
    },
    {
        "id": "47c2dbbc78b5ec64",
        "type": "ui_spacer",
        "z": "aac47978af025130",
        "name": "spacer",
        "group": "5ebffeb5127455f3",
        "order": 21,
        "width": 1,
        "height": 1
    },
    {
        "id": "3422dce3cc071ff0",
        "type": "ui_spacer",
        "z": "aac47978af025130",
        "name": "spacer",
        "group": "5ebffeb5127455f3",
        "order": 22,
        "width": 1,
        "height": 1
    },
    {
        "id": "88c933194265cb65",
        "type": "ui_tab",
        "name": "Practice",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "511b53e5bae63045",
        "type": "ui_group",
        "name": "Practice",
        "tab": "88c933194265cb65",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "0db502b3cc268cb4",
        "type": "ui_spacer",
        "z": "aac47978af025130",
        "name": "spacer",
        "group": "511b53e5bae63045",
        "order": 2,
        "width": 6,
        "height": 1
    },
    {
        "id": "a12575ff48f48697",
        "type": "ui_tab",
        "name": "AI Charts",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "d48e625dd15b16ab",
        "type": "ui_group",
        "name": "",
        "tab": "a12575ff48f48697",
        "order": 1,
        "disp": true,
        "width": "12",
        "collapse": false,
        "className": ""
    },
    {
        "id": "826f229308fe7b87",
        "type": "ui_group",
        "name": "",
        "tab": "a12575ff48f48697",
        "order": 2,
        "disp": true,
        "width": "12",
        "collapse": false,
        "className": ""
    },
    {
        "id": "595ae79c7dbc44c8",
        "type": "ui_group",
        "name": "",
        "tab": "a12575ff48f48697",
        "order": 3,
        "disp": true,
        "width": "12",
        "collapse": false,
        "className": ""
    },
    {
        "id": "0aaefe6cc998c233",
        "type": "ui_group",
        "name": "",
        "tab": "a12575ff48f48697",
        "order": 4,
        "disp": true,
        "width": "12",
        "collapse": false,
        "className": ""
    },
    {
        "id": "1b90b305910104f3",
        "type": "ui_group",
        "name": "",
        "tab": "a12575ff48f48697",
        "order": 5,
        "disp": true,
        "width": "12",
        "collapse": false,
        "className": ""
    },
    {
        "id": "cd1a2cabae6f16ee",
        "type": "ui_group",
        "name": "",
        "tab": "a12575ff48f48697",
        "order": 6,
        "disp": true,
        "width": "12",
        "collapse": false,
        "className": ""
    },
    {
        "id": "d24e03d8bee24e99",
        "type": "ui_group",
        "name": "",
        "tab": "a12575ff48f48697",
        "order": 7,
        "disp": true,
        "width": "12",
        "collapse": false,
        "className": ""
    },
    {
        "id": "6d712b1eab3d1520",
        "type": "ui_group",
        "name": "",
        "tab": "a12575ff48f48697",
        "order": 8,
        "disp": true,
        "width": "12",
        "collapse": false,
        "className": ""
    },
    {
        "id": "1337d52feed045c5",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "d48e625dd15b16ab",
        "order": 1,
        "width": 5,
        "height": 1
    },
    {
        "id": "0482bacb127b5cce",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "d48e625dd15b16ab",
        "order": 3,
        "width": 4,
        "height": 1
    },
    {
        "id": "57d528213f189030",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "d48e625dd15b16ab",
        "order": 4,
        "width": 1,
        "height": 1
    },
    {
        "id": "93d2b641ffad4d95",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "d48e625dd15b16ab",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "fbbd59e6618efe76",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "d48e625dd15b16ab",
        "order": 7,
        "width": 1,
        "height": 1
    },
    {
        "id": "05b767d3fd12e525",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "d48e625dd15b16ab",
        "order": 8,
        "width": 1,
        "height": 1
    },
    {
        "id": "a4d76b9717b2b777",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "d48e625dd15b16ab",
        "order": 9,
        "width": 1,
        "height": 1
    },
    {
        "id": "b16fc5bb2beafef8",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "d48e625dd15b16ab",
        "order": 10,
        "width": 1,
        "height": 1
    },
    {
        "id": "bcc65599385e30d1",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "d48e625dd15b16ab",
        "order": 11,
        "width": 1,
        "height": 1
    },
    {
        "id": "b48238ab56e83e42",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "d48e625dd15b16ab",
        "order": 12,
        "width": 1,
        "height": 1
    },
    {
        "id": "6993d6bbec655857",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "d48e625dd15b16ab",
        "order": 13,
        "width": 1,
        "height": 1
    },
    {
        "id": "fb1e8a9fdc7508b3",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "d48e625dd15b16ab",
        "order": 14,
        "width": 1,
        "height": 1
    },
    {
        "id": "760facc2d32c5ee8",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "d48e625dd15b16ab",
        "order": 15,
        "width": 1,
        "height": 1
    },
    {
        "id": "c427d076a4dc1f20",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "d48e625dd15b16ab",
        "order": 16,
        "width": 1,
        "height": 1
    },
    {
        "id": "e405e40e6ac60b92",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "d48e625dd15b16ab",
        "order": 17,
        "width": 1,
        "height": 1
    },
    {
        "id": "01d70d9151f2a956",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "d48e625dd15b16ab",
        "order": 19,
        "width": 1,
        "height": 1
    },
    {
        "id": "ffd3fc139c46a0b9",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "d48e625dd15b16ab",
        "order": 20,
        "width": 1,
        "height": 1
    },
    {
        "id": "9d85b39c0cb9f985",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "d48e625dd15b16ab",
        "order": 21,
        "width": 1,
        "height": 1
    },
    {
        "id": "1b623206562fcaa0",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "d48e625dd15b16ab",
        "order": 22,
        "width": 1,
        "height": 1
    },
    {
        "id": "bd96bf955db4e720",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "d48e625dd15b16ab",
        "order": 23,
        "width": 1,
        "height": 1
    },
    {
        "id": "7192ec44beef6e0f",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "d48e625dd15b16ab",
        "order": 24,
        "width": 1,
        "height": 1
    },
    {
        "id": "46ee89e72506af0b",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "d48e625dd15b16ab",
        "order": 25,
        "width": 1,
        "height": 1
    },
    {
        "id": "dd2b469f3c92fb72",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "d48e625dd15b16ab",
        "order": 26,
        "width": 1,
        "height": 1
    },
    {
        "id": "556bfa7b74d204e6",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "d48e625dd15b16ab",
        "order": 27,
        "width": 1,
        "height": 1
    },
    {
        "id": "b4394dc660e6b17b",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "d48e625dd15b16ab",
        "order": 28,
        "width": 1,
        "height": 1
    },
    {
        "id": "0a200bbf5ee635af",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "d48e625dd15b16ab",
        "order": 29,
        "width": 1,
        "height": 1
    },
    {
        "id": "ab5a576f4eef0703",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "826f229308fe7b87",
        "order": 1,
        "width": 4,
        "height": 1
    },
    {
        "id": "8ae61f246221f2c2",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "826f229308fe7b87",
        "order": 3,
        "width": 5,
        "height": 1
    },
    {
        "id": "b61c713cca9d81c6",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "826f229308fe7b87",
        "order": 4,
        "width": 1,
        "height": 1
    },
    {
        "id": "e56b49a018a3c20a",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "826f229308fe7b87",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "c070a8b098b85c97",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "826f229308fe7b87",
        "order": 7,
        "width": 1,
        "height": 1
    },
    {
        "id": "87f543b9581dd9e3",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "826f229308fe7b87",
        "order": 8,
        "width": 1,
        "height": 1
    },
    {
        "id": "4fe2420f5f996ccb",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "826f229308fe7b87",
        "order": 9,
        "width": 1,
        "height": 1
    },
    {
        "id": "2d0f823ee3fee5b7",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "826f229308fe7b87",
        "order": 10,
        "width": 1,
        "height": 1
    },
    {
        "id": "7039acbeb9c3c37f",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "826f229308fe7b87",
        "order": 11,
        "width": 1,
        "height": 1
    },
    {
        "id": "8e74edc53e6197b0",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "826f229308fe7b87",
        "order": 12,
        "width": 1,
        "height": 1
    },
    {
        "id": "f980d15afb8ef651",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "826f229308fe7b87",
        "order": 13,
        "width": 1,
        "height": 1
    },
    {
        "id": "bcf94ef73a047cc0",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "826f229308fe7b87",
        "order": 14,
        "width": 1,
        "height": 1
    },
    {
        "id": "2e93efe6c2291de3",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "826f229308fe7b87",
        "order": 15,
        "width": 1,
        "height": 1
    },
    {
        "id": "a738908eee3fb7d9",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "826f229308fe7b87",
        "order": 16,
        "width": 1,
        "height": 1
    },
    {
        "id": "a0d7012fdea56959",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "826f229308fe7b87",
        "order": 17,
        "width": 1,
        "height": 1
    },
    {
        "id": "98087917da4b45db",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "826f229308fe7b87",
        "order": 19,
        "width": 1,
        "height": 1
    },
    {
        "id": "1d918badb4e6d828",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "826f229308fe7b87",
        "order": 20,
        "width": 1,
        "height": 1
    },
    {
        "id": "f08f6bcfc17c0aae",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "826f229308fe7b87",
        "order": 21,
        "width": 1,
        "height": 1
    },
    {
        "id": "7d93fd2ca201b6b9",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "826f229308fe7b87",
        "order": 22,
        "width": 1,
        "height": 1
    },
    {
        "id": "dfa4b4899743f11b",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "826f229308fe7b87",
        "order": 23,
        "width": 1,
        "height": 1
    },
    {
        "id": "5a5a26766d5bd7a7",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "826f229308fe7b87",
        "order": 24,
        "width": 1,
        "height": 1
    },
    {
        "id": "3c07b35a6df29715",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "826f229308fe7b87",
        "order": 25,
        "width": 1,
        "height": 1
    },
    {
        "id": "6813c513b38dc777",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "826f229308fe7b87",
        "order": 26,
        "width": 1,
        "height": 1
    },
    {
        "id": "38044239e75b8499",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "826f229308fe7b87",
        "order": 27,
        "width": 1,
        "height": 1
    },
    {
        "id": "278b4e823f82edd8",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "826f229308fe7b87",
        "order": 28,
        "width": 1,
        "height": 1
    },
    {
        "id": "69da05e5a199ec60",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "826f229308fe7b87",
        "order": 29,
        "width": 1,
        "height": 1
    },
    {
        "id": "d7c8477b94540f46",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "595ae79c7dbc44c8",
        "order": 1,
        "width": 4,
        "height": 1
    },
    {
        "id": "bc055a0d74824af7",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "595ae79c7dbc44c8",
        "order": 3,
        "width": 5,
        "height": 1
    },
    {
        "id": "925ecb3106589d7d",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "595ae79c7dbc44c8",
        "order": 4,
        "width": 1,
        "height": 1
    },
    {
        "id": "914ccaa499df5b3c",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "595ae79c7dbc44c8",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "43fe80a130975246",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "595ae79c7dbc44c8",
        "order": 7,
        "width": 1,
        "height": 1
    },
    {
        "id": "613c947b8ce8de07",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "595ae79c7dbc44c8",
        "order": 8,
        "width": 1,
        "height": 1
    },
    {
        "id": "5004ed43e1731383",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "595ae79c7dbc44c8",
        "order": 9,
        "width": 1,
        "height": 1
    },
    {
        "id": "cb94fac16f65b4e0",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "595ae79c7dbc44c8",
        "order": 10,
        "width": 1,
        "height": 1
    },
    {
        "id": "3f195be082be23b6",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "595ae79c7dbc44c8",
        "order": 11,
        "width": 1,
        "height": 1
    },
    {
        "id": "6dabedeeda7e544c",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "595ae79c7dbc44c8",
        "order": 12,
        "width": 1,
        "height": 1
    },
    {
        "id": "28b12f97888ba931",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "595ae79c7dbc44c8",
        "order": 13,
        "width": 1,
        "height": 1
    },
    {
        "id": "87d77e331f4bd86a",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "595ae79c7dbc44c8",
        "order": 14,
        "width": 1,
        "height": 1
    },
    {
        "id": "f7080d884127fd85",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "595ae79c7dbc44c8",
        "order": 15,
        "width": 1,
        "height": 1
    },
    {
        "id": "f176f8625211bb5d",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "595ae79c7dbc44c8",
        "order": 16,
        "width": 1,
        "height": 1
    },
    {
        "id": "ea04dc79f8d47eba",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "595ae79c7dbc44c8",
        "order": 17,
        "width": 1,
        "height": 1
    },
    {
        "id": "e6fdeb07a94cafab",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "595ae79c7dbc44c8",
        "order": 19,
        "width": 1,
        "height": 1
    },
    {
        "id": "ec0cb3f815e3175e",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "595ae79c7dbc44c8",
        "order": 20,
        "width": 1,
        "height": 1
    },
    {
        "id": "40bcc0170d156760",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "595ae79c7dbc44c8",
        "order": 21,
        "width": 1,
        "height": 1
    },
    {
        "id": "f39164e710cf60c3",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "595ae79c7dbc44c8",
        "order": 22,
        "width": 1,
        "height": 1
    },
    {
        "id": "5edf6cc537ea22dc",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "595ae79c7dbc44c8",
        "order": 23,
        "width": 1,
        "height": 1
    },
    {
        "id": "f348432e14d3212c",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "595ae79c7dbc44c8",
        "order": 24,
        "width": 1,
        "height": 1
    },
    {
        "id": "39c3558771e4fb2a",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "595ae79c7dbc44c8",
        "order": 25,
        "width": 1,
        "height": 1
    },
    {
        "id": "aa1493693a3db336",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "595ae79c7dbc44c8",
        "order": 26,
        "width": 1,
        "height": 1
    },
    {
        "id": "ab4e24c9088f22c2",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "595ae79c7dbc44c8",
        "order": 27,
        "width": 1,
        "height": 1
    },
    {
        "id": "679a9d1ebaa6192a",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "595ae79c7dbc44c8",
        "order": 28,
        "width": 1,
        "height": 1
    },
    {
        "id": "505e353df1e0e7d3",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "595ae79c7dbc44c8",
        "order": 29,
        "width": 1,
        "height": 1
    },
    {
        "id": "a95305f64091f190",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "0aaefe6cc998c233",
        "order": 1,
        "width": 4,
        "height": 1
    },
    {
        "id": "8d7d854fff986e17",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "0aaefe6cc998c233",
        "order": 3,
        "width": 5,
        "height": 1
    },
    {
        "id": "7478ad64e4588e16",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "0aaefe6cc998c233",
        "order": 4,
        "width": 1,
        "height": 1
    },
    {
        "id": "038a0d40ec56d563",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "0aaefe6cc998c233",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "7a1997b6f3e7b17d",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "0aaefe6cc998c233",
        "order": 7,
        "width": 1,
        "height": 1
    },
    {
        "id": "6be8b76897876575",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "0aaefe6cc998c233",
        "order": 8,
        "width": 1,
        "height": 1
    },
    {
        "id": "dabeb6c99d76a2ce",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "0aaefe6cc998c233",
        "order": 9,
        "width": 1,
        "height": 1
    },
    {
        "id": "74638e70af8a979b",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "0aaefe6cc998c233",
        "order": 10,
        "width": 1,
        "height": 1
    },
    {
        "id": "3b2e23c585a77e04",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "0aaefe6cc998c233",
        "order": 11,
        "width": 1,
        "height": 1
    },
    {
        "id": "cf912d4090c4501e",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "0aaefe6cc998c233",
        "order": 12,
        "width": 1,
        "height": 1
    },
    {
        "id": "f179d958693dca56",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "0aaefe6cc998c233",
        "order": 13,
        "width": 1,
        "height": 1
    },
    {
        "id": "fda3d1ff8eed1b78",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "0aaefe6cc998c233",
        "order": 14,
        "width": 1,
        "height": 1
    },
    {
        "id": "63b7f32559bd2ea6",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "0aaefe6cc998c233",
        "order": 15,
        "width": 1,
        "height": 1
    },
    {
        "id": "5a01e4a707209a5b",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "0aaefe6cc998c233",
        "order": 16,
        "width": 1,
        "height": 1
    },
    {
        "id": "46a5185511f0ef57",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "0aaefe6cc998c233",
        "order": 17,
        "width": 1,
        "height": 1
    },
    {
        "id": "0678c73531cf5bf2",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "0aaefe6cc998c233",
        "order": 19,
        "width": 1,
        "height": 1
    },
    {
        "id": "d81c2e3da545c38c",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "0aaefe6cc998c233",
        "order": 20,
        "width": 1,
        "height": 1
    },
    {
        "id": "e71b262b70c27a9e",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "0aaefe6cc998c233",
        "order": 21,
        "width": 1,
        "height": 1
    },
    {
        "id": "8e3fa94310402d2c",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "0aaefe6cc998c233",
        "order": 22,
        "width": 1,
        "height": 1
    },
    {
        "id": "f75930f609e795f3",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "0aaefe6cc998c233",
        "order": 23,
        "width": 1,
        "height": 1
    },
    {
        "id": "550cf379bc34ce21",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "0aaefe6cc998c233",
        "order": 24,
        "width": 1,
        "height": 1
    },
    {
        "id": "c046694c8210efa3",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "0aaefe6cc998c233",
        "order": 25,
        "width": 1,
        "height": 1
    },
    {
        "id": "cae1e36f6e1f80d3",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "0aaefe6cc998c233",
        "order": 26,
        "width": 1,
        "height": 1
    },
    {
        "id": "cb286bdb160709ca",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "0aaefe6cc998c233",
        "order": 27,
        "width": 1,
        "height": 1
    },
    {
        "id": "3229d1d01a5b2ce0",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "0aaefe6cc998c233",
        "order": 28,
        "width": 1,
        "height": 1
    },
    {
        "id": "6d14ba2556aefdd2",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "0aaefe6cc998c233",
        "order": 29,
        "width": 1,
        "height": 1
    },
    {
        "id": "e0d7026a052667e5",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "1b90b305910104f3",
        "order": 1,
        "width": 5,
        "height": 1
    },
    {
        "id": "b74f45c024aae387",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "1b90b305910104f3",
        "order": 3,
        "width": 4,
        "height": 1
    },
    {
        "id": "14e35436afc80200",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "1b90b305910104f3",
        "order": 4,
        "width": 1,
        "height": 1
    },
    {
        "id": "817afbec92328b5f",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "1b90b305910104f3",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "c2ee03490dc12f36",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "1b90b305910104f3",
        "order": 7,
        "width": 1,
        "height": 1
    },
    {
        "id": "ae4c66a94fe39579",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "1b90b305910104f3",
        "order": 8,
        "width": 1,
        "height": 1
    },
    {
        "id": "f3ca19c614b05141",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "1b90b305910104f3",
        "order": 9,
        "width": 1,
        "height": 1
    },
    {
        "id": "901ad68bb3db4d19",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "1b90b305910104f3",
        "order": 10,
        "width": 1,
        "height": 1
    },
    {
        "id": "03e661b082bf0ff6",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "1b90b305910104f3",
        "order": 11,
        "width": 1,
        "height": 1
    },
    {
        "id": "76c26c3f960d3699",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "1b90b305910104f3",
        "order": 12,
        "width": 1,
        "height": 1
    },
    {
        "id": "9d305d430e7f7365",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "1b90b305910104f3",
        "order": 13,
        "width": 1,
        "height": 1
    },
    {
        "id": "1a52adf2d87d5118",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "1b90b305910104f3",
        "order": 14,
        "width": 1,
        "height": 1
    },
    {
        "id": "8b7ce6f790dee93f",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "1b90b305910104f3",
        "order": 15,
        "width": 1,
        "height": 1
    },
    {
        "id": "c138ecd3cbb8c713",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "1b90b305910104f3",
        "order": 16,
        "width": 1,
        "height": 1
    },
    {
        "id": "eb2ea1ac29b96137",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "1b90b305910104f3",
        "order": 17,
        "width": 1,
        "height": 1
    },
    {
        "id": "80dc7bcff85fc495",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "1b90b305910104f3",
        "order": 19,
        "width": 1,
        "height": 1
    },
    {
        "id": "dda44bc41e7bb0c0",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "1b90b305910104f3",
        "order": 20,
        "width": 1,
        "height": 1
    },
    {
        "id": "66ce037aa93fc53f",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "1b90b305910104f3",
        "order": 21,
        "width": 1,
        "height": 1
    },
    {
        "id": "f8b98ef44085812e",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "1b90b305910104f3",
        "order": 22,
        "width": 1,
        "height": 1
    },
    {
        "id": "666507025fee0644",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "1b90b305910104f3",
        "order": 23,
        "width": 1,
        "height": 1
    },
    {
        "id": "3acb9db366e3f86d",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "1b90b305910104f3",
        "order": 24,
        "width": 1,
        "height": 1
    },
    {
        "id": "fb586cb32a872c40",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "1b90b305910104f3",
        "order": 25,
        "width": 1,
        "height": 1
    },
    {
        "id": "80e9e9911beb0a97",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "1b90b305910104f3",
        "order": 26,
        "width": 1,
        "height": 1
    },
    {
        "id": "7354267bc9ea2242",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "1b90b305910104f3",
        "order": 27,
        "width": 1,
        "height": 1
    },
    {
        "id": "61107e7b78fe4ee5",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "1b90b305910104f3",
        "order": 28,
        "width": 1,
        "height": 1
    },
    {
        "id": "c6d27a3e3b6080f3",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "1b90b305910104f3",
        "order": 29,
        "width": 1,
        "height": 1
    },
    {
        "id": "2f3ee14bd57de831",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "cd1a2cabae6f16ee",
        "order": 1,
        "width": 4,
        "height": 1
    },
    {
        "id": "b290ef816c6094a4",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "cd1a2cabae6f16ee",
        "order": 3,
        "width": 5,
        "height": 1
    },
    {
        "id": "7da7a569535924be",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "cd1a2cabae6f16ee",
        "order": 4,
        "width": 1,
        "height": 1
    },
    {
        "id": "4d0a59a7ecdc929b",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "cd1a2cabae6f16ee",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "4f8197092f1ecc40",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "cd1a2cabae6f16ee",
        "order": 7,
        "width": 1,
        "height": 1
    },
    {
        "id": "866528c661dd0e02",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "cd1a2cabae6f16ee",
        "order": 8,
        "width": 1,
        "height": 1
    },
    {
        "id": "d107448a10fd1595",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "cd1a2cabae6f16ee",
        "order": 9,
        "width": 1,
        "height": 1
    },
    {
        "id": "65ddd2853aad4d70",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "cd1a2cabae6f16ee",
        "order": 10,
        "width": 1,
        "height": 1
    },
    {
        "id": "11e3965c8d68de97",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "cd1a2cabae6f16ee",
        "order": 11,
        "width": 1,
        "height": 1
    },
    {
        "id": "ecb70dba15b1b6fe",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "cd1a2cabae6f16ee",
        "order": 12,
        "width": 1,
        "height": 1
    },
    {
        "id": "932d693ba1e19097",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "cd1a2cabae6f16ee",
        "order": 13,
        "width": 1,
        "height": 1
    },
    {
        "id": "e395f8136821e408",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "cd1a2cabae6f16ee",
        "order": 14,
        "width": 1,
        "height": 1
    },
    {
        "id": "a6b8024045ac028c",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "cd1a2cabae6f16ee",
        "order": 15,
        "width": 1,
        "height": 1
    },
    {
        "id": "d6d9c12fa08f49f3",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "cd1a2cabae6f16ee",
        "order": 16,
        "width": 1,
        "height": 1
    },
    {
        "id": "6c9c571d8544a299",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "cd1a2cabae6f16ee",
        "order": 17,
        "width": 1,
        "height": 1
    },
    {
        "id": "9b49b048b1b58859",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "cd1a2cabae6f16ee",
        "order": 19,
        "width": 1,
        "height": 1
    },
    {
        "id": "09b70ed70d06dc52",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "cd1a2cabae6f16ee",
        "order": 20,
        "width": 1,
        "height": 1
    },
    {
        "id": "440e09305c88a2da",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "cd1a2cabae6f16ee",
        "order": 21,
        "width": 1,
        "height": 1
    },
    {
        "id": "55c130eea2d90e31",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "cd1a2cabae6f16ee",
        "order": 22,
        "width": 1,
        "height": 1
    },
    {
        "id": "d9cd594550dc1e92",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "cd1a2cabae6f16ee",
        "order": 23,
        "width": 1,
        "height": 1
    },
    {
        "id": "c145157275e0ffaa",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "cd1a2cabae6f16ee",
        "order": 24,
        "width": 1,
        "height": 1
    },
    {
        "id": "523916f87914d75f",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "cd1a2cabae6f16ee",
        "order": 25,
        "width": 1,
        "height": 1
    },
    {
        "id": "ba08d244abe5219b",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "cd1a2cabae6f16ee",
        "order": 26,
        "width": 1,
        "height": 1
    },
    {
        "id": "d4af35addfb7112f",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "cd1a2cabae6f16ee",
        "order": 27,
        "width": 1,
        "height": 1
    },
    {
        "id": "2b8fd73f02537ced",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "cd1a2cabae6f16ee",
        "order": 28,
        "width": 1,
        "height": 1
    },
    {
        "id": "c65522d30c251647",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "cd1a2cabae6f16ee",
        "order": 29,
        "width": 1,
        "height": 1
    },
    {
        "id": "7262a71eb2f77021",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "d24e03d8bee24e99",
        "order": 1,
        "width": 4,
        "height": 1
    },
    {
        "id": "17fa4af100fda2d8",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "d24e03d8bee24e99",
        "order": 3,
        "width": 5,
        "height": 1
    },
    {
        "id": "9e71b7b3f5681aa6",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "d24e03d8bee24e99",
        "order": 4,
        "width": 1,
        "height": 1
    },
    {
        "id": "22b32fd1544f88ca",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "d24e03d8bee24e99",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "be07b1fa42e8fef0",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "d24e03d8bee24e99",
        "order": 7,
        "width": 1,
        "height": 1
    },
    {
        "id": "0248e7c414d228e2",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "d24e03d8bee24e99",
        "order": 8,
        "width": 1,
        "height": 1
    },
    {
        "id": "e0198395b16b7b7b",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "d24e03d8bee24e99",
        "order": 9,
        "width": 1,
        "height": 1
    },
    {
        "id": "bf47b8a3326b869d",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "d24e03d8bee24e99",
        "order": 10,
        "width": 1,
        "height": 1
    },
    {
        "id": "2f76bf4d725f5436",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "d24e03d8bee24e99",
        "order": 11,
        "width": 1,
        "height": 1
    },
    {
        "id": "cfb8529333e15b22",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "d24e03d8bee24e99",
        "order": 12,
        "width": 1,
        "height": 1
    },
    {
        "id": "a87d612e3f3aeffe",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "d24e03d8bee24e99",
        "order": 13,
        "width": 1,
        "height": 1
    },
    {
        "id": "e0bba37b705f4b33",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "d24e03d8bee24e99",
        "order": 14,
        "width": 1,
        "height": 1
    },
    {
        "id": "f40415e364d19f74",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "d24e03d8bee24e99",
        "order": 15,
        "width": 1,
        "height": 1
    },
    {
        "id": "0f20c30b592fede4",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "d24e03d8bee24e99",
        "order": 16,
        "width": 1,
        "height": 1
    },
    {
        "id": "3d4da81068660ad3",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "d24e03d8bee24e99",
        "order": 17,
        "width": 1,
        "height": 1
    },
    {
        "id": "af81b1d78c9525ec",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "d24e03d8bee24e99",
        "order": 19,
        "width": 1,
        "height": 1
    },
    {
        "id": "41a263a469b68b5a",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "d24e03d8bee24e99",
        "order": 20,
        "width": 1,
        "height": 1
    },
    {
        "id": "f69484313211012d",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "d24e03d8bee24e99",
        "order": 21,
        "width": 1,
        "height": 1
    },
    {
        "id": "8601ee8f62b36fd3",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "d24e03d8bee24e99",
        "order": 22,
        "width": 1,
        "height": 1
    },
    {
        "id": "b7ca89a8126e22de",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "d24e03d8bee24e99",
        "order": 23,
        "width": 1,
        "height": 1
    },
    {
        "id": "6643129e312fc3dc",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "d24e03d8bee24e99",
        "order": 24,
        "width": 1,
        "height": 1
    },
    {
        "id": "101156e6b8c00810",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "d24e03d8bee24e99",
        "order": 25,
        "width": 1,
        "height": 1
    },
    {
        "id": "f9c802cd0227fd76",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "d24e03d8bee24e99",
        "order": 26,
        "width": 1,
        "height": 1
    },
    {
        "id": "1324d5a6701088ea",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "d24e03d8bee24e99",
        "order": 27,
        "width": 1,
        "height": 1
    },
    {
        "id": "794698a9c1fce372",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "d24e03d8bee24e99",
        "order": 28,
        "width": 1,
        "height": 1
    },
    {
        "id": "d1d6c9d24d287d9e",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "d24e03d8bee24e99",
        "order": 29,
        "width": 1,
        "height": 1
    },
    {
        "id": "dae525a3f95c366a",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "6d712b1eab3d1520",
        "order": 1,
        "width": 5,
        "height": 1
    },
    {
        "id": "7e7a1a5472bcfa10",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "6d712b1eab3d1520",
        "order": 3,
        "width": 4,
        "height": 1
    },
    {
        "id": "45e0ca9b999fe3c7",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "6d712b1eab3d1520",
        "order": 4,
        "width": 1,
        "height": 1
    },
    {
        "id": "0fb92e2d957c5d65",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "6d712b1eab3d1520",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "4066e6d1113506f5",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "6d712b1eab3d1520",
        "order": 7,
        "width": 1,
        "height": 1
    },
    {
        "id": "c77c2835bebed1c7",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "6d712b1eab3d1520",
        "order": 8,
        "width": 1,
        "height": 1
    },
    {
        "id": "90be91183717b212",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "6d712b1eab3d1520",
        "order": 9,
        "width": 1,
        "height": 1
    },
    {
        "id": "32d94dfa6358bd94",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "6d712b1eab3d1520",
        "order": 10,
        "width": 1,
        "height": 1
    },
    {
        "id": "879c1c87c915211f",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "6d712b1eab3d1520",
        "order": 11,
        "width": 1,
        "height": 1
    },
    {
        "id": "7ee34be62eb37764",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "6d712b1eab3d1520",
        "order": 12,
        "width": 1,
        "height": 1
    },
    {
        "id": "ca5bd08efb8a6494",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "6d712b1eab3d1520",
        "order": 13,
        "width": 1,
        "height": 1
    },
    {
        "id": "4912309c1376330b",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "6d712b1eab3d1520",
        "order": 14,
        "width": 1,
        "height": 1
    },
    {
        "id": "0b9d484a65254512",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "6d712b1eab3d1520",
        "order": 15,
        "width": 1,
        "height": 1
    },
    {
        "id": "b04837118b65e8c1",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "6d712b1eab3d1520",
        "order": 16,
        "width": 1,
        "height": 1
    },
    {
        "id": "87fae20b09f0874b",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "6d712b1eab3d1520",
        "order": 17,
        "width": 1,
        "height": 1
    },
    {
        "id": "35cdf52c666f4f0c",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "6d712b1eab3d1520",
        "order": 19,
        "width": 1,
        "height": 1
    },
    {
        "id": "79181100d2ba6723",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "6d712b1eab3d1520",
        "order": 20,
        "width": 1,
        "height": 1
    },
    {
        "id": "e9b3f90862967911",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "6d712b1eab3d1520",
        "order": 21,
        "width": 1,
        "height": 1
    },
    {
        "id": "c90ca59d773509bd",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "6d712b1eab3d1520",
        "order": 22,
        "width": 1,
        "height": 1
    },
    {
        "id": "aad9a1801d4db4e2",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "6d712b1eab3d1520",
        "order": 23,
        "width": 1,
        "height": 1
    },
    {
        "id": "55725aaf2057351c",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "6d712b1eab3d1520",
        "order": 24,
        "width": 1,
        "height": 1
    },
    {
        "id": "6eb0a17494c54d96",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "6d712b1eab3d1520",
        "order": 25,
        "width": 1,
        "height": 1
    },
    {
        "id": "5989adcf8d7c6e18",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "6d712b1eab3d1520",
        "order": 26,
        "width": 1,
        "height": 1
    },
    {
        "id": "21763c0c478e83af",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "6d712b1eab3d1520",
        "order": 27,
        "width": 1,
        "height": 1
    },
    {
        "id": "924c1df160bee8ec",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "6d712b1eab3d1520",
        "order": 28,
        "width": 1,
        "height": 1
    },
    {
        "id": "c379c874e47abd74",
        "type": "ui_spacer",
        "z": "0cbe8ea7e32aba1c",
        "name": "spacer",
        "group": "6d712b1eab3d1520",
        "order": 29,
        "width": 1,
        "height": 1
    },
    {
        "id": "e81c653ba3189836",
        "type": "change",
        "z": "cadcef1c8b97565d",
        "g": "562971a2a1395d1f",
        "name": "linking to the AI flow",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"tab\" : \"Analog Inputs\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1180,
        "y": 260,
        "wires": [
            [
                "9b45753bf6ad0a27"
            ]
        ]
    },
    {
        "id": "e39f7d8d1358f151",
        "type": "change",
        "z": "cadcef1c8b97565d",
        "g": "562971a2a1395d1f",
        "name": "Linking to the DI flow",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"tab\" : \"Digital Inputs\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1180,
        "y": 300,
        "wires": [
            [
                "9b45753bf6ad0a27"
            ]
        ]
    },
    {
        "id": "03dc7af723724342",
        "type": "change",
        "z": "cadcef1c8b97565d",
        "g": "562971a2a1395d1f",
        "name": "Linking to the DO flow",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"tab\" : \"Digital Outputs\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1180,
        "y": 340,
        "wires": [
            [
                "9b45753bf6ad0a27"
            ]
        ]
    },
    {
        "id": "9b45753bf6ad0a27",
        "type": "ui_ui_control",
        "z": "cadcef1c8b97565d",
        "g": "562971a2a1395d1f",
        "name": "",
        "events": "change",
        "x": 1520,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "77f2a07df446733a",
        "type": "ui_button",
        "z": "cadcef1c8b97565d",
        "g": "562971a2a1395d1f",
        "name": "",
        "group": "49af5de3222b52f6",
        "order": 12,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "Analog Input",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 910,
        "y": 260,
        "wires": [
            [
                "e81c653ba3189836"
            ]
        ]
    },
    {
        "id": "d101e9d44b20ef62",
        "type": "ui_button",
        "z": "cadcef1c8b97565d",
        "g": "562971a2a1395d1f",
        "name": "",
        "group": "49af5de3222b52f6",
        "order": 24,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "Digital Input",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 910,
        "y": 300,
        "wires": [
            [
                "e39f7d8d1358f151"
            ]
        ]
    },
    {
        "id": "499be2230dd367f7",
        "type": "ui_button",
        "z": "cadcef1c8b97565d",
        "g": "562971a2a1395d1f",
        "name": "",
        "group": "49af5de3222b52f6",
        "order": 25,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "Digital Outputs",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 900,
        "y": 340,
        "wires": [
            [
                "03dc7af723724342"
            ]
        ]
    },
    {
        "id": "7040aa4d4c527c47",
        "type": "ui_button",
        "z": "cadcef1c8b97565d",
        "g": "562971a2a1395d1f",
        "name": "",
        "group": "49af5de3222b52f6",
        "order": 11,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "Energy Meter",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 900,
        "y": 380,
        "wires": [
            [
                "5fe31866a28e0e84"
            ]
        ]
    },
    {
        "id": "5fe31866a28e0e84",
        "type": "change",
        "z": "cadcef1c8b97565d",
        "g": "562971a2a1395d1f",
        "name": "Linking to the Energy Meter flow",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"tab\":\"Energy Meter\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1210,
        "y": 380,
        "wires": [
            [
                "9b45753bf6ad0a27"
            ]
        ]
    },
    {
        "id": "c93fe699ade7c84b",
        "type": "ui_media",
        "z": "cadcef1c8b97565d",
        "g": "746fe73aa459f946",
        "group": "49af5de3222b52f6",
        "name": "Analog Input image",
        "width": 6,
        "height": 3,
        "order": 4,
        "category": "Analog Input",
        "file": "analog Input.jpg",
        "layout": "center",
        "showcontrols": true,
        "loop": true,
        "onstart": false,
        "scope": "local",
        "tooltip": "",
        "x": 850,
        "y": 640,
        "wires": [
            [
                "6fed24810e7a3207"
            ]
        ]
    },
    {
        "id": "6fed24810e7a3207",
        "type": "ui_media",
        "z": "cadcef1c8b97565d",
        "g": "746fe73aa459f946",
        "group": "49af5de3222b52f6",
        "name": "Digital Input Image",
        "width": 6,
        "height": 3,
        "order": 16,
        "category": "Digital Input",
        "file": "digital input.png",
        "layout": "adjust",
        "showcontrols": true,
        "loop": true,
        "onstart": false,
        "scope": "local",
        "tooltip": "",
        "x": 1170,
        "y": 640,
        "wires": [
            [
                "727da1d79f9cb827"
            ]
        ]
    },
    {
        "id": "8a7abb84372dd6cc",
        "type": "ui_media",
        "z": "cadcef1c8b97565d",
        "g": "746fe73aa459f946",
        "group": "49af5de3222b52f6",
        "name": "Digital Output Image",
        "width": 6,
        "height": 3,
        "order": 17,
        "category": "Digital Output",
        "file": "digital output.png",
        "layout": "adjust",
        "showcontrols": true,
        "loop": true,
        "onstart": false,
        "scope": "local",
        "tooltip": "",
        "x": 1160,
        "y": 740,
        "wires": [
            [
                "3b7aa8b6b5364091"
            ]
        ]
    },
    {
        "id": "727da1d79f9cb827",
        "type": "ui_media",
        "z": "cadcef1c8b97565d",
        "g": "746fe73aa459f946",
        "group": "49af5de3222b52f6",
        "name": "Energy Meter Image",
        "width": 6,
        "height": 3,
        "order": 3,
        "category": "Energy Meter",
        "file": "energy meter.jpg",
        "layout": "adjust",
        "showcontrols": true,
        "loop": true,
        "onstart": false,
        "scope": "local",
        "tooltip": "",
        "x": 920,
        "y": 740,
        "wires": [
            [
                "8a7abb84372dd6cc"
            ]
        ]
    },
    {
        "id": "3b7aa8b6b5364091",
        "type": "ui_text",
        "z": "cadcef1c8b97565d",
        "g": "746fe73aa459f946",
        "group": "49af5de3222b52f6",
        "order": 28,
        "width": 22,
        "height": 1,
        "name": "Below Blank Space Text",
        "label": "",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1010,
        "y": 820,
        "wires": []
    },
    {
        "id": "061d8d545ed3e7c3",
        "type": "function",
        "z": "12a45c02a0c64fe9",
        "g": "573424824436e8ab",
        "name": "AI01 Accessing Data Function",
        "func": "// create one variable and assign it the AI01 value;\n\nvar AI_01 = msg.payload.AI01;\nvar newStr = AI_01.replace(/^0+(?=\\d*\\.\\d+)/, \"\");\nif (newStr === \"\") {\n\n    newStr = \"0\";\n} else if (newStr.startsWith(\".\")) {\n    newStr = \"0\" + newStr;\n}\n\n// create object\nvar msg1 = {};\n\n// inject variable value to the payload of object\nmsg1.payload = newStr;\n\n// give output as a msg1\nconsole.log(msg1.payload)\nconsole.log(\"msg1.payload\");\nreturn msg1;\n\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 930,
        "y": 640,
        "wires": [
            [
                "ea588878d82cc1d8",
                "d252a157f0acf877"
            ]
        ]
    },
    {
        "id": "9019e3b114c0dc27",
        "type": "ui_chart",
        "z": "12a45c02a0c64fe9",
        "g": "573424824436e8ab",
        "name": "AI02 Chart",
        "group": "4fe2c62974bb15b6",
        "order": 11,
        "width": 6,
        "height": 4,
        "label": "AI02",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#be51e6",
            "#aec7e8",
            "#b47946",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1350,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "21fa519085759197",
        "type": "ui_chart",
        "z": "12a45c02a0c64fe9",
        "g": "573424824436e8ab",
        "name": "AI03 Chart",
        "group": "4fe2c62974bb15b6",
        "order": 12,
        "width": 6,
        "height": 4,
        "label": "AI03",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#f75026",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#86ee72",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1350,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "0608e6f6dff7fc05",
        "type": "ui_chart",
        "z": "12a45c02a0c64fe9",
        "g": "573424824436e8ab",
        "name": "AI08 Chart",
        "group": "4fe2c62974bb15b6",
        "order": 26,
        "width": 6,
        "height": 4,
        "label": "AI08",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#65d719",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1350,
        "y": 1360,
        "wires": [
            []
        ]
    },
    {
        "id": "73b92bf5475504ef",
        "type": "ui_chart",
        "z": "12a45c02a0c64fe9",
        "g": "573424824436e8ab",
        "name": "AI04 Chart",
        "group": "4fe2c62974bb15b6",
        "order": 13,
        "width": 6,
        "height": 4,
        "label": "AI04",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#2de6d1",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#86ee72",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1350,
        "y": 960,
        "wires": [
            []
        ]
    },
    {
        "id": "d43d7cc189600610",
        "type": "ui_chart",
        "z": "12a45c02a0c64fe9",
        "g": "573424824436e8ab",
        "name": "AI05 Chart",
        "group": "4fe2c62974bb15b6",
        "order": 23,
        "width": 6,
        "height": 4,
        "label": "AI05",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#4fdea0",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#86ee72",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1350,
        "y": 1060,
        "wires": [
            []
        ]
    },
    {
        "id": "98039dfcc2634192",
        "type": "ui_chart",
        "z": "12a45c02a0c64fe9",
        "g": "573424824436e8ab",
        "name": "AI07 Chart",
        "group": "4fe2c62974bb15b6",
        "order": 25,
        "width": 6,
        "height": 4,
        "label": "AI07",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ebf82a",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#86ee72",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1350,
        "y": 1260,
        "wires": [
            []
        ]
    },
    {
        "id": "c954b54511723ecf",
        "type": "ui_chart",
        "z": "12a45c02a0c64fe9",
        "g": "573424824436e8ab",
        "name": "AI06 Chart",
        "group": "4fe2c62974bb15b6",
        "order": 24,
        "width": 6,
        "height": 4,
        "label": "AI06",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#db1492",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#86ee72",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1350,
        "y": 1160,
        "wires": [
            []
        ]
    },
    {
        "id": "70fb4845a5497fa2",
        "type": "mysql",
        "z": "12a45c02a0c64fe9",
        "g": "25c418f90e64c1ff",
        "mydb": "ea4292e54e9739dd",
        "name": "Database",
        "x": 1240,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "c2cd6bfb56f4fa8e",
        "type": "function",
        "z": "12a45c02a0c64fe9",
        "g": "573424824436e8ab",
        "name": "AI08AccessingDataFunction",
        "func": "// create one variable and assign it the AI08 value;\nvar AI_08 = msg.payload.AI08;\nvar newStr = AI_08.replace(/^0+(?=\\d*\\.\\d+)/, \"\");\nif (newStr === \"\") {\n\n    newStr = \"0\";\n} else if (newStr.startsWith(\".\")) {\n    newStr = \"0\" + newStr;\n}\n\n\n\n// create object\nvar msg8 = {};\n\n// inject variable value to the payload of object\nmsg8.payload = newStr;\n\n// give output as a msg8\nreturn msg8;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 1340,
        "wires": [
            [
                "0608e6f6dff7fc05",
                "afafe612342113d6"
            ]
        ]
    },
    {
        "id": "aef9da3af3fec4fc",
        "type": "function",
        "z": "12a45c02a0c64fe9",
        "g": "573424824436e8ab",
        "name": "AI07AccessingDataFunction",
        "func": "// create one variable and assign it the AI07 value;\nvar AI_07 = msg.payload.AI07;\nvar newStr = AI_07.replace(/^0+(?=\\d*\\.\\d+)/, \"\");\nif (newStr === \"\") {\n\n    newStr = \"0\";\n} else if (newStr.startsWith(\".\")) {\n    newStr = \"0\" + newStr;\n}\n\n\n\n// create object\nvar msg7 = {};\n\n// inject variable value to the payload of object\nmsg7.payload = newStr;\n\n// give output as a msg7\nreturn msg7;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 1240,
        "wires": [
            [
                "98039dfcc2634192",
                "28a61903c3817220"
            ]
        ]
    },
    {
        "id": "fdfc94d02e19eac3",
        "type": "function",
        "z": "12a45c02a0c64fe9",
        "g": "573424824436e8ab",
        "name": "AI06AccessingDataFunction",
        "func": "// create one variable and assign it the AI06 value;\nvar AI_06 = msg.payload.AI06;\nvar newStr = AI_06.replace(/^0+(?=\\d*\\.\\d+)/, \"\");\nif (newStr === \"\") {\n\n    newStr = \"0\";\n} else if (newStr.startsWith(\".\")) {\n    newStr = \"0\" + newStr;\n}\n\n\n// create object\nvar msg6 = {};\n\n// inject variable value to the payload of object\nmsg6.payload = newStr;\n\n// give output as a msg6\nreturn msg6;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 1140,
        "wires": [
            [
                "c954b54511723ecf",
                "2be4992e8ac60f18"
            ]
        ]
    },
    {
        "id": "ef6265836635a9bc",
        "type": "function",
        "z": "12a45c02a0c64fe9",
        "g": "573424824436e8ab",
        "name": "AI05AccessingDataFunction",
        "func": "// create one variable and assign it the AI05 value;\nvar AI_05 = msg.payload.AI05;\nvar newStr = AI_05.replace(/^0+(?=\\d*\\.\\d+)/, \"\");\nif (newStr === \"\") {\n\n    newStr = \"0\";\n} else if (newStr.startsWith(\".\")) {\n    newStr = \"0\" + newStr;\n}\n\n\n\n// create object\nvar msg5 = {};\n\n// inject variable value to the payload of object\nmsg5.payload = newStr;\n\n// give output as a msg5\nreturn msg5;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 1040,
        "wires": [
            [
                "d43d7cc189600610",
                "fb607e860751b71b"
            ]
        ]
    },
    {
        "id": "cdd8f52ae1ea6869",
        "type": "function",
        "z": "12a45c02a0c64fe9",
        "g": "573424824436e8ab",
        "name": "AI04AccessingDataFunction",
        "func": "// create one variable and assign it the AI04 value;\nvar AI_04 = msg.payload.AI04;\nvar newStr = AI_04.replace(/[-+]?(\\d+(\\.\\d*)?)(?!\\b\\in\\b\\s*(?:[^\\d\\s]+|\\s*\\d+\\.\\d*)\\b)/g, \"\");\nif (newStr === \"\") {\n\n    newStr = \"0\";\n} else if (newStr.startsWith(\".\")){\n    newStr = \"0\" + newStr;\n}\n\n\n\n// create object \nvar msg4 = {};\n\n// inject variable value to the payload of object\nmsg4.payload = newStr;\n\n// give output as a msg4\nreturn msg4;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 940,
        "wires": [
            [
                "73b92bf5475504ef",
                "3ca2442b8bef5dab"
            ]
        ]
    },
    {
        "id": "bede445bb60c8b7f",
        "type": "function",
        "z": "12a45c02a0c64fe9",
        "g": "573424824436e8ab",
        "name": "AI03AccessingDataFunction",
        "func": "// create one variable and assign it the AI03 value;\nvar AI_03 = msg.payload.AI03;\nvar newStr = AI_03.replace(/^0+(?=\\d*\\.\\d+)/, \"\");\nif (newStr === \"\") {\n\n    newStr = \"0\";\n} else if (newStr.startsWith(\".\")) {\n    newStr = \"0\" + newStr;\n}\n\n// create object\nvar msg3 = {};\n\n// inject variable value to the payload of object\nmsg3.payload = newStr;\n\n// give output as a msg1\nreturn msg3;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 840,
        "wires": [
            [
                "21fa519085759197",
                "88ffcaa741a4e4c1"
            ]
        ]
    },
    {
        "id": "cd9f97e06ce76eac",
        "type": "function",
        "z": "12a45c02a0c64fe9",
        "g": "573424824436e8ab",
        "name": "AI02AccessingDataFunction",
        "func": "// create one variable and assign it the AI02 value;\nvar AI_02 = msg.payload.AI02;\nvar newStr = AI_02.replace(/^0+(?=\\d*\\.\\d+)/, \"\");\nif (newStr === \"\") {\n\n    newStr = \"0\";\n} else if (newStr.startsWith(\".\")) {\n    newStr = \"0\" + newStr;\n}\n\n// create object\n\n\n// create object\nvar msg2 = {};\n\n// inject variable value to the payload of object\nmsg2.payload = newStr;\n\n// give output as a msg2\nreturn msg2;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 740,
        "wires": [
            [
                "9019e3b114c0dc27",
                "5b5bcae07bb5c02c"
            ]
        ]
    },
    {
        "id": "ea588878d82cc1d8",
        "type": "ui_chart",
        "z": "12a45c02a0c64fe9",
        "g": "573424824436e8ab",
        "name": "AI01 Chart",
        "group": "4fe2c62974bb15b6",
        "order": 10,
        "width": 6,
        "height": 4,
        "label": "AI01",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1350,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "547f8fb5673ee257",
        "type": "ui_button",
        "z": "12a45c02a0c64fe9",
        "g": "4d6b70619c6303f3",
        "name": "HomeButton",
        "group": "4fe2c62974bb15b6",
        "order": 6,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-home fa-3x",
        "payload": "MainDashboard",
        "payloadType": "flow",
        "topic": "topic",
        "topicType": "msg",
        "x": 770,
        "y": 140,
        "wires": [
            [
                "f29d6a6ea9b859c1"
            ]
        ],
        "info": "<button id=\"btn\">\r\n<button>\r\n<style>\r\n.btn{\r\n    font-size:50px;\r\n}\r\n</style>\r\n"
    },
    {
        "id": "1314546855e36edc",
        "type": "ui_text",
        "z": "12a45c02a0c64fe9",
        "g": "4d6b70619c6303f3",
        "group": "4fe2c62974bb15b6",
        "order": 3,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "<font size=6>Analog Inputs",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 520,
        "y": 140,
        "wires": []
    },
    {
        "id": "f29d6a6ea9b859c1",
        "type": "change",
        "z": "12a45c02a0c64fe9",
        "g": "4d6b70619c6303f3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"tab\":\"Dashboard\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 980,
        "y": 140,
        "wires": [
            [
                "76f98e9ff882eb6d"
            ]
        ]
    },
    {
        "id": "76f98e9ff882eb6d",
        "type": "ui_ui_control",
        "z": "12a45c02a0c64fe9",
        "g": "4d6b70619c6303f3",
        "name": "",
        "events": "all",
        "x": 1180,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "88ffcaa741a4e4c1",
        "type": "ui_text",
        "z": "12a45c02a0c64fe9",
        "g": "573424824436e8ab",
        "group": "4350a2cad5b88dd0",
        "order": 20,
        "width": 5,
        "height": 1,
        "name": "AI03 Parameter Text",
        "label": "<b>AI03</b>",
        "format": "&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {{payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1380,
        "y": 820,
        "wires": []
    },
    {
        "id": "3ca2442b8bef5dab",
        "type": "ui_text",
        "z": "12a45c02a0c64fe9",
        "g": "573424824436e8ab",
        "group": "4350a2cad5b88dd0",
        "order": 24,
        "width": 5,
        "height": 1,
        "name": "AI04 Parameter Text",
        "label": "<b>AI04</b>",
        "format": "&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {{payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1380,
        "y": 920,
        "wires": []
    },
    {
        "id": "fb607e860751b71b",
        "type": "ui_text",
        "z": "12a45c02a0c64fe9",
        "g": "573424824436e8ab",
        "group": "4350a2cad5b88dd0",
        "order": 28,
        "width": 5,
        "height": 1,
        "name": "AI05 Parameter Text",
        "label": "<b>AI05</b>",
        "format": "&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {{payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1380,
        "y": 1020,
        "wires": []
    },
    {
        "id": "2be4992e8ac60f18",
        "type": "ui_text",
        "z": "12a45c02a0c64fe9",
        "g": "573424824436e8ab",
        "group": "4350a2cad5b88dd0",
        "order": 33,
        "width": 5,
        "height": 1,
        "name": "AI06 Parameter Text",
        "label": "<b>AI06</b>",
        "format": "&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {{payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1380,
        "y": 1120,
        "wires": []
    },
    {
        "id": "28a61903c3817220",
        "type": "ui_text",
        "z": "12a45c02a0c64fe9",
        "g": "573424824436e8ab",
        "group": "4350a2cad5b88dd0",
        "order": 37,
        "width": 5,
        "height": 1,
        "name": "AI07 Parameter Text",
        "label": "<b>AI07</b>",
        "format": "&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {{payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1380,
        "y": 1220,
        "wires": []
    },
    {
        "id": "afafe612342113d6",
        "type": "ui_text",
        "z": "12a45c02a0c64fe9",
        "g": "573424824436e8ab",
        "group": "4350a2cad5b88dd0",
        "order": 41,
        "width": 5,
        "height": 1,
        "name": "AI08 Parameter Text",
        "label": "<b>AI08</b>",
        "format": "&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {{payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1380,
        "y": 1320,
        "wires": []
    },
    {
        "id": "d252a157f0acf877",
        "type": "ui_text",
        "z": "12a45c02a0c64fe9",
        "g": "573424824436e8ab",
        "group": "4350a2cad5b88dd0",
        "order": 12,
        "width": 5,
        "height": 1,
        "name": "AI01 Parameter Text",
        "label": "<b>AI01</b>",
        "format": "&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {{payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1380,
        "y": 620,
        "wires": []
    },
    {
        "id": "5b5bcae07bb5c02c",
        "type": "ui_text",
        "z": "12a45c02a0c64fe9",
        "g": "573424824436e8ab",
        "group": "4350a2cad5b88dd0",
        "order": 16,
        "width": 5,
        "height": 1,
        "name": "AI02 Parameter Text",
        "label": "<b>AI02</b>",
        "format": "&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {{payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1380,
        "y": 720,
        "wires": []
    },
    {
        "id": "77c1a42d99835aa9",
        "type": "ui_text",
        "z": "12a45c02a0c64fe9",
        "g": "cf0a6c41cc925f39",
        "group": "4fe2c62974bb15b6",
        "order": 36,
        "width": 26,
        "height": 1,
        "name": "blank bottom space text",
        "label": "",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 970,
        "y": 1580,
        "wires": []
    },
    {
        "id": "0cd5246288a20af1",
        "type": "ui_text",
        "z": "12a45c02a0c64fe9",
        "group": "4350a2cad5b88dd0",
        "order": 7,
        "width": 3,
        "height": 1,
        "name": "heading parameter",
        "label": "",
        "format": "<font size = 5>Parameter",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 970,
        "y": 480,
        "wires": [],
        "info": "<h1>\r\nClick\r\n</h1>"
    },
    {
        "id": "6c55781474a430b8",
        "type": "ui_text",
        "z": "12a45c02a0c64fe9",
        "group": "4350a2cad5b88dd0",
        "order": 8,
        "width": 2,
        "height": 1,
        "name": "heading Values",
        "label": "",
        "format": "<font size = 5>Values",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1200,
        "y": 480,
        "wires": [],
        "info": "<h1>\r\nClick\r\n</h1>"
    },
    {
        "id": "8b51ea13339e44ac",
        "type": "ui_text",
        "z": "12a45c02a0c64fe9",
        "group": "4350a2cad5b88dd0",
        "order": 5,
        "width": 3,
        "height": 1,
        "name": "headingTimeStamp",
        "label": "",
        "format": "<font size = 5>TimeStamp",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 750,
        "y": 480,
        "wires": [],
        "info": "<h1>\r\nClick\r\n</h1>"
    },
    {
        "id": "5c13f05351446d8e",
        "type": "function",
        "z": "12a45c02a0c64fe9",
        "name": "Alloting data to Packets",
        "func": "if(msg.payload.AI01){\n\n    var date = new Date();\n    var year = date.getFullYear();\n    var month = date.getMonth() + 1;\n    var day = date.getDate();\n    var hours = date.getHours().toString().padStart(2, '0');\n    var minutes = date.getMinutes().toString().padStart(2, '0');\n    var seconds = date.getSeconds().toString().padStart(2, '0');\n\n    var fullformat = `${day.toString().padStart(2, '0')}-${month.toString().padStart(2, '0')}-${year}`;\n    var timeformat = `${hours}-${minutes}-${seconds}`;\n    msg.time = ` ${fullformat} &nbsp; &nbsp; ${timeformat}`;\nreturn msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 800,
        "wires": [
            [
                "061d8d545ed3e7c3",
                "cd9f97e06ce76eac",
                "bede445bb60c8b7f",
                "cdd8f52ae1ea6869",
                "ef6265836635a9bc",
                "fdfc94d02e19eac3",
                "aef9da3af3fec4fc",
                "c2cd6bfb56f4fa8e",
                "61005d7208d60b2b",
                "e969b6bb6e6bb3b5",
                "6aa6b7eb4072e74a",
                "2880a2b99922b161",
                "e805f2d90cfa3357",
                "2fa8d2ae10d3c790",
                "7da65b4a84d5a00d",
                "d01d3c04d587c467",
                "a105a45676f7a675"
            ]
        ]
    },
    {
        "id": "eb9a9184e98eef14",
        "type": "mqtt in",
        "z": "12a45c02a0c64fe9",
        "name": "Receiving Data From Mqtt",
        "topic": "INS/MBIOT_ETH/09995/UTILITY",
        "qos": "0",
        "datatype": "json",
        "broker": "665f18f8041514a1",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 110,
        "y": 620,
        "wires": [
            [
                "5c13f05351446d8e",
                "324c594592b32e57"
            ]
        ]
    },
    {
        "id": "61005d7208d60b2b",
        "type": "ui_text",
        "z": "12a45c02a0c64fe9",
        "g": "8e38933a15a2eb57",
        "group": "4350a2cad5b88dd0",
        "order": 11,
        "width": 5,
        "height": 1,
        "name": "AI01 Time",
        "label": "",
        "format": "{{msg.time}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 260,
        "y": 1400,
        "wires": [],
        "info": "<text></text>"
    },
    {
        "id": "e969b6bb6e6bb3b5",
        "type": "ui_text",
        "z": "12a45c02a0c64fe9",
        "g": "8e38933a15a2eb57",
        "group": "4350a2cad5b88dd0",
        "order": 15,
        "width": 5,
        "height": 1,
        "name": "AI02 Time",
        "label": "",
        "format": "{{msg.time}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 460,
        "y": 1400,
        "wires": [],
        "info": "<text></text>"
    },
    {
        "id": "6aa6b7eb4072e74a",
        "type": "ui_text",
        "z": "12a45c02a0c64fe9",
        "g": "8e38933a15a2eb57",
        "group": "4350a2cad5b88dd0",
        "order": 19,
        "width": 5,
        "height": 1,
        "name": "AI03 Time",
        "label": "",
        "format": "{{msg.time}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 260,
        "y": 1440,
        "wires": [],
        "info": "<text></text>"
    },
    {
        "id": "2880a2b99922b161",
        "type": "ui_text",
        "z": "12a45c02a0c64fe9",
        "g": "8e38933a15a2eb57",
        "group": "4350a2cad5b88dd0",
        "order": 23,
        "width": 5,
        "height": 1,
        "name": "AI04 Time",
        "label": "",
        "format": "{{msg.time}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 460,
        "y": 1440,
        "wires": [],
        "info": "<text></text>"
    },
    {
        "id": "e805f2d90cfa3357",
        "type": "ui_text",
        "z": "12a45c02a0c64fe9",
        "g": "8e38933a15a2eb57",
        "group": "4350a2cad5b88dd0",
        "order": 27,
        "width": 5,
        "height": 1,
        "name": "AI05 Time",
        "label": "",
        "format": "{{msg.time}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 260,
        "y": 1480,
        "wires": [],
        "info": "<text></text>"
    },
    {
        "id": "2fa8d2ae10d3c790",
        "type": "ui_text",
        "z": "12a45c02a0c64fe9",
        "g": "8e38933a15a2eb57",
        "group": "4350a2cad5b88dd0",
        "order": 32,
        "width": 5,
        "height": 1,
        "name": "AI06 Time",
        "label": "",
        "format": "{{msg.time}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 460,
        "y": 1480,
        "wires": [],
        "info": "<text></text>"
    },
    {
        "id": "7da65b4a84d5a00d",
        "type": "ui_text",
        "z": "12a45c02a0c64fe9",
        "g": "8e38933a15a2eb57",
        "group": "4350a2cad5b88dd0",
        "order": 36,
        "width": 5,
        "height": 1,
        "name": "AI07 Time",
        "label": "",
        "format": "{{msg.time}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 260,
        "y": 1520,
        "wires": [],
        "info": "<text></text>"
    },
    {
        "id": "d01d3c04d587c467",
        "type": "ui_text",
        "z": "12a45c02a0c64fe9",
        "g": "8e38933a15a2eb57",
        "group": "4350a2cad5b88dd0",
        "order": 40,
        "width": 5,
        "height": 1,
        "name": "AI08 Time",
        "label": "",
        "format": "{{msg.time}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 460,
        "y": 1520,
        "wires": [],
        "info": "<text></text>"
    },
    {
        "id": "a105a45676f7a675",
        "type": "ui_text",
        "z": "12a45c02a0c64fe9",
        "g": "cf0a6c41cc925f39",
        "group": "4350a2cad5b88dd0",
        "order": 44,
        "width": 0,
        "height": 0,
        "name": "Blank space",
        "label": "",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 750,
        "y": 1580,
        "wires": []
    },
    {
        "id": "324c594592b32e57",
        "type": "function",
        "z": "12a45c02a0c64fe9",
        "g": "25c418f90e64c1ff",
        "name": "Storing Data to DB",
        "func": "\nvar deviceid    = msg.payload.DEVID ;\nvar location    = msg.payload.LOC ;\nvar sno         = msg.payload.SNO ;\nvar comm        = msg.payload.COMM ;\nvar inst        = msg.payload.INST ;\n\nif(msg.payload.AI01){\n    var iotype = 'AI';\n}\n\nelse if(msg.payload.DI01){\n    var iotype = 'DI';\n}\n\nelse if(msg.payload.DO01){\n    var iotype = 'DO';\n}\n\nelse{\n    var iotype = 'E';\n}\n\nvar rawpacket = JSON.stringify(msg.payload);\n\nmsg.topic = `insert into iotdevicedata (DEVID , LOC , SNO , COMM , INST,  RAWPACKETS, IOTYPE ) values ('${deviceid}', '${location}', '${sno}', '${comm}', '${inst}', '${rawpacket}', '${iotype}');`\n\nreturn msg;\n\n\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 320,
        "wires": [
            [
                "70fb4845a5497fa2"
            ]
        ]
    },
    {
        "id": "ac46f2a4edb1817e",
        "type": "ui_button",
        "z": "12a45c02a0c64fe9",
        "g": "4d6b70619c6303f3",
        "name": "Analog Input Reports Button",
        "group": "4fe2c62974bb15b6",
        "order": 5,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-solid fa-table fa-3x",
        "payload": "MainDashboard",
        "payloadType": "flow",
        "topic": "topic",
        "topicType": "msg",
        "x": 820,
        "y": 80,
        "wires": [
            [
                "0fda901ebb2bc40c"
            ]
        ],
        "info": "<button id=\"btn\">\r\n<button>\r\n<style>\r\n.btn{\r\n    font-size:50px;\r\n}\r\n</style>\r\n"
    },
    {
        "id": "0fda901ebb2bc40c",
        "type": "change",
        "z": "12a45c02a0c64fe9",
        "g": "4d6b70619c6303f3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"tab\":\"Analog Input Reports\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1100,
        "y": 80,
        "wires": [
            [
                "76f98e9ff882eb6d"
            ]
        ]
    },
    {
        "id": "a119e9858c6345e0",
        "type": "ui_template",
        "z": "7df8dcd3568b0c28",
        "group": "0f5b01afb2f3a18c",
        "name": "DI06 Indicator",
        "order": 40,
        "width": 3,
        "height": 1,
        "format": "<div id=\"indicator6\">\n</div>\n<style>\n#indicator6{\n    width:25px;\n    height:25px;\n    border-radius:50%;\n    background-color:{{msg.payload}};  \n    margin-left:40px;\n    margin-top: 10px;\n}\n</style>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1480,
        "y": 1160,
        "wires": [
            []
        ]
    },
    {
        "id": "c8cea4e4c9c4467d",
        "type": "function",
        "z": "7df8dcd3568b0c28",
        "name": "Alloting Data to DI10 and Indicator",
        "func": "if(msg.payload.DI10==1){\n    msg.payload =\"green\";\n    return msg;\n\n}else{\n    msg.payload = \"#c22719\";\n    return msg;\n\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 1400,
        "wires": [
            [
                "7a4ce5b3ec6ddf9c",
                "4303fdfe75a1c546"
            ]
        ]
    },
    {
        "id": "2830975fe6fce819",
        "type": "mqtt in",
        "z": "7df8dcd3568b0c28",
        "name": "Receiving Data From Mqtt",
        "topic": "INS/MBIOT_ETH/09995/UTILITY",
        "qos": "0",
        "datatype": "json",
        "broker": "665f18f8041514a1",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 150,
        "y": 720,
        "wires": [
            [
                "f14e55d0d1f28cd9"
            ]
        ]
    },
    {
        "id": "f14e55d0d1f28cd9",
        "type": "function",
        "z": "7df8dcd3568b0c28",
        "name": "Allotting Values to Digital Tags",
        "func": "if(msg.payload.DI01){\nvar date = new Date();\nvar year = date.getFullYear();\nvar month = date.getMonth() + 1;\nvar day = date.getDate();\nvar hours = date.getHours().toString().padStart(2, '0');\nvar minutes = date.getMinutes().toString().padStart(2, '0');\nvar seconds = date.getSeconds().toString().padStart(2, '0');\n\nvar fullformat = `${day.toString().padStart(2, '0')}-${month.toString().padStart(2, '0')}-${year}`;\nvar timeformat = `${hours} : ${minutes} : ${seconds}`;\nmsg.time =` ${fullformat} &nbsp; &nbsp; ${timeformat}`;\n\n    return msg;\n    \n}\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 900,
        "wires": [
            [
                "7659e1269063e2b0",
                "3186b302aad8b0c0",
                "6b7e7b96192cd2f3",
                "86be48b4287d8995",
                "9314959d82b4a773",
                "0bfe6c11008c334a",
                "997781a1a67454e4",
                "771dde2b2196e71c",
                "c8cea4e4c9c4467d",
                "d8e5f7c8d2c1effa",
                "bbab63dfdf671895",
                "9ad33431d73667c0",
                "6731c490c36e6a27",
                "335a313373625858",
                "285f93ac69df70b0",
                "dab2ac9aabed3d03",
                "5d4eb560dda53e1f",
                "2f03da309d6c62f0",
                "0156988b62d0e36e",
                "694f909517e0333b",
                "a589a98fabe7738c",
                "e2118cf978c77976",
                "954c4c34e70dfde4",
                "d0989e75bbd9d3f1"
            ]
        ]
    },
    {
        "id": "7659e1269063e2b0",
        "type": "function",
        "z": "7df8dcd3568b0c28",
        "name": "Alloting Data to DI01 and Indicator",
        "func": "if(msg.payload.DI01==1){\n    msg.payload =\"green\";\n    return msg;\n}else{\n    msg.payload = \"#c22719\";\n    return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 860,
        "wires": [
            [
                "20c2b6f25377fe89",
                "61f9d8d7ebe27f4e"
            ]
        ]
    },
    {
        "id": "3186b302aad8b0c0",
        "type": "function",
        "z": "7df8dcd3568b0c28",
        "name": "Alloting Data to DI02 and Indicator",
        "func": "if(msg.payload.DI02==1){\n    msg.payload =\"green\";\n    return msg;\n}else{\n    msg.payload = \"#c22719\";\n    return msg;\n}\n// return msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 920,
        "wires": [
            [
                "a2ce6d3c88b6f715",
                "bd89a4845a789a72"
            ]
        ]
    },
    {
        "id": "6b7e7b96192cd2f3",
        "type": "function",
        "z": "7df8dcd3568b0c28",
        "name": "Alloting Data to DI03 and Indicator",
        "func": "if(msg.payload.DI03==1){\n    msg.payload =\"green\";\n    return msg;\n}else{\n    msg.payload = \"#c22719\";\n    return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 980,
        "wires": [
            [
                "710cc2e24facc4d2",
                "707995086c8b8681"
            ]
        ]
    },
    {
        "id": "86be48b4287d8995",
        "type": "function",
        "z": "7df8dcd3568b0c28",
        "name": "Alloting Data to DI04 and Indicator",
        "func": "if(msg.payload.DI04==1){\n    msg.payload =\"green\";\n    return msg;\n}else{\n    msg.payload = \"#c22719\";\n    return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 1040,
        "wires": [
            [
                "b32dc827e9b440da",
                "64877707b8595d2e"
            ]
        ]
    },
    {
        "id": "9314959d82b4a773",
        "type": "function",
        "z": "7df8dcd3568b0c28",
        "name": "Alloting Data to DI05 and Indicator",
        "func": "if(msg.payload.DI05==1){\n    msg.payload =\"green\";\n    return msg;\n}else{\n    msg.payload = \"#c22719\";\n    return msg;\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 1100,
        "wires": [
            [
                "cce8d35e40d15609",
                "8502dd5674427bf3"
            ]
        ]
    },
    {
        "id": "9ad33431d73667c0",
        "type": "function",
        "z": "7df8dcd3568b0c28",
        "name": "Alloting Data to DI06 and Indicator",
        "func": "if(msg.payload.DI06==1){\n    msg.payload =\"green\";\n    return msg;\n\n}else{\n    msg.payload = \"#c22719\";\n    return msg;\n\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 1160,
        "wires": [
            [
                "ecd2304409f85f27",
                "a119e9858c6345e0"
            ]
        ]
    },
    {
        "id": "0bfe6c11008c334a",
        "type": "function",
        "z": "7df8dcd3568b0c28",
        "name": "Alloting Data to DI07 and Indicator",
        "func": "if(msg.payload.DI07==1){\n    msg.payload =\"green\";\n    return msg;\n}else{\n    msg.payload = \"#c22719\";\n    return msg;\n\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 1220,
        "wires": [
            [
                "c296438c0e80239b",
                "6e7b70ccaf786868"
            ]
        ]
    },
    {
        "id": "997781a1a67454e4",
        "type": "function",
        "z": "7df8dcd3568b0c28",
        "name": "Alloting Data to DI08 and Indicator",
        "func": "if(msg.payload.DI08==1){\n    msg.payload =\"green\";\n    return msg;\n\n}else{\n    msg.payload = \"#c22719\";\n    return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 1280,
        "wires": [
            [
                "861cfd63e2bf2ae1",
                "2514d17aabb63b4a"
            ]
        ]
    },
    {
        "id": "771dde2b2196e71c",
        "type": "function",
        "z": "7df8dcd3568b0c28",
        "name": "Alloting Data to DI09 and Indicator",
        "func": "if(msg.payload.DI09==1){\n    msg.payload =\"green\";\n    return msg;\n\n\n}else{\n    msg.payload = \"#c22719\";\n    return msg;\n\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 1340,
        "wires": [
            [
                "3f2e7bf6ca8a1677",
                "76486b38b4b1c9d8"
            ]
        ]
    },
    {
        "id": "d8e5f7c8d2c1effa",
        "type": "function",
        "z": "7df8dcd3568b0c28",
        "name": "Alloting Data to DI11 and Indicator",
        "func": "if(msg.payload.DI11==1){\n    msg.payload =\"green\";\n    return msg;\n\n}else{\n    msg.payload = \"#c22719\";\n    return msg;\n\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 1460,
        "wires": [
            [
                "5d23fb51178b6fdd",
                "653a7bd1c7740adb"
            ]
        ]
    },
    {
        "id": "bbab63dfdf671895",
        "type": "function",
        "z": "7df8dcd3568b0c28",
        "name": "Alloting Data to DI12 and Indicator",
        "func": "if(msg.payload.DI12==1){\n    msg.payload =\"green\";\n    return msg;\n\n}else{\n    msg.payload = \"#c22719\";\n    return msg;\n\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 1520,
        "wires": [
            [
                "d1b37120e86ed1a5",
                "5de09d41dafc42cf"
            ]
        ]
    },
    {
        "id": "61f9d8d7ebe27f4e",
        "type": "ui_text",
        "z": "7df8dcd3568b0c28",
        "group": "0f5b01afb2f3a18c",
        "order": 14,
        "width": 3,
        "height": 1,
        "name": "DI01 Label",
        "label": "<b>DI01</b>     ",
        "format": "",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1210,
        "y": 860,
        "wires": []
    },
    {
        "id": "20c2b6f25377fe89",
        "type": "ui_template",
        "z": "7df8dcd3568b0c28",
        "group": "0f5b01afb2f3a18c",
        "name": "DI01 Indicator",
        "order": 15,
        "width": 3,
        "height": 1,
        "format": "<div id=\"indicator1\">\n</div>\n<style>\n#indicator1{\n    width:25px;\n    height:25px;\n    border-radius:50%;\n    background-color:{{msg.payload}};  \n    text-align:center; \n    margin-left:40px;\n    margin-top: 11px;\n}\n</style>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1480,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "a2ce6d3c88b6f715",
        "type": "ui_text",
        "z": "7df8dcd3568b0c28",
        "group": "0f5b01afb2f3a18c",
        "order": 19,
        "width": 3,
        "height": 1,
        "name": "DI02 Label",
        "label": "<b>DI02</b>",
        "format": "",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1210,
        "y": 920,
        "wires": []
    },
    {
        "id": "bd89a4845a789a72",
        "type": "ui_template",
        "z": "7df8dcd3568b0c28",
        "group": "0f5b01afb2f3a18c",
        "name": "DI02 Indicator",
        "order": 20,
        "width": 3,
        "height": 1,
        "format": "<div id=\"indicator2\">\n</div>\n<style>\n#indicator2{\n    width:25px;\n    height:25px;\n    border-radius:50%;\n    background-color:{{msg.payload}};\n    margin-left:40px;\n    margin-top: 10px;\n}\n</style>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1480,
        "y": 920,
        "wires": [
            []
        ]
    },
    {
        "id": "710cc2e24facc4d2",
        "type": "ui_text",
        "z": "7df8dcd3568b0c28",
        "group": "0f5b01afb2f3a18c",
        "order": 24,
        "width": 3,
        "height": 1,
        "name": "DI03 Label",
        "label": "<b>DI03</b>",
        "format": "",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1210,
        "y": 980,
        "wires": []
    },
    {
        "id": "707995086c8b8681",
        "type": "ui_template",
        "z": "7df8dcd3568b0c28",
        "group": "0f5b01afb2f3a18c",
        "name": "DI03 Indicator",
        "order": 25,
        "width": 3,
        "height": 1,
        "format": "<div id=\"indicator3\">\n</div>\n<style>\n#indicator3{\n    width:25px;\n    height:25px;\n    border-radius:50%;\n    background-color:{{msg.payload}}; \n    margin-left:40px;\n    margin-top: 10px;\n}\n</style>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1480,
        "y": 980,
        "wires": [
            []
        ]
    },
    {
        "id": "b32dc827e9b440da",
        "type": "ui_text",
        "z": "7df8dcd3568b0c28",
        "group": "0f5b01afb2f3a18c",
        "order": 29,
        "width": 3,
        "height": 1,
        "name": "DI04 Label",
        "label": "<b>DI04</b>",
        "format": "",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1210,
        "y": 1040,
        "wires": []
    },
    {
        "id": "64877707b8595d2e",
        "type": "ui_template",
        "z": "7df8dcd3568b0c28",
        "group": "0f5b01afb2f3a18c",
        "name": "DI04 Indicator",
        "order": 30,
        "width": 3,
        "height": 1,
        "format": "<div id=\"indicator4\">\n</div>\n<style>\n#indicator4{\n    width:25px;\n    height:25px;\n    border-radius:50%;\n    background-color:{{msg.payload}};\n    margin-left:40px;\n    margin-top: 10px;\n}\n</style>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1480,
        "y": 1040,
        "wires": [
            []
        ]
    },
    {
        "id": "cce8d35e40d15609",
        "type": "ui_text",
        "z": "7df8dcd3568b0c28",
        "group": "0f5b01afb2f3a18c",
        "order": 34,
        "width": 3,
        "height": 1,
        "name": "DI05 Label",
        "label": "<b>DI05</b>",
        "format": "",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1210,
        "y": 1100,
        "wires": []
    },
    {
        "id": "8502dd5674427bf3",
        "type": "ui_template",
        "z": "7df8dcd3568b0c28",
        "group": "0f5b01afb2f3a18c",
        "name": "DI05 Indicator",
        "order": 35,
        "width": 3,
        "height": 1,
        "format": "<div id=\"indicator5\">\n</div>\n<style>\n#indicator5{\n    width:25px;\n    height:25px;\n    border-radius:50%;\n    background-color:{{msg.payload}};\n    margin-left:40px;\n    margin-top: 10px;\n}\n</style>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1480,
        "y": 1100,
        "wires": [
            []
        ]
    },
    {
        "id": "ecd2304409f85f27",
        "type": "ui_text",
        "z": "7df8dcd3568b0c28",
        "group": "0f5b01afb2f3a18c",
        "order": 39,
        "width": 3,
        "height": 1,
        "name": "DI06 Label",
        "label": "<b>DI06</b>",
        "format": "",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1210,
        "y": 1160,
        "wires": []
    },
    {
        "id": "c296438c0e80239b",
        "type": "ui_text",
        "z": "7df8dcd3568b0c28",
        "group": "0f5b01afb2f3a18c",
        "order": 44,
        "width": 3,
        "height": 1,
        "name": "DI07 Label",
        "label": "<b>DI07</b>",
        "format": "",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1210,
        "y": 1220,
        "wires": []
    },
    {
        "id": "6e7b70ccaf786868",
        "type": "ui_template",
        "z": "7df8dcd3568b0c28",
        "group": "0f5b01afb2f3a18c",
        "name": "DI07 Indicator",
        "order": 45,
        "width": 3,
        "height": 1,
        "format": "<div id=\"indicator7\">\n</div>\n<style>\n#indicator7{\n    width:25px;\n    height:25px;\n    border-radius:50%;\n    background-color:{{msg.payload}};\n    margin-left:40px;\n    margin-top: 10px;\n}\n</style>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1480,
        "y": 1220,
        "wires": [
            []
        ]
    },
    {
        "id": "861cfd63e2bf2ae1",
        "type": "ui_text",
        "z": "7df8dcd3568b0c28",
        "group": "0f5b01afb2f3a18c",
        "order": 49,
        "width": 3,
        "height": 1,
        "name": "DI08 Label",
        "label": "<b>DI08</b>",
        "format": "",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1210,
        "y": 1280,
        "wires": []
    },
    {
        "id": "2514d17aabb63b4a",
        "type": "ui_template",
        "z": "7df8dcd3568b0c28",
        "group": "0f5b01afb2f3a18c",
        "name": "DI08 Indicator",
        "order": 50,
        "width": 3,
        "height": 1,
        "format": "<div id=\"indicator8\">\n</div>\n<style>\n#indicator8{\n    width:25px;\n    height:25px;\n    border-radius:50%;\n    background-color:{{msg.payload}};\n    margin-left:40px;\n    margin-top: 10px;\n}\n</style>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1480,
        "y": 1280,
        "wires": [
            []
        ]
    },
    {
        "id": "3f2e7bf6ca8a1677",
        "type": "ui_text",
        "z": "7df8dcd3568b0c28",
        "group": "0f5b01afb2f3a18c",
        "order": 54,
        "width": 3,
        "height": 1,
        "name": "DI09 Label",
        "label": "<b>DI09</b>",
        "format": "",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1210,
        "y": 1340,
        "wires": []
    },
    {
        "id": "76486b38b4b1c9d8",
        "type": "ui_template",
        "z": "7df8dcd3568b0c28",
        "group": "0f5b01afb2f3a18c",
        "name": "DI09 Indicator",
        "order": 55,
        "width": 3,
        "height": 1,
        "format": "<div id=\"indicator9\">\n</div>\n<style>\n#indicator9{\n    width:25px;\n    height:25px;\n    border-radius:50%;\n    background-color:{{msg.payload}}; \n    margin-left:40px;\n    margin-top: 10px;\n}\n</style>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1480,
        "y": 1340,
        "wires": [
            []
        ]
    },
    {
        "id": "7a4ce5b3ec6ddf9c",
        "type": "ui_text",
        "z": "7df8dcd3568b0c28",
        "group": "0f5b01afb2f3a18c",
        "order": 59,
        "width": 3,
        "height": 1,
        "name": "DI10 Label",
        "label": "<b>DI10</b>",
        "format": "",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1210,
        "y": 1400,
        "wires": []
    },
    {
        "id": "4303fdfe75a1c546",
        "type": "ui_template",
        "z": "7df8dcd3568b0c28",
        "group": "0f5b01afb2f3a18c",
        "name": "DI10 Indicator",
        "order": 60,
        "width": 3,
        "height": 1,
        "format": "<div id=\"indicator10\">\n</div>\n<style>\n#indicator10{\n    width:25px;\n    height:25px;\n    border-radius:50%;\n    background-color:{{msg.payload}}; \n    margin-left:40px;\n    margin-top: 10px;\n\n}\n</style>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1480,
        "y": 1400,
        "wires": [
            []
        ]
    },
    {
        "id": "5d23fb51178b6fdd",
        "type": "ui_text",
        "z": "7df8dcd3568b0c28",
        "group": "0f5b01afb2f3a18c",
        "order": 64,
        "width": 3,
        "height": 1,
        "name": "DI11 Label",
        "label": "<b>DI11</b>",
        "format": "",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1210,
        "y": 1460,
        "wires": []
    },
    {
        "id": "653a7bd1c7740adb",
        "type": "ui_template",
        "z": "7df8dcd3568b0c28",
        "group": "0f5b01afb2f3a18c",
        "name": "DI11 Indicator",
        "order": 65,
        "width": 3,
        "height": 1,
        "format": "<div id=\"indicator11\">\n</div>\n<style>\n#indicator11{\n    width:25px;\n    height:25px;\n    border-radius:50%;\n    background-color:{{msg.payload}};\n    margin-left:40px;\n    margin-top: 10px;\n\n}\n</style>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1480,
        "y": 1460,
        "wires": [
            []
        ]
    },
    {
        "id": "d1b37120e86ed1a5",
        "type": "ui_text",
        "z": "7df8dcd3568b0c28",
        "group": "0f5b01afb2f3a18c",
        "order": 69,
        "width": 3,
        "height": 1,
        "name": "DI12 Label",
        "label": "<b>DI12</b>",
        "format": "",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1210,
        "y": 1520,
        "wires": []
    },
    {
        "id": "5de09d41dafc42cf",
        "type": "ui_template",
        "z": "7df8dcd3568b0c28",
        "group": "0f5b01afb2f3a18c",
        "name": "DI12 Indicator",
        "order": 70,
        "width": 3,
        "height": 1,
        "format": "<div id=\"indicator12\">\n</div>\n<style>\n#indicator12{\n    width:25px;\n    height:25px;\n    border-radius:50%;\n    background-color:{{msg.payload}};\n    margin-left:40px;\n    margin-top: 10px;\n}\n</style>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1480,
        "y": 1520,
        "wires": [
            []
        ]
    },
    {
        "id": "a12c05b9325a7ac0",
        "type": "ui_text",
        "z": "7df8dcd3568b0c28",
        "g": "587d35133a0589f4",
        "group": "0f5b01afb2f3a18c",
        "order": 1,
        "width": 6,
        "height": 1,
        "name": "Digital Inputs",
        "label": "<font size=6>Digital Inputs",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 590,
        "y": 120,
        "wires": []
    },
    {
        "id": "46047c19e248360c",
        "type": "ui_button",
        "z": "7df8dcd3568b0c28",
        "g": "587d35133a0589f4",
        "name": "HomeButton",
        "group": "0f5b01afb2f3a18c",
        "order": 4,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-home fa-3x",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 1070,
        "y": 280,
        "wires": [
            [
                "23736984e18eb9a0"
            ]
        ],
        "info": "<button id=\"btn\">\r\n<button>\r\n<style>\r\n.btn{\r\n    font-size:50px;\r\n}\r\n</style>\r\n"
    },
    {
        "id": "7cc497f15984b8f1",
        "type": "ui_text",
        "z": "7df8dcd3568b0c28",
        "g": "587d35133a0589f4",
        "group": "0f5b01afb2f3a18c",
        "order": 10,
        "width": 2,
        "height": 1,
        "name": "Status",
        "label": "",
        "format": "<font size = 5>Status",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 730,
        "y": 280,
        "wires": []
    },
    {
        "id": "544af6e302726b84",
        "type": "ui_text",
        "z": "7df8dcd3568b0c28",
        "g": "587d35133a0589f4",
        "group": "0f5b01afb2f3a18c",
        "order": 8,
        "width": 3,
        "height": 1,
        "name": "Parameter",
        "label": "",
        "format": "<font size = 5>Parameters",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 590,
        "y": 280,
        "wires": [],
        "info": "<h1>\r\nClick\r\n</h1>"
    },
    {
        "id": "23736984e18eb9a0",
        "type": "change",
        "z": "7df8dcd3568b0c28",
        "g": "587d35133a0589f4",
        "name": "Load Home Dashboard",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"tab\":\"Dashboard\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1370,
        "y": 280,
        "wires": [
            [
                "1f4594762b3891b0"
            ]
        ]
    },
    {
        "id": "1f4594762b3891b0",
        "type": "ui_ui_control",
        "z": "7df8dcd3568b0c28",
        "g": "587d35133a0589f4",
        "name": "",
        "events": "all",
        "x": 1660,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "ba00bfa409db6a49",
        "type": "ui_text",
        "z": "7df8dcd3568b0c28",
        "g": "587d35133a0589f4",
        "group": "0f5b01afb2f3a18c",
        "order": 74,
        "width": 15,
        "height": 1,
        "name": "below space text",
        "label": "",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 810,
        "y": 120,
        "wires": []
    },
    {
        "id": "6731c490c36e6a27",
        "type": "ui_text",
        "z": "7df8dcd3568b0c28",
        "g": "56d9bbb12c6ac8cc",
        "group": "0f5b01afb2f3a18c",
        "order": 13,
        "width": 5,
        "height": 1,
        "name": "DI01time",
        "label": "",
        "format": "{{msg.time}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 800,
        "y": 420,
        "wires": [],
        "info": "<text></text>"
    },
    {
        "id": "0156988b62d0e36e",
        "type": "ui_text",
        "z": "7df8dcd3568b0c28",
        "g": "56d9bbb12c6ac8cc",
        "group": "0f5b01afb2f3a18c",
        "order": 18,
        "width": 5,
        "height": 1,
        "name": "DI02time",
        "label": "",
        "format": "{{msg.time}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 980,
        "y": 420,
        "wires": [],
        "info": "<text></text>"
    },
    {
        "id": "335a313373625858",
        "type": "ui_text",
        "z": "7df8dcd3568b0c28",
        "g": "56d9bbb12c6ac8cc",
        "group": "0f5b01afb2f3a18c",
        "order": 23,
        "width": 5,
        "height": 1,
        "name": "DI03time",
        "label": "",
        "format": "{{msg.time}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 800,
        "y": 460,
        "wires": [],
        "info": "<text></text>"
    },
    {
        "id": "694f909517e0333b",
        "type": "ui_text",
        "z": "7df8dcd3568b0c28",
        "g": "56d9bbb12c6ac8cc",
        "group": "0f5b01afb2f3a18c",
        "order": 28,
        "width": 5,
        "height": 1,
        "name": "DI04time",
        "label": "",
        "format": "{{msg.time}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 980,
        "y": 460,
        "wires": [],
        "info": "<text></text>"
    },
    {
        "id": "285f93ac69df70b0",
        "type": "ui_text",
        "z": "7df8dcd3568b0c28",
        "g": "56d9bbb12c6ac8cc",
        "group": "0f5b01afb2f3a18c",
        "order": 33,
        "width": 5,
        "height": 1,
        "name": "DI05time",
        "label": "",
        "format": "{{msg.time}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 800,
        "y": 500,
        "wires": [],
        "info": "<text></text>"
    },
    {
        "id": "a589a98fabe7738c",
        "type": "ui_text",
        "z": "7df8dcd3568b0c28",
        "g": "56d9bbb12c6ac8cc",
        "group": "0f5b01afb2f3a18c",
        "order": 38,
        "width": 5,
        "height": 1,
        "name": "DI06time",
        "label": "",
        "format": "{{msg.time}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 980,
        "y": 500,
        "wires": [],
        "info": "<text></text>"
    },
    {
        "id": "dab2ac9aabed3d03",
        "type": "ui_text",
        "z": "7df8dcd3568b0c28",
        "g": "56d9bbb12c6ac8cc",
        "group": "0f5b01afb2f3a18c",
        "order": 43,
        "width": 5,
        "height": 1,
        "name": "DI07time",
        "label": "",
        "format": "{{msg.time}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 800,
        "y": 540,
        "wires": [],
        "info": "<text></text>"
    },
    {
        "id": "e2118cf978c77976",
        "type": "ui_text",
        "z": "7df8dcd3568b0c28",
        "g": "56d9bbb12c6ac8cc",
        "group": "0f5b01afb2f3a18c",
        "order": 48,
        "width": 5,
        "height": 1,
        "name": "DI08time",
        "label": "",
        "format": "{{msg.time}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 980,
        "y": 540,
        "wires": [],
        "info": "<text></text>"
    },
    {
        "id": "5d4eb560dda53e1f",
        "type": "ui_text",
        "z": "7df8dcd3568b0c28",
        "g": "56d9bbb12c6ac8cc",
        "group": "0f5b01afb2f3a18c",
        "order": 53,
        "width": 5,
        "height": 1,
        "name": "DI09time",
        "label": "",
        "format": "{{msg.time}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 800,
        "y": 580,
        "wires": [],
        "info": "<text></text>"
    },
    {
        "id": "954c4c34e70dfde4",
        "type": "ui_text",
        "z": "7df8dcd3568b0c28",
        "g": "56d9bbb12c6ac8cc",
        "group": "0f5b01afb2f3a18c",
        "order": 58,
        "width": 5,
        "height": 1,
        "name": "DI10time",
        "label": "",
        "format": "{{msg.time}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 980,
        "y": 580,
        "wires": [],
        "info": "<text></text>"
    },
    {
        "id": "2f03da309d6c62f0",
        "type": "ui_text",
        "z": "7df8dcd3568b0c28",
        "g": "56d9bbb12c6ac8cc",
        "group": "0f5b01afb2f3a18c",
        "order": 63,
        "width": 5,
        "height": 1,
        "name": "DI11time",
        "label": "",
        "format": "{{msg.time}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 800,
        "y": 620,
        "wires": [],
        "info": "<text></text>"
    },
    {
        "id": "d0989e75bbd9d3f1",
        "type": "ui_text",
        "z": "7df8dcd3568b0c28",
        "g": "56d9bbb12c6ac8cc",
        "group": "0f5b01afb2f3a18c",
        "order": 68,
        "width": 5,
        "height": 1,
        "name": "DI12time",
        "label": "",
        "format": "{{msg.time}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 980,
        "y": 620,
        "wires": [],
        "info": "<text></text>"
    },
    {
        "id": "da3197d7cfdf1f4d",
        "type": "ui_text",
        "z": "7df8dcd3568b0c28",
        "g": "587d35133a0589f4",
        "group": "0f5b01afb2f3a18c",
        "order": 7,
        "width": 4,
        "height": 1,
        "name": "Time Stamp",
        "label": "",
        "format": "<font size = 5>Time Stamp",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 890,
        "y": 280,
        "wires": []
    },
    {
        "id": "e2fc7b8814598285",
        "type": "ui_button",
        "z": "7df8dcd3568b0c28",
        "g": "587d35133a0589f4",
        "name": "Digital Input Reports Button",
        "group": "0f5b01afb2f3a18c",
        "order": 3,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-solid fa-table fa-3x",
        "payload": "MainDashboard",
        "payloadType": "flow",
        "topic": "topic",
        "topicType": "msg",
        "x": 1060,
        "y": 120,
        "wires": [
            [
                "c30a6cea67fba55e"
            ]
        ],
        "info": "<button id=\"btn\">\r\n<button>\r\n<style>\r\n.btn{\r\n    font-size:50px;\r\n}\r\n</style>\r\n"
    },
    {
        "id": "c30a6cea67fba55e",
        "type": "change",
        "z": "7df8dcd3568b0c28",
        "g": "587d35133a0589f4",
        "name": "Load DI Reports Dashboard",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"tab\":\"Digital Inputs Reports\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1380,
        "y": 120,
        "wires": [
            [
                "1f4594762b3891b0"
            ]
        ]
    },
    {
        "id": "c042c1b64b834396",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "Allotting Values to Digital Params",
        "func": "if(msg.payload.DO01){\nvar date = new Date();\nvar year = date.getFullYear();\nvar month = date.getMonth() + 1;\nvar day = date.getDate();\nvar hours = date.getHours().toString().padStart(2, '0');\nvar minutes = date.getMinutes().toString().padStart(2, '0');\nvar seconds = date.getSeconds().toString().padStart(2, '0');\n\nvar fullformat = `${day.toString().padStart(2, '0')}-${month.toString().padStart(2, '0')}-${year}`;\nvar timeformat = `${hours} : ${minutes} : ${seconds}`;\nmsg.time =` ${fullformat} &nbsp; &nbsp; ${timeformat}`;\n    return msg;\n}else{\n    msg.payload = \"#c22719\";\n        var date = new Date();\nvar year = date.getFullYear();\nvar month = date.getMonth() + 1;\nvar day = date.getDate();\nvar hours = date.getHours().toString().padStart(2, '0');\nvar minutes = date.getMinutes().toString().padStart(2, '0');\nvar seconds = date.getSeconds().toString().padStart(2, '0');\n\nvar fullformat = `${day.toString().padStart(2, '0')}-${month.toString().padStart(2, '0')}-${year}`;\nvar timeformat = `${hours} : ${minutes} : ${seconds}`;\nmsg.time =` ${fullformat} &nbsp; &nbsp; ${timeformat}`;\n    return msg;\n\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 1260,
        "wires": [
            [
                "1e3bb9cdc11c016d",
                "dfb656e56dc38732",
                "77860796622739bb",
                "21791de5395f6919",
                "755bd51b9dd86f73",
                "6acaafb6decc174a",
                "f0073cd365516e0e",
                "1d067d189b708766",
                "25f715d543308dc8",
                "5bbcb6e3e84b807d",
                "adc463f5ce737a73",
                "9a4a04ec33f38e07",
                "22060df35ce48f10",
                "d54e527c9bdeef6a",
                "19ac135a601ea259",
                "531a8fd506cc6b18",
                "247ea74f0df15cfa",
                "6223d1c08295888e",
                "2421e89b35edce7c",
                "bed43734a2f55594",
                "dd8c4cd0c9b4a083",
                "4ce38dee764a4538",
                "7ccd9eb9291da019",
                "557ed8db42a5b92b",
                "7ccb11cdd11622ec",
                "5297d8d4d8152057",
                "87c857c8808f3a19",
                "c090d0fdc146d797",
                "2747e0bef079eb3d",
                "5be58c7b09ab0f75",
                "ff3a8471d8730a24",
                "4e8da70f8bf3f19c",
                "c26e38eed09e8708",
                "44962c98c4554660",
                "4abce75a09dffce1",
                "d2af08f8e0163b01"
            ]
        ]
    },
    {
        "id": "097e6545f1a0647a",
        "type": "ui_text",
        "z": "93b5a3b37e35c7cc",
        "group": "1cec39bef7c1040b",
        "order": 19,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "<b>DO01 </b>     ",
        "format": "",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1120,
        "y": 560,
        "wires": []
    },
    {
        "id": "8ab473647aa9e586",
        "type": "ui_text",
        "z": "93b5a3b37e35c7cc",
        "group": "1cec39bef7c1040b",
        "order": 25,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "<b>DO02</b>",
        "format": "",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1120,
        "y": 820,
        "wires": []
    },
    {
        "id": "39f69574b6f6e7ed",
        "type": "ui_text",
        "z": "93b5a3b37e35c7cc",
        "group": "1cec39bef7c1040b",
        "order": 31,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "<b>DO03</b>",
        "format": "",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1120,
        "y": 1060,
        "wires": []
    },
    {
        "id": "d614835bea05b552",
        "type": "ui_text",
        "z": "93b5a3b37e35c7cc",
        "group": "1cec39bef7c1040b",
        "order": 37,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "<b>DO04</b>",
        "format": "",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1130,
        "y": 1340,
        "wires": []
    },
    {
        "id": "2d282bba5a4072d4",
        "type": "ui_text",
        "z": "93b5a3b37e35c7cc",
        "group": "1cec39bef7c1040b",
        "order": 43,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "<b>DO05</b>",
        "format": "",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1120,
        "y": 1580,
        "wires": []
    },
    {
        "id": "7e53e6172a3d7d62",
        "type": "ui_text",
        "z": "93b5a3b37e35c7cc",
        "group": "1cec39bef7c1040b",
        "order": 49,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "<b>DO06</b>",
        "format": "",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1200,
        "y": 1900,
        "wires": []
    },
    {
        "id": "ed77e776add62743",
        "type": "ui_text",
        "z": "93b5a3b37e35c7cc",
        "group": "1cec39bef7c1040b",
        "order": 55,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "<b>DO07</b>",
        "format": "",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1260,
        "y": 2180,
        "wires": []
    },
    {
        "id": "0803583005513cfd",
        "type": "ui_text",
        "z": "93b5a3b37e35c7cc",
        "group": "1cec39bef7c1040b",
        "order": 61,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "<b>DO08</b>",
        "format": "",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1300,
        "y": 2440,
        "wires": []
    },
    {
        "id": "b252e1c5fdc2412e",
        "type": "ui_text",
        "z": "93b5a3b37e35c7cc",
        "group": "1cec39bef7c1040b",
        "order": 67,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "<b>DO09</b>",
        "format": "",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1260,
        "y": 2720,
        "wires": []
    },
    {
        "id": "73a525b7ab45fcba",
        "type": "ui_text",
        "z": "93b5a3b37e35c7cc",
        "group": "1cec39bef7c1040b",
        "order": 73,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "<b>DO10</b>",
        "format": "",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1440,
        "y": 2960,
        "wires": []
    },
    {
        "id": "a4a8bf71c857be1d",
        "type": "ui_text",
        "z": "93b5a3b37e35c7cc",
        "group": "1cec39bef7c1040b",
        "order": 79,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "<b>DO11</b>",
        "format": "",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1380,
        "y": 3240,
        "wires": []
    },
    {
        "id": "707babbc54d7db8f",
        "type": "ui_text",
        "z": "93b5a3b37e35c7cc",
        "group": "1cec39bef7c1040b",
        "order": 85,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "<b>DO12</b>",
        "format": "",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1400,
        "y": 3540,
        "wires": []
    },
    {
        "id": "39258180827ac047",
        "type": "mqtt in",
        "z": "93b5a3b37e35c7cc",
        "name": "Receiving Data From Mqtt",
        "topic": "INS/MBIOT_ETH/09995/UTILITY",
        "qos": "0",
        "datatype": "json",
        "broker": "665f18f8041514a1",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 150,
        "y": 1260,
        "wires": [
            [
                "c042c1b64b834396"
            ]
        ]
    },
    {
        "id": "7805a7a86275f4b9",
        "type": "mqtt out",
        "z": "93b5a3b37e35c7cc",
        "name": "MQTTOut",
        "topic": "INS/MBIOT_ETH/09995/CMD",
        "qos": "0",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "665f18f8041514a1",
        "x": 2520,
        "y": 1440,
        "wires": []
    },
    {
        "id": "b926645f85613014",
        "type": "mqtt in",
        "z": "93b5a3b37e35c7cc",
        "name": "ReceivingDataFromMqtt",
        "topic": "INS/MBIOT_ETH/09995/XML_STATUS",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "665f18f8041514a1",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1190,
        "y": 4020,
        "wires": [
            [
                "ae6ce2eb8570c1e3"
            ]
        ]
    },
    {
        "id": "ae6ce2eb8570c1e3",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "SendDatatoPopupWindow",
        "func": "if(msg.payload == \"Queued Successfully\"){\n    msg.payload = \"Data Submit Successfully\"\n    msg.topic = \"\";\n}\n\nelse if(msg.payload == \"Unknown Tag\"){\n    msg.payload= \"Unknown tag Please Submit Valid tag\"\n    msg.topic = \"\";\n    \n} else if (msg.payload == \"INVALID PACKET\"){\n    msg.payload = \"Invalid Packet Please Enter Valid Data\"\n    msg.topic = \"\";\n}\n\nconsole.log(msg);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1540,
        "y": 4020,
        "wires": [
            [
                "8a9d292bfc3c386e"
            ]
        ]
    },
    {
        "id": "8a9d292bfc3c386e",
        "type": "ui_toast",
        "z": "93b5a3b37e35c7cc",
        "position": "dialog",
        "displayTime": "5",
        "highlight": "black",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "Cancel",
        "raw": false,
        "className": "<height = 300px>",
        "topic": "",
        "name": "",
        "x": 1870,
        "y": 4020,
        "wires": [
            []
        ],
        "info": "<div id=\"popupbox\"></div>\r\n<style>\r\n#popupbox{\r\n    /* border:10px solid black; */\r\n}\r\n</style>"
    },
    {
        "id": "1e3bb9cdc11c016d",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "Showing Light Indication Function",
        "func": "if(msg.payload.DO01==1){\n    msg.payload =\"green\";\n\n    return msg;\n}else{\n    msg.payload = \"#c22719\";\n    return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 520,
        "wires": [
            [
                "81df5bddaf30a17c",
                "097e6545f1a0647a"
            ]
        ]
    },
    {
        "id": "81df5bddaf30a17c",
        "type": "ui_template",
        "z": "93b5a3b37e35c7cc",
        "group": "1cec39bef7c1040b",
        "name": "DO01Btn",
        "order": 20,
        "width": 3,
        "height": 1,
        "format": "<div id=\"indicator1\">\n</div>\n<style>\n#indicator1{\n    width:25px;\n    height:25px;\n    border-radius:50%;\n    background-color:{{msg.payload}};  \n    text-align:center; \n    margin-left:40px;\n    margin-top:11px;\n    \n}\n</style>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1440,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "dfb656e56dc38732",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "Showing Light Indication Function",
        "func": "if(msg.payload.DO02==1){\n    msg.payload =\"green\";\n    return msg;\n}else{\n    msg.payload = \"#c22719\";\n    return msg;\n}\n// return msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 780,
        "wires": [
            [
                "8ab473647aa9e586",
                "e4b7f32fb26542ee"
            ]
        ]
    },
    {
        "id": "77860796622739bb",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "Showing Light Indication Function",
        "func": "if(msg.payload.DO03==1){\n    msg.payload =\"green\";\n    return msg;\n}else{\n    msg.payload = \"#c22719\";\n    return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 1020,
        "wires": [
            [
                "39f69574b6f6e7ed",
                "46144e08eab6a8d5"
            ]
        ]
    },
    {
        "id": "21791de5395f6919",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "Showing Light Indication Function",
        "func": "if(msg.payload.DO04==1){\n    msg.payload =\"green\";\n    return msg;\n}else{\n    msg.payload = \"#c22719\";\n    return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 1300,
        "wires": [
            [
                "d614835bea05b552",
                "b37bc1a12ed926fe"
            ]
        ]
    },
    {
        "id": "755bd51b9dd86f73",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "Showing Light Indication Function",
        "func": "if(msg.payload.DO05==1){\n    msg.payload =\"green\";\n    return msg;\n}else{\n    msg.payload = \"#c22719\";\n    return msg;\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 1540,
        "wires": [
            [
                "2d282bba5a4072d4",
                "bc83cc7573ba2368"
            ]
        ]
    },
    {
        "id": "9a4a04ec33f38e07",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "Showing Light Indication Function",
        "func": "if(msg.payload.DO06==1){\n    msg.payload =\"green\";\n    return msg;\n\n}else{\n    msg.payload = \"#c22719\";\n    return msg;\n\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 1860,
        "wires": [
            [
                "7e53e6172a3d7d62",
                "d20c5e5ddee146eb"
            ]
        ]
    },
    {
        "id": "6acaafb6decc174a",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "Showing Light Indication Function",
        "func": "if(msg.payload.DO07==1){\n    msg.payload =\"green\";\n    return msg;\n}else{\n    msg.payload = \"#c22719\";\n    return msg;\n\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 2140,
        "wires": [
            [
                "ed77e776add62743",
                "fb5ee9f07156e7ed"
            ]
        ]
    },
    {
        "id": "f0073cd365516e0e",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "Showing Light Indication Function",
        "func": "if(msg.payload.DO08==1){\n    msg.payload =\"green\";\n    return msg;\n\n}else{\n    msg.payload = \"#c22719\";\n    return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 2420,
        "wires": [
            [
                "0803583005513cfd",
                "d28cc8e6c198908d"
            ]
        ]
    },
    {
        "id": "1d067d189b708766",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "Showing Light Indication Function",
        "func": "if(msg.payload.DO09==1){\n    msg.payload =\"green\";\n    return msg;\n\n\n}else{\n    msg.payload = \"#c22719\";\n    return msg;\n\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 2700,
        "wires": [
            [
                "b252e1c5fdc2412e",
                "238fd7cd227cc0bd"
            ]
        ]
    },
    {
        "id": "25f715d543308dc8",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "Showing Light Indication Function",
        "func": "if(msg.payload.DO10==1){\n    msg.payload =\"green\";\n    return msg;\n\n}else{\n    msg.payload = \"#c22719\";\n    return msg;\n\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 2960,
        "wires": [
            [
                "73a525b7ab45fcba",
                "233d05c5febb95ed"
            ]
        ]
    },
    {
        "id": "5bbcb6e3e84b807d",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "Showing Light Indication Function",
        "func": "if(msg.payload.DO11==1){\n    msg.payload =\"green\";\n    return msg;\n\n}else{\n    msg.payload = \"#c22719\";\n    return msg;\n\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 3260,
        "wires": [
            [
                "a4a8bf71c857be1d",
                "9b9d4f3937b506d1"
            ]
        ]
    },
    {
        "id": "adc463f5ce737a73",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "Showing Light Indication Function",
        "func": "if(msg.payload.DO12==1){\n    msg.payload =\"green\";\n    return msg;\n\n}else{\n    msg.payload = \"#c22719\";\n    return msg;\n\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 3560,
        "wires": [
            [
                "707babbc54d7db8f",
                "0ac509448179b865"
            ]
        ]
    },
    {
        "id": "e4b7f32fb26542ee",
        "type": "ui_template",
        "z": "93b5a3b37e35c7cc",
        "group": "1cec39bef7c1040b",
        "name": "DO02Btn",
        "order": 26,
        "width": 3,
        "height": 1,
        "format": "<div id=\"indicator2\">\n</div>\n<style>\n#indicator2{\n    width:25px;\n    height:25px;\n    border-radius:50%;\n    background-color:{{msg.payload}};\n    margin-left:40px;\n    margin-top:11px;\n}\n</style>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1440,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "46144e08eab6a8d5",
        "type": "ui_template",
        "z": "93b5a3b37e35c7cc",
        "group": "1cec39bef7c1040b",
        "name": "DO03Btn",
        "order": 32,
        "width": 3,
        "height": 1,
        "format": "<div id=\"indicator3\">\n</div>\n<style>\n#indicator3{\n    width:25px;\n    height:25px;\n    border-radius:50%;\n    background-color:{{msg.payload}}; \n    margin-left:40px;\n    margin-top:11px;\n}\n</style>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1440,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "b37bc1a12ed926fe",
        "type": "ui_template",
        "z": "93b5a3b37e35c7cc",
        "group": "1cec39bef7c1040b",
        "name": "DO04Btn",
        "order": 38,
        "width": 3,
        "height": 1,
        "format": "<div id=\"indicator4\">\n</div>\n<style>\n#indicator4{\n    width:25px;\n    height:25px;\n    border-radius:50%;\n    background-color:{{msg.payload}};\n    margin-left:40px;\n    margin-top:11px;\n}\n</style>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1470,
        "y": 1300,
        "wires": [
            []
        ]
    },
    {
        "id": "bc83cc7573ba2368",
        "type": "ui_template",
        "z": "93b5a3b37e35c7cc",
        "group": "1cec39bef7c1040b",
        "name": "DO05Btn",
        "order": 44,
        "width": 3,
        "height": 1,
        "format": "<div id=\"indicator5\">\n</div>\n<style>\n#indicator5{\n    width:25px;\n    height:25px;\n    border-radius:50%;\n    background-color:{{msg.payload}};\n    margin-left:40px;\n    margin-top:11px;\n}\n</style>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1480,
        "y": 1540,
        "wires": [
            []
        ]
    },
    {
        "id": "d20c5e5ddee146eb",
        "type": "ui_template",
        "z": "93b5a3b37e35c7cc",
        "group": "1cec39bef7c1040b",
        "name": "DO06Btn",
        "order": 50,
        "width": 3,
        "height": 1,
        "format": "<div id=\"indicator6\">\n</div>\n<style>\n#indicator6{\n    width:25px;\n    height:25px;\n    border-radius:50%;\n    background-color:{{msg.payload}};  \n    margin-left:40px;\n    margin-top:11px;\n}\n</style>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1560,
        "y": 1860,
        "wires": [
            []
        ]
    },
    {
        "id": "fb5ee9f07156e7ed",
        "type": "ui_template",
        "z": "93b5a3b37e35c7cc",
        "group": "1cec39bef7c1040b",
        "name": "DO07Btn",
        "order": 56,
        "width": 3,
        "height": 1,
        "format": "<div id=\"indicator7\">\n</div>\n<style>\n#indicator7{\n    width:25px;\n    height:25px;\n    border-radius:50%;\n    background-color:{{msg.payload}};\n    margin-left:40px;\n    margin-top:11px;\n}\n</style>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1560,
        "y": 2140,
        "wires": [
            []
        ]
    },
    {
        "id": "d28cc8e6c198908d",
        "type": "ui_template",
        "z": "93b5a3b37e35c7cc",
        "group": "1cec39bef7c1040b",
        "name": "DO08Btn",
        "order": 62,
        "width": 3,
        "height": 1,
        "format": "<div id=\"indicator8\">\n</div>\n<style>\n#indicator8{\n    width:25px;\n    height:25px;\n    border-radius:50%;\n    background-color:{{msg.payload}};\n    margin-left:40px;\n    margin-top:11px;\n}\n</style>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1600,
        "y": 2420,
        "wires": [
            []
        ]
    },
    {
        "id": "238fd7cd227cc0bd",
        "type": "ui_template",
        "z": "93b5a3b37e35c7cc",
        "group": "1cec39bef7c1040b",
        "name": "DO09Btn",
        "order": 68,
        "width": 3,
        "height": 1,
        "format": "<div id=\"indicator9\">\n</div>\n<style>\n#indicator9{\n    width:25px;\n    height:25px;\n    border-radius:50%;\n    background-color:{{msg.payload}}; \n    margin-left:40px;\n}\n</style>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1580,
        "y": 2700,
        "wires": [
            []
        ]
    },
    {
        "id": "233d05c5febb95ed",
        "type": "ui_template",
        "z": "93b5a3b37e35c7cc",
        "group": "1cec39bef7c1040b",
        "name": "DO10Btn",
        "order": 74,
        "width": 3,
        "height": 1,
        "format": "<div id=\"indicator10\">\n</div>\n<style>\n#indicator10{\n    width:25px;\n    height:25px;\n    border-radius:50%;\n    background-color:{{msg.payload}}; \n    margin-left:40px;\n}\n</style>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1620,
        "y": 2960,
        "wires": [
            []
        ]
    },
    {
        "id": "9b9d4f3937b506d1",
        "type": "ui_template",
        "z": "93b5a3b37e35c7cc",
        "group": "1cec39bef7c1040b",
        "name": "DO11Btn",
        "order": 80,
        "width": 3,
        "height": 1,
        "format": "<div id=\"indicator11\">\n</div>\n<style>\n#indicator11{\n    width:25px;\n    height:25px;\n    border-radius:50%;\n    background-color:{{msg.payload}};\n    margin-left:40px;\n    margin-top:11px;\n}\n</style>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1360,
        "y": 3260,
        "wires": [
            []
        ]
    },
    {
        "id": "0ac509448179b865",
        "type": "ui_template",
        "z": "93b5a3b37e35c7cc",
        "group": "1cec39bef7c1040b",
        "name": "DO12Btn",
        "order": 86,
        "width": 3,
        "height": 1,
        "format": "<div id=\"indicator12\">\n</div>\n<style>\n#indicator12{\n    width:25px;\n    height:25px;\n    border-radius:50%;\n    background-color:{{msg.payload}};\n    margin-left:40px;\n    margin-top:11px;\n}\n</style>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1640,
        "y": 3560,
        "wires": [
            []
        ]
    },
    {
        "id": "723203c5310246c6",
        "type": "ui_text",
        "z": "93b5a3b37e35c7cc",
        "group": "1cec39bef7c1040b",
        "order": 14,
        "width": 3,
        "height": 1,
        "name": "heading Commads",
        "label": "",
        "format": "<font size = 5>Commands",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1230,
        "y": 3920,
        "wires": []
    },
    {
        "id": "a152310c994cb5e9",
        "type": "ui_text",
        "z": "93b5a3b37e35c7cc",
        "group": "1cec39bef7c1040b",
        "order": 11,
        "width": 3,
        "height": 1,
        "name": "heading parameter",
        "label": "",
        "format": "<font size = 5>Parameter",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 990,
        "y": 3920,
        "wires": [],
        "info": "<h1>\r\nClick\r\n</h1>"
    },
    {
        "id": "247a9a21387c6204",
        "type": "ui_text",
        "z": "93b5a3b37e35c7cc",
        "group": "1cec39bef7c1040b",
        "order": 13,
        "width": 2,
        "height": 1,
        "name": "heading Status",
        "label": "",
        "format": "<font size = 5>Status",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1460,
        "y": 3920,
        "wires": []
    },
    {
        "id": "0f42e1a3d44efa52",
        "type": "ui_button",
        "z": "93b5a3b37e35c7cc",
        "name": "Home Button",
        "group": "1cec39bef7c1040b",
        "order": 5,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-home fa-3x",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 1290,
        "y": 3860,
        "wires": [
            [
                "b9f538dd5a416d64"
            ]
        ],
        "info": "<button id=\"btn\">\r\n<button>\r\n<style>\r\n.btn{\r\n    font-size:50px;\r\n}\r\n</style>\r\n"
    },
    {
        "id": "0ddf79a7262b0457",
        "type": "ui_text",
        "z": "93b5a3b37e35c7cc",
        "group": "1cec39bef7c1040b",
        "order": 2,
        "width": 7,
        "height": 1,
        "name": "Digital Outputs Label",
        "label": "<font size=6>Digital Outputs",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1020,
        "y": 3860,
        "wires": []
    },
    {
        "id": "9766b941b0690b56",
        "type": "ui_text",
        "z": "93b5a3b37e35c7cc",
        "group": "1cec39bef7c1040b",
        "order": 91,
        "width": 18,
        "height": 1,
        "name": "Below space text",
        "label": "",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1230,
        "y": 4140,
        "wires": []
    },
    {
        "id": "bc99b37c351c3807",
        "type": "ui_ui_control",
        "z": "93b5a3b37e35c7cc",
        "name": "",
        "events": "all",
        "x": 1780,
        "y": 3860,
        "wires": [
            []
        ]
    },
    {
        "id": "b9f538dd5a416d64",
        "type": "change",
        "z": "93b5a3b37e35c7cc",
        "name": "link tabs change node",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"tab\":\"Dashboard\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1560,
        "y": 3860,
        "wires": [
            [
                "bc99b37c351c3807"
            ]
        ]
    },
    {
        "id": "22060df35ce48f10",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "Showing Light Indication Function",
        "func": "if(msg.payload.DO01==1){\n    msg.payload =\"Off\";\n    msg.enabled = true;\n    return msg;\n}else{\n    msg.payload = \"On\";\n    msg.enabled = true;\n    return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 480,
        "wires": [
            [
                "4e6c77198c926e86"
            ]
        ]
    },
    {
        "id": "4e6c77198c926e86",
        "type": "toggle",
        "z": "93b5a3b37e35c7cc",
        "name": "",
        "onOffTopic": "",
        "onValue": "On",
        "onType": "str",
        "offValue": "Off",
        "offType": "str",
        "toggleTopic": "connectbtn",
        "toggleValue": "",
        "toggleType": "str",
        "passOnOff": "always",
        "x": 1030,
        "y": 480,
        "wires": [
            [
                "143e5bc64e6679b5"
            ]
        ]
    },
    {
        "id": "143e5bc64e6679b5",
        "type": "ui_button",
        "z": "93b5a3b37e35c7cc",
        "name": "swithc1",
        "group": "1cec39bef7c1040b",
        "order": 21,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "{{payload}}",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "bin",
        "topic": "topic",
        "topicType": "msg",
        "x": 1200,
        "y": 480,
        "wires": [
            [
                "198ad1ae158eb9cd",
                "e715775ec5239186"
            ]
        ]
    },
    {
        "id": "e715775ec5239186",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "function 23",
        "func": "if(msg.payload){\n    msg.enabled = false\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1210,
        "y": 460,
        "wires": [
            [
                "143e5bc64e6679b5"
            ]
        ]
    },
    {
        "id": "198ad1ae158eb9cd",
        "type": "toggle",
        "z": "93b5a3b37e35c7cc",
        "name": "",
        "onOffTopic": "",
        "onValue": "On",
        "onType": "str",
        "offValue": "Off",
        "offType": "str",
        "toggleTopic": "connectbtn",
        "toggleValue": "",
        "toggleType": "str",
        "passOnOff": "always",
        "x": 1370,
        "y": 480,
        "wires": [
            [
                "eaa213deb98f643f"
            ]
        ]
    },
    {
        "id": "eaa213deb98f643f",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "function 24",
        "func": "if(msg.payload==\"On\"){\n    msg.payload = {\"name\" : \"DO01\", \"value\" : 1};\n}\nelse{\n    msg.payload = {\"name\" : \"DO01\", \"value\" : 0};\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1530,
        "y": 480,
        "wires": [
            [
                "c811aa6049bb6272"
            ]
        ]
    },
    {
        "id": "c811aa6049bb6272",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "SendingDatatoMqtt",
        "func": "var status = msg.payload;\nmsg.payload = `$MBT:3,${status.name},${status.value}#`;\nmsg.topic = `INS/MBIOT_ETH/09995/CMD`;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1750,
        "y": 480,
        "wires": [
            [
                "7805a7a86275f4b9"
            ]
        ]
    },
    {
        "id": "d54e527c9bdeef6a",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "Showing Light Indication Function",
        "func": "if(msg.payload.DO02==1){\n    msg.payload =\"Off\";\n    msg.enabled = true;\n    return msg;\n}else{\n    msg.payload = \"On\";\n    msg.enabled = true;\n    return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 740,
        "wires": [
            [
                "6e65bad3d602f344"
            ]
        ]
    },
    {
        "id": "6e65bad3d602f344",
        "type": "toggle",
        "z": "93b5a3b37e35c7cc",
        "name": "",
        "onOffTopic": "",
        "onValue": "On",
        "onType": "str",
        "offValue": "Off",
        "offType": "str",
        "toggleTopic": "connectbtn",
        "toggleValue": "",
        "toggleType": "str",
        "passOnOff": "always",
        "x": 970,
        "y": 740,
        "wires": [
            [
                "aaae6a7ebcbd1b1c"
            ]
        ]
    },
    {
        "id": "aaae6a7ebcbd1b1c",
        "type": "ui_button",
        "z": "93b5a3b37e35c7cc",
        "name": "switch2",
        "group": "1cec39bef7c1040b",
        "order": 27,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "{{payload}}",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "bin",
        "topic": "topic",
        "topicType": "msg",
        "x": 1190,
        "y": 740,
        "wires": [
            [
                "3d686af847b0e4cd",
                "71c11ec658f483f8"
            ]
        ]
    },
    {
        "id": "71c11ec658f483f8",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "function 25",
        "func": "if(msg.payload){\n    msg.enabled = false\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 720,
        "wires": [
            [
                "aaae6a7ebcbd1b1c"
            ]
        ]
    },
    {
        "id": "3d686af847b0e4cd",
        "type": "toggle",
        "z": "93b5a3b37e35c7cc",
        "name": "",
        "onOffTopic": "",
        "onValue": "On",
        "onType": "str",
        "offValue": "Off",
        "offType": "str",
        "toggleTopic": "connectbtn",
        "toggleValue": "",
        "toggleType": "str",
        "passOnOff": "always",
        "x": 1370,
        "y": 740,
        "wires": [
            [
                "1fd3532160c65a48"
            ]
        ]
    },
    {
        "id": "1fd3532160c65a48",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "function 26",
        "func": "if(msg.payload==\"On\"){\n    msg.payload = {\"name\" : \"DO02\", \"value\" : 1};\n}\nelse{\n    msg.payload = {\"name\" : \"DO02\", \"value\" : 0};\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1590,
        "y": 740,
        "wires": [
            [
                "a7e2016b3f16e21e"
            ]
        ]
    },
    {
        "id": "19ac135a601ea259",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "Showing Light Indication Function",
        "func": "if(msg.payload.DO03==1){\n    msg.payload =\"Off\";\n    msg.enabled = true;\n    return msg;\n}else{\n    msg.payload = \"On\";\n    msg.enabled = true;\n    return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 980,
        "wires": [
            [
                "781fa80ef13d1527"
            ]
        ]
    },
    {
        "id": "781fa80ef13d1527",
        "type": "toggle",
        "z": "93b5a3b37e35c7cc",
        "name": "",
        "onOffTopic": "",
        "onValue": "On",
        "onType": "str",
        "offValue": "Off",
        "offType": "str",
        "toggleTopic": "connectbtn",
        "toggleValue": "",
        "toggleType": "str",
        "passOnOff": "always",
        "x": 1030,
        "y": 980,
        "wires": [
            [
                "f105a4200a6a1d67"
            ]
        ]
    },
    {
        "id": "f105a4200a6a1d67",
        "type": "ui_button",
        "z": "93b5a3b37e35c7cc",
        "name": "switch3",
        "group": "1cec39bef7c1040b",
        "order": 33,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "{{payload}}",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "bin",
        "topic": "topic",
        "topicType": "msg",
        "x": 1260,
        "y": 980,
        "wires": [
            [
                "10770bf037292538",
                "f22336dd024ef7fe"
            ]
        ]
    },
    {
        "id": "f22336dd024ef7fe",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "function 27",
        "func": "if(msg.payload){\n    msg.enabled = false\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1250,
        "y": 960,
        "wires": [
            [
                "f105a4200a6a1d67"
            ]
        ]
    },
    {
        "id": "10770bf037292538",
        "type": "toggle",
        "z": "93b5a3b37e35c7cc",
        "name": "",
        "onOffTopic": "",
        "onValue": "On",
        "onType": "str",
        "offValue": "Off",
        "offType": "str",
        "toggleTopic": "connectbtn",
        "toggleValue": "",
        "toggleType": "str",
        "passOnOff": "always",
        "x": 1450,
        "y": 980,
        "wires": [
            [
                "34f08fbd044be923"
            ]
        ]
    },
    {
        "id": "34f08fbd044be923",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "function 28",
        "func": "if(msg.payload==\"On\"){\n    msg.payload = {\"name\" : \"DO03\", \"value\" : 1};\n}\nelse{\n    msg.payload = {\"name\" : \"DO03\", \"value\" : 0};\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1630,
        "y": 980,
        "wires": [
            [
                "d9384abc136365b1"
            ]
        ]
    },
    {
        "id": "d9384abc136365b1",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "SendingDatatoMqtt",
        "func": "var status = msg.payload;\nmsg.payload = `$MBT:3,${status.name},${status.value}#`;\nmsg.topic = `INS/MBIOT_ETH/09995/CMD`;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1890,
        "y": 980,
        "wires": [
            [
                "7805a7a86275f4b9"
            ]
        ]
    },
    {
        "id": "a7e2016b3f16e21e",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "SendingDatatoMqtt",
        "func": "var status = msg.payload;\nmsg.payload = `$MBT:3,${status.name},${status.value}#`;\nmsg.topic = `INS/MBIOT_ETH/09995/CMD`;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1830,
        "y": 740,
        "wires": [
            [
                "7805a7a86275f4b9"
            ]
        ]
    },
    {
        "id": "531a8fd506cc6b18",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "Showing Light Indication Function",
        "func": "if(msg.payload.DO04==1){\n    msg.payload =\"Off\";\n    msg.enabled = true;\n    return msg;\n}else{\n    msg.payload = \"On\";\n    msg.enabled = true;\n    return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 1260,
        "wires": [
            [
                "f4d5dfddd2a5e5d0"
            ]
        ]
    },
    {
        "id": "f4d5dfddd2a5e5d0",
        "type": "toggle",
        "z": "93b5a3b37e35c7cc",
        "name": "",
        "onOffTopic": "",
        "onValue": "On",
        "onType": "str",
        "offValue": "Off",
        "offType": "str",
        "toggleTopic": "connectbtn",
        "toggleValue": "",
        "toggleType": "str",
        "passOnOff": "always",
        "x": 1020,
        "y": 1260,
        "wires": [
            [
                "9a83c5c03ab9e1d0"
            ]
        ]
    },
    {
        "id": "9a83c5c03ab9e1d0",
        "type": "ui_button",
        "z": "93b5a3b37e35c7cc",
        "name": "switch4",
        "group": "1cec39bef7c1040b",
        "order": 39,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "{{payload}}",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "bin",
        "topic": "topic",
        "topicType": "msg",
        "x": 1240,
        "y": 1260,
        "wires": [
            [
                "99c651a04131dc11",
                "cc04b9ee5ba8f855"
            ]
        ]
    },
    {
        "id": "cc04b9ee5ba8f855",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "function 29",
        "func": "if(msg.payload){\n    msg.enabled = false\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 1240,
        "wires": [
            [
                "9a83c5c03ab9e1d0"
            ]
        ]
    },
    {
        "id": "99c651a04131dc11",
        "type": "toggle",
        "z": "93b5a3b37e35c7cc",
        "name": "",
        "onOffTopic": "",
        "onValue": "On",
        "onType": "str",
        "offValue": "Off",
        "offType": "str",
        "toggleTopic": "connectbtn",
        "toggleValue": "",
        "toggleType": "str",
        "passOnOff": "always",
        "x": 1430,
        "y": 1260,
        "wires": [
            [
                "a79c1cefc9d9b873"
            ]
        ]
    },
    {
        "id": "a79c1cefc9d9b873",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "function 30",
        "func": "if(msg.payload==\"On\"){\n    msg.payload = {\"name\" : \"DO04\", \"value\" : 1};\n}\nelse{\n    msg.payload = {\"name\" : \"DO04\", \"value\" : 0};\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1620,
        "y": 1260,
        "wires": [
            [
                "494fec9ab930d710"
            ]
        ]
    },
    {
        "id": "494fec9ab930d710",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "SendingDatatoMqtt",
        "func": "var status = msg.payload;\nmsg.payload = `$MBT:3,${status.name},${status.value}#`;\nmsg.topic = `INS/MBIOT_ETH/09995/CMD`;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1850,
        "y": 1260,
        "wires": [
            [
                "7805a7a86275f4b9"
            ]
        ]
    },
    {
        "id": "247ea74f0df15cfa",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "Showing Light Indication Function",
        "func": "if(msg.payload.DO05==1){\n    msg.payload =\"Off\";\n    msg.enabled = true;\n    return msg;\n}else{\n    msg.payload = \"On\";\n    msg.enabled = true;\n    return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 1500,
        "wires": [
            [
                "7a258b73d6940f92"
            ]
        ]
    },
    {
        "id": "7a258b73d6940f92",
        "type": "toggle",
        "z": "93b5a3b37e35c7cc",
        "name": "",
        "onOffTopic": "",
        "onValue": "On",
        "onType": "str",
        "offValue": "Off",
        "offType": "str",
        "toggleTopic": "connectbtn",
        "toggleValue": "",
        "toggleType": "str",
        "passOnOff": "always",
        "x": 1070,
        "y": 1500,
        "wires": [
            [
                "e6ce55d3c0297c77"
            ]
        ]
    },
    {
        "id": "1a36d463576c01f5",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "function 31",
        "func": "if(msg.payload){\n    msg.enabled = false\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1290,
        "y": 1480,
        "wires": [
            [
                "e6ce55d3c0297c77"
            ]
        ]
    },
    {
        "id": "e6ce55d3c0297c77",
        "type": "ui_button",
        "z": "93b5a3b37e35c7cc",
        "name": "switch5",
        "group": "1cec39bef7c1040b",
        "order": 45,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "{{payload}}",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "bin",
        "topic": "topic",
        "topicType": "msg",
        "x": 1300,
        "y": 1500,
        "wires": [
            [
                "c708ec53dd637db5",
                "1a36d463576c01f5"
            ]
        ]
    },
    {
        "id": "c708ec53dd637db5",
        "type": "toggle",
        "z": "93b5a3b37e35c7cc",
        "name": "",
        "onOffTopic": "",
        "onValue": "On",
        "onType": "str",
        "offValue": "Off",
        "offType": "str",
        "toggleTopic": "connectbtn",
        "toggleValue": "",
        "toggleType": "str",
        "passOnOff": "always",
        "x": 1490,
        "y": 1500,
        "wires": [
            [
                "d00c8f90ce3c6c7e"
            ]
        ]
    },
    {
        "id": "d00c8f90ce3c6c7e",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "function 32",
        "func": "if(msg.payload==\"On\"){\n    msg.payload = {\"name\" : \"DO05\", \"value\" : 1};\n}\nelse{\n    msg.payload = {\"name\" : \"DO05\", \"value\" : 0};\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1680,
        "y": 1500,
        "wires": [
            [
                "8ec9d54a2476c932"
            ]
        ]
    },
    {
        "id": "8ec9d54a2476c932",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "SendingDatatoMqtt",
        "func": "var status = msg.payload;\nmsg.payload = `$MBT:3,${status.name},${status.value}#`;\nmsg.topic = `INS/MBIOT_ETH/09995/CMD`;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1910,
        "y": 1500,
        "wires": [
            [
                "7805a7a86275f4b9"
            ]
        ]
    },
    {
        "id": "557ed8db42a5b92b",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "Showing Light Indication Function",
        "func": "if(msg.payload.DO06==1){\n    msg.payload =\"Off\";\n    msg.enabled = true;\n    return msg;\n}else{\n    msg.payload = \"On\";\n    msg.enabled = true;\n    return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 1820,
        "wires": [
            [
                "c25005eaee6553ba"
            ]
        ]
    },
    {
        "id": "c25005eaee6553ba",
        "type": "toggle",
        "z": "93b5a3b37e35c7cc",
        "name": "",
        "onOffTopic": "",
        "onValue": "On",
        "onType": "str",
        "offValue": "Off",
        "offType": "str",
        "toggleTopic": "connectbtn",
        "toggleValue": "",
        "toggleType": "str",
        "passOnOff": "always",
        "x": 1110,
        "y": 1820,
        "wires": [
            [
                "fa6a6d2ebed89821"
            ]
        ]
    },
    {
        "id": "acbf3b85eb18c588",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "function 33",
        "func": "if(msg.payload){\n    msg.enabled = false\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1310,
        "y": 1800,
        "wires": [
            [
                "fa6a6d2ebed89821"
            ]
        ]
    },
    {
        "id": "fa6a6d2ebed89821",
        "type": "ui_button",
        "z": "93b5a3b37e35c7cc",
        "name": "switch6",
        "group": "1cec39bef7c1040b",
        "order": 51,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "{{payload}}",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "bin",
        "topic": "topic",
        "topicType": "msg",
        "x": 1320,
        "y": 1820,
        "wires": [
            [
                "4050d85a3e626a94",
                "acbf3b85eb18c588"
            ]
        ]
    },
    {
        "id": "4050d85a3e626a94",
        "type": "toggle",
        "z": "93b5a3b37e35c7cc",
        "name": "",
        "onOffTopic": "",
        "onValue": "On",
        "onType": "str",
        "offValue": "Off",
        "offType": "str",
        "toggleTopic": "connectbtn",
        "toggleValue": "",
        "toggleType": "str",
        "passOnOff": "always",
        "x": 1510,
        "y": 1820,
        "wires": [
            [
                "6f6472b928d1ac2e"
            ]
        ]
    },
    {
        "id": "6f6472b928d1ac2e",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "function 34",
        "func": "if(msg.payload==\"On\"){\n    msg.payload = {\"name\" : \"DO06\", \"value\" : 1};\n}\nelse{\n    msg.payload = {\"name\" : \"DO06\", \"value\" : 0};\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1690,
        "y": 1820,
        "wires": [
            [
                "75367140fdcd5473"
            ]
        ]
    },
    {
        "id": "75367140fdcd5473",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "SendingDatatoMqtt",
        "func": "var status = msg.payload;\nmsg.payload = `$MBT:3,${status.name},${status.value}#`;\nmsg.topic = `INS/MBIOT_ETH/09995/CMD`;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1930,
        "y": 1820,
        "wires": [
            [
                "7805a7a86275f4b9"
            ]
        ]
    },
    {
        "id": "6223d1c08295888e",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "Showing Light Indication Function",
        "func": "if(msg.payload.DO07==1){\n    msg.payload =\"Off\";\n    msg.enabled = true;\n    return msg;\n}else{\n    msg.payload = \"On\";\n    msg.enabled = true;\n    return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 2100,
        "wires": [
            [
                "2b5dc1ab5cc09785"
            ]
        ]
    },
    {
        "id": "2b5dc1ab5cc09785",
        "type": "toggle",
        "z": "93b5a3b37e35c7cc",
        "name": "",
        "onOffTopic": "",
        "onValue": "On",
        "onType": "str",
        "offValue": "Off",
        "offType": "str",
        "toggleTopic": "connectbtn",
        "toggleValue": "",
        "toggleType": "str",
        "passOnOff": "always",
        "x": 1170,
        "y": 2100,
        "wires": [
            [
                "778c8ca0f518269a"
            ]
        ]
    },
    {
        "id": "a0f8fd95e70255dc",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "function 35",
        "func": "if(msg.payload){\n    msg.enabled = false\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1370,
        "y": 2080,
        "wires": [
            [
                "778c8ca0f518269a"
            ]
        ]
    },
    {
        "id": "778c8ca0f518269a",
        "type": "ui_button",
        "z": "93b5a3b37e35c7cc",
        "name": "switch7",
        "group": "1cec39bef7c1040b",
        "order": 57,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "{{payload}}",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "bin",
        "topic": "topic",
        "topicType": "msg",
        "x": 1360,
        "y": 2100,
        "wires": [
            [
                "40df3f03a8c5b342",
                "a0f8fd95e70255dc"
            ]
        ]
    },
    {
        "id": "40df3f03a8c5b342",
        "type": "toggle",
        "z": "93b5a3b37e35c7cc",
        "name": "",
        "onOffTopic": "",
        "onValue": "On",
        "onType": "str",
        "offValue": "Off",
        "offType": "str",
        "toggleTopic": "connectbtn",
        "toggleValue": "",
        "toggleType": "str",
        "passOnOff": "always",
        "x": 1550,
        "y": 2100,
        "wires": [
            [
                "dc8a5602e85c30dd"
            ]
        ]
    },
    {
        "id": "dc8a5602e85c30dd",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "function 36",
        "func": "if(msg.payload==\"On\"){\n    msg.payload = {\"name\" : \"DO07\", \"value\" : 1};\n}\nelse{\n    msg.payload = {\"name\" : \"DO07\", \"value\" : 0};\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1740,
        "y": 2100,
        "wires": [
            [
                "2ff3e6c7a0aba385"
            ]
        ]
    },
    {
        "id": "2ff3e6c7a0aba385",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "SendingDatatoMqtt",
        "func": "var status = msg.payload;\nmsg.payload = `$MBT:3,${status.name},${status.value}#`;\nmsg.topic = `INS/MBIOT_ETH/09995/CMD`;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1970,
        "y": 2100,
        "wires": [
            [
                "7805a7a86275f4b9"
            ]
        ]
    },
    {
        "id": "bed43734a2f55594",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "Showing Light Indication Function",
        "func": "if(msg.payload.DO08==1){\n    msg.payload =\"Off\";\n    msg.enabled = true;\n    return msg;\n}else{\n    msg.payload = \"On\";\n    msg.enabled = true;\n    return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 2380,
        "wires": [
            [
                "d09dea93ac82f41e"
            ]
        ]
    },
    {
        "id": "d09dea93ac82f41e",
        "type": "toggle",
        "z": "93b5a3b37e35c7cc",
        "name": "",
        "onOffTopic": "",
        "onValue": "On",
        "onType": "str",
        "offValue": "Off",
        "offType": "str",
        "toggleTopic": "connectbtn",
        "toggleValue": "",
        "toggleType": "str",
        "passOnOff": "always",
        "x": 1230,
        "y": 2380,
        "wires": [
            [
                "aa04f49960b9b323"
            ]
        ]
    },
    {
        "id": "bfa36e8fa196aa68",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "function 37",
        "func": "if(msg.payload){\n    msg.enabled = false\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1450,
        "y": 2300,
        "wires": [
            [
                "aa04f49960b9b323"
            ]
        ]
    },
    {
        "id": "aa04f49960b9b323",
        "type": "ui_button",
        "z": "93b5a3b37e35c7cc",
        "name": "switch8",
        "group": "1cec39bef7c1040b",
        "order": 63,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "{{payload}}",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "bin",
        "topic": "topic",
        "topicType": "msg",
        "x": 1420,
        "y": 2380,
        "wires": [
            [
                "a3f8473831d10895",
                "bfa36e8fa196aa68"
            ]
        ]
    },
    {
        "id": "a3f8473831d10895",
        "type": "toggle",
        "z": "93b5a3b37e35c7cc",
        "name": "",
        "onOffTopic": "",
        "onValue": "On",
        "onType": "str",
        "offValue": "Off",
        "offType": "str",
        "toggleTopic": "connectbtn",
        "toggleValue": "",
        "toggleType": "str",
        "passOnOff": "always",
        "x": 1610,
        "y": 2380,
        "wires": [
            [
                "27781bf25e59c0e1"
            ]
        ]
    },
    {
        "id": "27781bf25e59c0e1",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "function 38",
        "func": "if(msg.payload==\"On\"){\n    msg.payload = {\"name\" : \"DO08\", \"value\" : 1};\n}\nelse{\n    msg.payload = {\"name\" : \"DO08\", \"value\" : 0};\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1800,
        "y": 2380,
        "wires": [
            [
                "7fad648d28e77057"
            ]
        ]
    },
    {
        "id": "7fad648d28e77057",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "SendingDatatoMqtt",
        "func": "var status = msg.payload;\nmsg.payload = `$MBT:3,${status.name},${status.value}#`;\nmsg.topic = `INS/MBIOT_ETH/09995/CMD`;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2030,
        "y": 2380,
        "wires": [
            [
                "7805a7a86275f4b9"
            ]
        ]
    },
    {
        "id": "2421e89b35edce7c",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "Showing Light Indication Function",
        "func": "if(msg.payload.DO09==1){\n    msg.payload =\"Off\";\n    msg.enabled = true;\n    return msg;\n}else{\n    msg.payload = \"On\";\n    msg.enabled = true;\n    return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 2660,
        "wires": [
            [
                "857ce5e0c5b0a52b"
            ]
        ]
    },
    {
        "id": "857ce5e0c5b0a52b",
        "type": "toggle",
        "z": "93b5a3b37e35c7cc",
        "name": "",
        "onOffTopic": "",
        "onValue": "On",
        "onType": "str",
        "offValue": "Off",
        "offType": "str",
        "toggleTopic": "connectbtn",
        "toggleValue": "",
        "toggleType": "str",
        "passOnOff": "always",
        "x": 1230,
        "y": 2660,
        "wires": [
            [
                "22250404588294bb"
            ]
        ]
    },
    {
        "id": "6ae893f7206f96ed",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "function 39",
        "func": "if(msg.payload){\n    msg.enabled = false\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1410,
        "y": 2640,
        "wires": [
            [
                "22250404588294bb"
            ]
        ]
    },
    {
        "id": "22250404588294bb",
        "type": "ui_button",
        "z": "93b5a3b37e35c7cc",
        "name": "switch9",
        "group": "1cec39bef7c1040b",
        "order": 69,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "{{payload}}",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "bin",
        "topic": "topic",
        "topicType": "msg",
        "x": 1420,
        "y": 2660,
        "wires": [
            [
                "5b6bb78ccff69acf",
                "6ae893f7206f96ed"
            ]
        ]
    },
    {
        "id": "5b6bb78ccff69acf",
        "type": "toggle",
        "z": "93b5a3b37e35c7cc",
        "name": "",
        "onOffTopic": "",
        "onValue": "On",
        "onType": "str",
        "offValue": "Off",
        "offType": "str",
        "toggleTopic": "connectbtn",
        "toggleValue": "",
        "toggleType": "str",
        "passOnOff": "always",
        "x": 1610,
        "y": 2660,
        "wires": [
            [
                "48abe66a1289042c"
            ]
        ]
    },
    {
        "id": "48abe66a1289042c",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "function 40",
        "func": "if(msg.payload==\"On\"){\n    msg.payload = {\"name\" : \"DO09\", \"value\" : 1};\n}\nelse{\n    msg.payload = {\"name\" : \"DO09\", \"value\" : 0};\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1800,
        "y": 2660,
        "wires": [
            [
                "485c322cfa6b569b"
            ]
        ]
    },
    {
        "id": "485c322cfa6b569b",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "SendingDatatoMqtt",
        "func": "var status = msg.payload;\nmsg.payload = `$MBT:3,${status.name},${status.value}#`;\nmsg.topic = `INS/MBIOT_ETH/09995/CMD`;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2030,
        "y": 2660,
        "wires": [
            [
                "7805a7a86275f4b9"
            ]
        ]
    },
    {
        "id": "dd8c4cd0c9b4a083",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "Showing Light Indication Function",
        "func": "if(msg.payload.DO10==1){\n    msg.payload =\"Off\";\n    msg.enabled = true;\n    return msg;\n}else{\n    msg.payload = \"On\";\n    msg.enabled = true;\n    return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 2920,
        "wires": [
            [
                "17f2921edf7c5b0d"
            ]
        ]
    },
    {
        "id": "17f2921edf7c5b0d",
        "type": "toggle",
        "z": "93b5a3b37e35c7cc",
        "name": "",
        "onOffTopic": "",
        "onValue": "On",
        "onType": "str",
        "offValue": "Off",
        "offType": "str",
        "toggleTopic": "connectbtn",
        "toggleValue": "",
        "toggleType": "str",
        "passOnOff": "always",
        "x": 1230,
        "y": 2920,
        "wires": [
            [
                "369c9d927bda99af"
            ]
        ]
    },
    {
        "id": "6d2932613056bea8",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "function 41",
        "func": "if(msg.payload){\n    msg.enabled = false\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1410,
        "y": 2900,
        "wires": [
            [
                "369c9d927bda99af"
            ]
        ]
    },
    {
        "id": "369c9d927bda99af",
        "type": "ui_button",
        "z": "93b5a3b37e35c7cc",
        "name": "switch10",
        "group": "1cec39bef7c1040b",
        "order": 75,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "{{payload}}",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "bin",
        "topic": "topic",
        "topicType": "msg",
        "x": 1420,
        "y": 2920,
        "wires": [
            [
                "4d55fad10c385755",
                "6d2932613056bea8"
            ]
        ]
    },
    {
        "id": "4d55fad10c385755",
        "type": "toggle",
        "z": "93b5a3b37e35c7cc",
        "name": "",
        "onOffTopic": "",
        "onValue": "On",
        "onType": "str",
        "offValue": "Off",
        "offType": "str",
        "toggleTopic": "connectbtn",
        "toggleValue": "",
        "toggleType": "str",
        "passOnOff": "always",
        "x": 1610,
        "y": 2920,
        "wires": [
            [
                "7ff18b0f92094965"
            ]
        ]
    },
    {
        "id": "7ff18b0f92094965",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "function 42",
        "func": "if(msg.payload==\"On\"){\n    msg.payload = {\"name\" : \"DO10\", \"value\" : 1};\n}\nelse{\n    msg.payload = {\"name\" : \"DO10\", \"value\" : 0};\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1800,
        "y": 2920,
        "wires": [
            [
                "eb1de47f34cf6afd"
            ]
        ]
    },
    {
        "id": "eb1de47f34cf6afd",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "SendingDatatoMqtt",
        "func": "var status = msg.payload;\nmsg.payload = `$MBT:3,${status.name},${status.value}#`;\nmsg.topic = `INS/MBIOT_ETH/09995/CMD`;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2030,
        "y": 2920,
        "wires": [
            [
                "7805a7a86275f4b9"
            ]
        ]
    },
    {
        "id": "4ce38dee764a4538",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "Showing Light Indication Function",
        "func": "if(msg.payload.DO11==1){\n    msg.payload =\"Off\";\n    msg.enabled = true;\n    return msg;\n}else{\n    msg.payload = \"On\";\n    msg.enabled = true;\n    return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 3180,
        "wires": [
            [
                "ab4152f8c1eb62d5"
            ]
        ]
    },
    {
        "id": "ab4152f8c1eb62d5",
        "type": "toggle",
        "z": "93b5a3b37e35c7cc",
        "name": "",
        "onOffTopic": "",
        "onValue": "On",
        "onType": "str",
        "offValue": "Off",
        "offType": "str",
        "toggleTopic": "connectbtn",
        "toggleValue": "",
        "toggleType": "str",
        "passOnOff": "always",
        "x": 1230,
        "y": 3180,
        "wires": [
            [
                "56fb9d4c339689f3"
            ]
        ]
    },
    {
        "id": "8e0b203fc75f19b8",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "function 43",
        "func": "if(msg.payload){\n    msg.enabled = false\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1410,
        "y": 3180,
        "wires": [
            [
                "56fb9d4c339689f3"
            ]
        ]
    },
    {
        "id": "56fb9d4c339689f3",
        "type": "ui_button",
        "z": "93b5a3b37e35c7cc",
        "name": "switch11",
        "group": "1cec39bef7c1040b",
        "order": 81,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "{{payload}}",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "bin",
        "topic": "topic",
        "topicType": "msg",
        "x": 1440,
        "y": 3180,
        "wires": [
            [
                "a07e943bfba32a5b",
                "8e0b203fc75f19b8"
            ]
        ]
    },
    {
        "id": "a07e943bfba32a5b",
        "type": "toggle",
        "z": "93b5a3b37e35c7cc",
        "name": "",
        "onOffTopic": "",
        "onValue": "On",
        "onType": "str",
        "offValue": "Off",
        "offType": "str",
        "toggleTopic": "connectbtn",
        "toggleValue": "",
        "toggleType": "str",
        "passOnOff": "always",
        "x": 1630,
        "y": 3180,
        "wires": [
            [
                "ea069e9b65cb7179"
            ]
        ]
    },
    {
        "id": "ea069e9b65cb7179",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "function 44",
        "func": "if(msg.payload==\"On\"){\n    msg.payload = {\"name\" : \"DO11\", \"value\" : 1};\n}\nelse{\n    msg.payload = {\"name\" : \"DO11\", \"value\" : 0};\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1810,
        "y": 3180,
        "wires": [
            [
                "095a1cb0155842ed"
            ]
        ]
    },
    {
        "id": "095a1cb0155842ed",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "SendingDatatoMqtt",
        "func": "var status = msg.payload;\nmsg.payload = `$MBT:3,${status.name},${status.value}#`;\nmsg.topic = `INS/MBIOT_ETH/09995/CMD`;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2030,
        "y": 3180,
        "wires": [
            [
                "7805a7a86275f4b9"
            ]
        ]
    },
    {
        "id": "7ccd9eb9291da019",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "Showing Light Indication Function",
        "func": "if(msg.payload.DO12==1){\n    msg.payload =\"Off\";\n    msg.enabled = true;\n    return msg;\n}else{\n    msg.payload = \"On\";\n    msg.enabled = true;\n    return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 3500,
        "wires": [
            [
                "6e3c7c403c076b55"
            ]
        ]
    },
    {
        "id": "6e3c7c403c076b55",
        "type": "toggle",
        "z": "93b5a3b37e35c7cc",
        "name": "",
        "onOffTopic": "",
        "onValue": "On",
        "onType": "str",
        "offValue": "Off",
        "offType": "str",
        "toggleTopic": "connectbtn",
        "toggleValue": "",
        "toggleType": "str",
        "passOnOff": "always",
        "x": 1290,
        "y": 3500,
        "wires": [
            [
                "259a5b9416b397ec"
            ]
        ]
    },
    {
        "id": "84679a682c7ccc8f",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "function 45",
        "func": "if(msg.payload){\n    msg.enabled = false\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1490,
        "y": 3480,
        "wires": [
            [
                "259a5b9416b397ec"
            ]
        ]
    },
    {
        "id": "259a5b9416b397ec",
        "type": "ui_button",
        "z": "93b5a3b37e35c7cc",
        "name": "switch12",
        "group": "1cec39bef7c1040b",
        "order": 87,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "{{payload}}",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "bin",
        "topic": "topic",
        "topicType": "msg",
        "x": 1480,
        "y": 3500,
        "wires": [
            [
                "6a1327205f22bc1e",
                "84679a682c7ccc8f"
            ]
        ]
    },
    {
        "id": "6a1327205f22bc1e",
        "type": "toggle",
        "z": "93b5a3b37e35c7cc",
        "name": "",
        "onOffTopic": "",
        "onValue": "On",
        "onType": "str",
        "offValue": "Off",
        "offType": "str",
        "toggleTopic": "connectbtn",
        "toggleValue": "",
        "toggleType": "str",
        "passOnOff": "always",
        "x": 1670,
        "y": 3500,
        "wires": [
            [
                "5e482e1cf4281036"
            ]
        ]
    },
    {
        "id": "5e482e1cf4281036",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "function 46",
        "func": "if(msg.payload==\"On\"){\n    msg.payload = {\"name\" : \"DO12\", \"value\" : 1};\n}\nelse{\n    msg.payload = {\"name\" : \"DO12\", \"value\" : 0};\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1860,
        "y": 3500,
        "wires": [
            [
                "6790821b08ed1fee"
            ]
        ]
    },
    {
        "id": "6790821b08ed1fee",
        "type": "function",
        "z": "93b5a3b37e35c7cc",
        "name": "SendingDatatoMqtt",
        "func": "var status = msg.payload;\nmsg.payload = `$MBT:3,${status.name},${status.value}#`;\nmsg.topic = `INS/MBIOT_ETH/09995/CMD`;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2090,
        "y": 3500,
        "wires": [
            [
                "7805a7a86275f4b9"
            ]
        ]
    },
    {
        "id": "7ccb11cdd11622ec",
        "type": "ui_text",
        "z": "93b5a3b37e35c7cc",
        "g": "ed1a3249c92f181e",
        "group": "1cec39bef7c1040b",
        "order": 18,
        "width": 5,
        "height": 1,
        "name": "DI01time",
        "label": "",
        "format": "{{msg.time}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 240,
        "y": 140,
        "wires": [],
        "info": "<text></text>"
    },
    {
        "id": "2747e0bef079eb3d",
        "type": "ui_text",
        "z": "93b5a3b37e35c7cc",
        "g": "ed1a3249c92f181e",
        "group": "1cec39bef7c1040b",
        "order": 24,
        "width": 5,
        "height": 1,
        "name": "DI02time",
        "label": "",
        "format": "{{msg.time}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 380,
        "y": 140,
        "wires": [],
        "info": "<text></text>"
    },
    {
        "id": "c26e38eed09e8708",
        "type": "ui_text",
        "z": "93b5a3b37e35c7cc",
        "g": "ed1a3249c92f181e",
        "group": "1cec39bef7c1040b",
        "order": 30,
        "width": 5,
        "height": 1,
        "name": "DI03time",
        "label": "",
        "format": "{{msg.time}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 520,
        "y": 140,
        "wires": [],
        "info": "<text></text>"
    },
    {
        "id": "5297d8d4d8152057",
        "type": "ui_text",
        "z": "93b5a3b37e35c7cc",
        "g": "ed1a3249c92f181e",
        "group": "1cec39bef7c1040b",
        "order": 36,
        "width": 5,
        "height": 1,
        "name": "DI04time",
        "label": "",
        "format": "{{msg.time}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 240,
        "y": 200,
        "wires": [],
        "info": "<text></text>"
    },
    {
        "id": "5be58c7b09ab0f75",
        "type": "ui_text",
        "z": "93b5a3b37e35c7cc",
        "g": "ed1a3249c92f181e",
        "group": "1cec39bef7c1040b",
        "order": 42,
        "width": 5,
        "height": 1,
        "name": "DI05time",
        "label": "",
        "format": "{{msg.time}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 380,
        "y": 200,
        "wires": [],
        "info": "<text></text>"
    },
    {
        "id": "44962c98c4554660",
        "type": "ui_text",
        "z": "93b5a3b37e35c7cc",
        "g": "ed1a3249c92f181e",
        "group": "1cec39bef7c1040b",
        "order": 48,
        "width": 5,
        "height": 1,
        "name": "DI06time",
        "label": "",
        "format": "{{msg.time}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 520,
        "y": 200,
        "wires": [],
        "info": "<text></text>"
    },
    {
        "id": "87c857c8808f3a19",
        "type": "ui_text",
        "z": "93b5a3b37e35c7cc",
        "g": "ed1a3249c92f181e",
        "group": "1cec39bef7c1040b",
        "order": 54,
        "width": 5,
        "height": 1,
        "name": "DI07time",
        "label": "",
        "format": "{{msg.time}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 240,
        "y": 260,
        "wires": [],
        "info": "<text></text>"
    },
    {
        "id": "ff3a8471d8730a24",
        "type": "ui_text",
        "z": "93b5a3b37e35c7cc",
        "g": "ed1a3249c92f181e",
        "group": "1cec39bef7c1040b",
        "order": 60,
        "width": 5,
        "height": 1,
        "name": "DI08time",
        "label": "",
        "format": "{{msg.time}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 380,
        "y": 260,
        "wires": [],
        "info": "<text></text>"
    },
    {
        "id": "4abce75a09dffce1",
        "type": "ui_text",
        "z": "93b5a3b37e35c7cc",
        "g": "ed1a3249c92f181e",
        "group": "1cec39bef7c1040b",
        "order": 66,
        "width": 5,
        "height": 1,
        "name": "DI09time",
        "label": "",
        "format": "{{msg.time}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 520,
        "y": 260,
        "wires": [],
        "info": "<text></text>"
    },
    {
        "id": "c090d0fdc146d797",
        "type": "ui_text",
        "z": "93b5a3b37e35c7cc",
        "g": "ed1a3249c92f181e",
        "group": "1cec39bef7c1040b",
        "order": 72,
        "width": 5,
        "height": 1,
        "name": "DI10time",
        "label": "",
        "format": "{{msg.time}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 240,
        "y": 320,
        "wires": [],
        "info": "<text></text>"
    },
    {
        "id": "4e8da70f8bf3f19c",
        "type": "ui_text",
        "z": "93b5a3b37e35c7cc",
        "g": "ed1a3249c92f181e",
        "group": "1cec39bef7c1040b",
        "order": 78,
        "width": 5,
        "height": 1,
        "name": "DI11time",
        "label": "",
        "format": "{{msg.time}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 380,
        "y": 320,
        "wires": [],
        "info": "<text></text>"
    },
    {
        "id": "d2af08f8e0163b01",
        "type": "ui_text",
        "z": "93b5a3b37e35c7cc",
        "g": "ed1a3249c92f181e",
        "group": "1cec39bef7c1040b",
        "order": 84,
        "width": 5,
        "height": 1,
        "name": "DI12time",
        "label": "",
        "format": "{{msg.time}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 520,
        "y": 320,
        "wires": [],
        "info": "<text></text>"
    },
    {
        "id": "88851bf8ee2d6b5b",
        "type": "ui_text",
        "z": "93b5a3b37e35c7cc",
        "group": "1cec39bef7c1040b",
        "order": 10,
        "width": 4,
        "height": 1,
        "name": "Time Stamps",
        "label": "",
        "format": "<font size = 5><margin-left = 10px>Time Stamp",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1670,
        "y": 3920,
        "wires": []
    },
    {
        "id": "3e0ef5771284c7ad",
        "type": "ui_button",
        "z": "93b5a3b37e35c7cc",
        "name": "Digital Output Reports Button",
        "group": "1cec39bef7c1040b",
        "order": 4,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-solid fa-table fa-3x",
        "payload": "MainDashboard",
        "payloadType": "flow",
        "topic": "topic",
        "topicType": "msg",
        "x": 1360,
        "y": 3820,
        "wires": [
            [
                "e0f01e0345e4bd9a"
            ]
        ],
        "info": "<button id=\"btn\">\r\n<button>\r\n<style>\r\n.btn{\r\n    font-size:50px;\r\n}\r\n</style>\r\n"
    },
    {
        "id": "e0f01e0345e4bd9a",
        "type": "change",
        "z": "93b5a3b37e35c7cc",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"tab\":\"Digital Output Report\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1640,
        "y": 3820,
        "wires": [
            [
                "bc99b37c351c3807"
            ]
        ]
    },
    {
        "id": "bfa26dddcf734146",
        "type": "ui_text",
        "z": "220c4ff864c32f49",
        "g": "899c7b1d76378fe8",
        "group": "d1a79b5b1b683bcd",
        "order": 1,
        "width": 13,
        "height": 1,
        "name": "EMS",
        "label": "<font size = 6>Energy Monitoring System",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 870,
        "y": 180,
        "wires": []
    },
    {
        "id": "f06e039a98ee4b0d",
        "type": "ui_button",
        "z": "220c4ff864c32f49",
        "g": "899c7b1d76378fe8",
        "name": "HomeButton",
        "group": "d1a79b5b1b683bcd",
        "order": 4,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-home fa-3x",
        "payload": "MainDashboard",
        "payloadType": "flow",
        "topic": "topic",
        "topicType": "msg",
        "x": 1110,
        "y": 180,
        "wires": [
            [
                "0babae2e670d5bcf"
            ]
        ],
        "info": "<button id=\"btn\">\r\n<button>\r\n<style>\r\n.btn{\r\n    font-size:50px;\r\n}\r\n</style>\r\n"
    },
    {
        "id": "0babae2e670d5bcf",
        "type": "change",
        "z": "220c4ff864c32f49",
        "g": "899c7b1d76378fe8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"tab\":\"Dashboard\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1440,
        "y": 180,
        "wires": [
            [
                "c559c76d6f0d031b"
            ]
        ]
    },
    {
        "id": "c559c76d6f0d031b",
        "type": "ui_ui_control",
        "z": "220c4ff864c32f49",
        "g": "899c7b1d76378fe8",
        "name": "",
        "events": "all",
        "x": 1740,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "c31788c767930c2c",
        "type": "mqtt in",
        "z": "220c4ff864c32f49",
        "name": "",
        "topic": "INS/MBIOT_ETH/09995/UTILITY",
        "qos": "0",
        "datatype": "json",
        "broker": "665f18f8041514a1",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 370,
        "y": 620,
        "wires": [
            [
                "1462819a03133904"
            ]
        ]
    },
    {
        "id": "1462819a03133904",
        "type": "function",
        "z": "220c4ff864c32f49",
        "name": "Allotting Values to Digital Tags",
        "func": "if(msg.payload.RV){\n    // console.log(msg.payload);\n    // var status = msg.payload;\n    // msg.payload = [\n    //     status\n    // ];\n  var date = new Date();\n    var year = date.getFullYear();\n    var month = date.getMonth() + 1;\n    var day = date.getDate();\n    var hours = date.getHours().toString().padStart(2, '0');\n    var minutes = date.getMinutes().toString().padStart(2, '0');\n    var seconds = date.getSeconds().toString().padStart(2, '0');\n\n    var fullformat = `${day.toString().padStart(2, '0')}-${month.toString().padStart(2, '0')}-${year}`;\n    var timeformat = `${hours}-${minutes}-${seconds}`;\n    msg.time = ` ${fullformat} &nbsp; &nbsp; ${timeformat}`;\n    return msg;\n}\n\nelse{\n\n}\n\n\n// console.log(msg);\n// msg.payload;\n// console.log(msg);\n//return msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 720,
        "wires": [
            [
                "d0010c9e4a06adbb",
                "90d2368b500f4080",
                "25e13ce4f50eb485",
                "c355f3adcfca9452",
                "15560cbb2c270bf2",
                "98773619f302047a",
                "7c9effe526e56bcb",
                "a6335f6ad976504f",
                "dc757ea9c5908196",
                "0b686daa74307867",
                "cfb6dbd6f3f9c0e9",
                "60147517bc133b70",
                "6be6cb2672047f41",
                "2c570846ad550a2f",
                "e62cf6fd2a924f40",
                "262fe69e071036a9",
                "1852ea907cb1834e",
                "6ec0682ddc34f516",
                "ef8bbddf1e05c949",
                "bc2042b14260a298",
                "fdb933d6e8eda600",
                "ac355dd78d50341f",
                "3162e2433e420403",
                "11b08a249089cfec",
                "391a8edae11647c8",
                "2d69bde789f6e5be",
                "3e9ba444b9b4db35",
                "f1b837ebf715177c",
                "121f4cc47ab8effc",
                "1af3db15a25f14fa",
                "400682529edcfd18",
                "3e58ca0a56de892e",
                "05075f785ca6fcc2"
            ]
        ]
    },
    {
        "id": "306fcad3d8f3fe66",
        "type": "ui_text",
        "z": "220c4ff864c32f49",
        "g": "b287cac207f7a873",
        "group": "c0839fee6b778437",
        "order": 15,
        "width": 5,
        "height": 1,
        "name": "Wh",
        "label": "<b>Wh</b>",
        "format": "&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {{msg.payload.Wh}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1170,
        "y": 1200,
        "wires": []
    },
    {
        "id": "c20fdf237f5682bc",
        "type": "ui_text",
        "z": "220c4ff864c32f49",
        "g": "b287cac207f7a873",
        "group": "c0839fee6b778437",
        "order": 19,
        "width": 4,
        "height": 1,
        "name": "Freq",
        "label": "<b> Freq</b>",
        "format": "&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {{msg.payload.Freq}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1170,
        "y": 1260,
        "wires": []
    },
    {
        "id": "e55d5a524ae49380",
        "type": "ui_text",
        "z": "220c4ff864c32f49",
        "g": "b287cac207f7a873",
        "group": "c0839fee6b778437",
        "order": 23,
        "width": 4,
        "height": 1,
        "name": "PF",
        "label": "<b>PF</b>",
        "format": "&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {{msg.payload.PF}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1170,
        "y": 1320,
        "wires": []
    },
    {
        "id": "80eeb2e416e46c25",
        "type": "ui_text",
        "z": "220c4ff864c32f49",
        "g": "58cd1db56c8bd316",
        "group": "c0839fee6b778437",
        "order": 48,
        "width": 4,
        "height": 1,
        "name": "RA",
        "label": "<bordrer = 1px solid  red><b>RA</b>",
        "format": "&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {{msg.payload.RA}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1185,
        "y": 1460,
        "wires": [],
        "l": false
    },
    {
        "id": "8ab68da31f195a09",
        "type": "ui_text",
        "z": "220c4ff864c32f49",
        "g": "58cd1db56c8bd316",
        "group": "c0839fee6b778437",
        "order": 52,
        "width": 4,
        "height": 1,
        "name": "BA",
        "label": "<b>BA</b>",
        "format": "&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {{msg.payload.BA}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1180,
        "y": 1500,
        "wires": []
    },
    {
        "id": "645262c5c0f5eb98",
        "type": "ui_text",
        "z": "220c4ff864c32f49",
        "g": "58cd1db56c8bd316",
        "group": "c0839fee6b778437",
        "order": 56,
        "width": 4,
        "height": 1,
        "name": "TA",
        "label": "<b>TA</b>",
        "format": "&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {{msg.payload.TA}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1180,
        "y": 1540,
        "wires": []
    },
    {
        "id": "953d9618f3398874",
        "type": "ui_text",
        "z": "220c4ff864c32f49",
        "g": "58cd1db56c8bd316",
        "group": "c0839fee6b778437",
        "order": 60,
        "width": 4,
        "height": 1,
        "name": "YA",
        "label": "<b>YA</b>",
        "format": "&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {{msg.payload.YA}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1180,
        "y": 1580,
        "wires": []
    },
    {
        "id": "02816f40541446b1",
        "type": "ui_text",
        "z": "220c4ff864c32f49",
        "g": "10fb4113ae3f7f6b",
        "group": "c0839fee6b778437",
        "order": 42,
        "width": 4,
        "height": 1,
        "name": "VLN",
        "label": "<b>VLN</b>",
        "format": "&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {{msg.payload.VLN}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1170,
        "y": 1740,
        "wires": []
    },
    {
        "id": "dbd49a8b18d5940c",
        "type": "ui_text",
        "z": "220c4ff864c32f49",
        "g": "10fb4113ae3f7f6b",
        "group": "c0839fee6b778437",
        "order": 30,
        "width": 4,
        "height": 1,
        "name": "RV",
        "label": "<b>RV</b>",
        "format": "&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {{msg.payload.RV}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1170,
        "y": 1780,
        "wires": []
    },
    {
        "id": "8059502cd03a9597",
        "type": "ui_text",
        "z": "220c4ff864c32f49",
        "g": "10fb4113ae3f7f6b",
        "group": "c0839fee6b778437",
        "order": 34,
        "width": 4,
        "height": 1,
        "name": "YV",
        "label": "<b>YV</b>",
        "format": "&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {{msg.payload.YV}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1170,
        "y": 1820,
        "wires": []
    },
    {
        "id": "1e723bafbc1f19a1",
        "type": "ui_text",
        "z": "220c4ff864c32f49",
        "g": "10fb4113ae3f7f6b",
        "group": "c0839fee6b778437",
        "order": 38,
        "width": 4,
        "height": 1,
        "name": "BV",
        "label": "<b>BV</b>",
        "format": "&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {{msg.payload.BV}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1170,
        "y": 1860,
        "wires": []
    },
    {
        "id": "d0010c9e4a06adbb",
        "type": "function",
        "z": "220c4ff864c32f49",
        "g": "6a1247cd5a634ac3",
        "name": "Wh Accessing Data Function",
        "func": "// create one variable and assign it the WH value;\nvar Wh = msg.payload.Wh;\n\n// create object\nvar msg1 = {};\n\n// inject variable value to the payload of object\nmsg1.payload = Wh;\nmsg1.topic = \"Wh\"\n\n// give output as a msg1\nconsole.log(msg1);\nreturn msg1;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 440,
        "wires": [
            [
                "6da3df05f31abdbe"
            ]
        ]
    },
    {
        "id": "6da3df05f31abdbe",
        "type": "ui_chart",
        "z": "220c4ff864c32f49",
        "g": "6a1247cd5a634ac3",
        "name": "",
        "group": "d1a79b5b1b683bcd",
        "order": 9,
        "width": 6,
        "height": 4,
        "label": "Wh",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": true,
        "colors": [
            "#d93abc",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1430,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "90d2368b500f4080",
        "type": "function",
        "z": "220c4ff864c32f49",
        "g": "6a1247cd5a634ac3",
        "name": "Freq Accessing Data Function",
        "func": "// create one variable and assign it the Freq value;\nvar Freq = msg.payload.Freq;\n\n// create object\nvar msg2 = {};\n\n// inject variable value to the payload of object\nmsg2.payload = Freq;\nmsg2.topic = \"Freq\"\n\n// give output as a msg2\nreturn msg2;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1090,
        "y": 500,
        "wires": [
            [
                "986f187ad72614d2"
            ]
        ]
    },
    {
        "id": "25e13ce4f50eb485",
        "type": "function",
        "z": "220c4ff864c32f49",
        "g": "6a1247cd5a634ac3",
        "name": "PF Accessing Data Function",
        "func": "// create one variable and assign it the PF value;\nvar PF = msg.payload.PF;\n\n// create object\nvar msg3 = {};\n\n// inject variable value to the payload of object\nmsg3.payload = PF;\nmsg3.topic = \"PF\"\n\n// give output as a msg3\nreturn msg3;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 560,
        "wires": [
            [
                "6f9950eecd75576a"
            ]
        ]
    },
    {
        "id": "986f187ad72614d2",
        "type": "ui_chart",
        "z": "220c4ff864c32f49",
        "g": "6a1247cd5a634ac3",
        "name": "",
        "group": "d1a79b5b1b683bcd",
        "order": 10,
        "width": 6,
        "height": 4,
        "label": "Frequency (Hz)",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#4bec56",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1460,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "6f9950eecd75576a",
        "type": "ui_chart",
        "z": "220c4ff864c32f49",
        "g": "6a1247cd5a634ac3",
        "name": "PF",
        "group": "d1a79b5b1b683bcd",
        "order": 11,
        "width": 6,
        "height": 4,
        "label": "PF",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#f03c28",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1430,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "c355f3adcfca9452",
        "type": "function",
        "z": "220c4ff864c32f49",
        "g": "c29e176bee6df1d2",
        "name": "RA Accessing Data Function",
        "func": "// create one variable and assign it the RA value;\nvar RA = msg.payload.RA;\n\n// create object\nvar msg5 = {};\n\n// inject variable value to the payload of object\nmsg5.payload = RA;\nmsg5.topic = \"RA\"\n\n// give output as a msg5\nreturn msg5;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 720,
        "wires": [
            [
                "a650a9dd7fa6f4bf"
            ]
        ]
    },
    {
        "id": "15560cbb2c270bf2",
        "type": "function",
        "z": "220c4ff864c32f49",
        "g": "c29e176bee6df1d2",
        "name": "YA Accessing Data Function",
        "func": "// create one variable and assign it the YA value;\nvar YA = msg.payload.YA;\n\n// create object\nvar msg6 = {};\n\n// inject variable value to the payload of object\nmsg6.payload = YA;\nmsg6.topic = \"YA\"\n\n// give output as a msg6\nreturn msg6;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 760,
        "wires": [
            [
                "a650a9dd7fa6f4bf"
            ]
        ]
    },
    {
        "id": "98773619f302047a",
        "type": "function",
        "z": "220c4ff864c32f49",
        "g": "c29e176bee6df1d2",
        "name": "BA Accessing Data Function",
        "func": "// create one variable and assign it the BA value;\nvar BA = msg.payload.BA;\n\n// create object\nvar msg7 = {};\n\n// inject variable value to the payload of object\nmsg7.payload = BA;\nmsg7.topic = \"BA\"\n\n// give output as a msg7\nreturn msg7;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 800,
        "wires": [
            [
                "a650a9dd7fa6f4bf"
            ]
        ]
    },
    {
        "id": "7c9effe526e56bcb",
        "type": "function",
        "z": "220c4ff864c32f49",
        "g": "c29e176bee6df1d2",
        "name": "TA Accessing Data Function",
        "func": "// create one variable and assign it the TA value;\nvar TA = msg.payload.TA;\n\n// create object\nvar msg8 = {};\n\n// inject variable value to the payload of object\nmsg8.payload = TA;\nmsg8.topic = \"TA\"\n\n// give output as a msg8\nreturn msg8;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 840,
        "wires": [
            [
                "a650a9dd7fa6f4bf"
            ]
        ]
    },
    {
        "id": "a650a9dd7fa6f4bf",
        "type": "ui_chart",
        "z": "220c4ff864c32f49",
        "g": "c29e176bee6df1d2",
        "name": "RA,YA,BA,TA",
        "group": "d1a79b5b1b683bcd",
        "order": 26,
        "width": 20,
        "height": 4,
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": true,
        "colors": [
            "#8941e1",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1660,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "a6335f6ad976504f",
        "type": "function",
        "z": "220c4ff864c32f49",
        "g": "7fdf43f5d8a02fad",
        "name": "RV Accessing Data Function",
        "func": "// create one variable and assign it the RA value;\nvar RV = msg.payload.RV;\n\n// create object\nvar msg1 = {};\n\n// inject variable value to the payload of object\nmsg1.payload = RV;\nmsg1.topic = \"RV\"\n\n// give output as a msg1\nreturn msg1;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 960,
        "wires": [
            [
                "676732ce881b45d4"
            ]
        ]
    },
    {
        "id": "dc757ea9c5908196",
        "type": "function",
        "z": "220c4ff864c32f49",
        "g": "7fdf43f5d8a02fad",
        "name": "BV Accessing Data Function",
        "func": "// create one variable and assign it the BV value;\nvar BV = msg.payload.BV;\n\n// create object\nvar msg3 = {};\n\n// inject variable value to the payload of object\nmsg3.payload = BV;\nmsg3.topic = \"BV\"\n\n// give output as a msg3\nreturn msg3;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1040,
        "wires": [
            [
                "676732ce881b45d4"
            ]
        ]
    },
    {
        "id": "0b686daa74307867",
        "type": "function",
        "z": "220c4ff864c32f49",
        "g": "7fdf43f5d8a02fad",
        "name": "VLN Accessing Data Function",
        "func": "// create one variable and assign it the TA value;\nvar VLN = msg.payload.VLN;\n\n// create object\nvar msg4 = {};\n\n// inject variable value to the payload of object\nmsg4.payload = VLN;\nmsg4.topic = \"VLN\"\n\n// give output as a msg4\nreturn msg4;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 1080,
        "wires": [
            [
                "676732ce881b45d4"
            ]
        ]
    },
    {
        "id": "676732ce881b45d4",
        "type": "ui_chart",
        "z": "220c4ff864c32f49",
        "g": "7fdf43f5d8a02fad",
        "name": "RV,YV,BV,VLN",
        "group": "d1a79b5b1b683bcd",
        "order": 19,
        "width": 20,
        "height": 4,
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": true,
        "colors": [
            "#16c3d0",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1680,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "6e2ad98c9e83b117",
        "type": "ui_text",
        "z": "220c4ff864c32f49",
        "g": "738c62c6244a1991",
        "group": "d1a79b5b1b683bcd",
        "order": 36,
        "width": 22,
        "height": 1,
        "name": "Below Space Blank Text",
        "label": "",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 310,
        "y": 1760,
        "wires": []
    },
    {
        "id": "cfb6dbd6f3f9c0e9",
        "type": "function",
        "z": "220c4ff864c32f49",
        "g": "b287cac207f7a873",
        "name": "function 9",
        "func": "\n\n// A string with leading zeros\nvar str = msg.payload.Wh;\n\n// Use replace() with a regular expression to remove leading zeros before the decimal point\nvar newStr = str.replace(/^0+(?=\\d*\\.\\d+)/, \"\");\n\n// If the string is empty after removing leading zeros, add a single '0'\nif (newStr === \"\") {\n    newStr = \"0\";\n} else if (newStr.startsWith(\".\")) {\n    newStr = \"0\" + newStr;\n}\n\n// Print the result\nmsg.payload.Wh = newStr;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 1200,
        "wires": [
            [
                "306fcad3d8f3fe66"
            ]
        ]
    },
    {
        "id": "60147517bc133b70",
        "type": "function",
        "z": "220c4ff864c32f49",
        "g": "b287cac207f7a873",
        "name": "function 10",
        "func": "\n\n// A string with leading zeros\nvar str = msg.payload.Freq;\n\n// Use replace() with a regular expression to remove leading zeros before the decimal point\nvar newStr = str.replace(/^0+(?=\\d*\\.\\d+)/, \"\");\n\n// If the string is empty after removing leading zeros, add a single '0'\nif (newStr === \"\") {\n    newStr = \"0\";\n} else if (newStr.startsWith(\".\")) {\n    newStr = \"0\" + newStr;\n}\n\n// Print the result\nmsg.payload.Freq = newStr;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 1260,
        "wires": [
            [
                "c20fdf237f5682bc"
            ]
        ]
    },
    {
        "id": "6be6cb2672047f41",
        "type": "function",
        "z": "220c4ff864c32f49",
        "g": "b287cac207f7a873",
        "name": "function 11",
        "func": "\n\n// A string with leading zeros\nvar str = msg.payload.PF;\n\n// Use replace() with a regular expression to remove leading zeros before the decimal point\nvar newStr = str.replace(/^0+(?=\\d*\\.\\d+)/, \"\");\n\n// If the string is empty after removing leading zeros, add a single '0'\nif (newStr === \"\") {\n    newStr = \"0\";\n} else if (newStr.startsWith(\".\")) {\n    newStr = \"0\" + newStr;\n}\n\n// Print the result\nmsg.payload.PF = newStr;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 1320,
        "wires": [
            [
                "e55d5a524ae49380"
            ]
        ]
    },
    {
        "id": "2c570846ad550a2f",
        "type": "function",
        "z": "220c4ff864c32f49",
        "g": "58cd1db56c8bd316",
        "name": "function 12",
        "func": "\n\n// A string with leading zeros\nvar str = msg.payload.RA;\n\n// Use replace() with a regular expression to remove leading zeros before the decimal point\nvar newStr = str.replace(/^0+(?=\\d*\\.\\d+)/, \"\");\n\n// If the string is empty after removing leading zeros, add a single '0'\nif (newStr === \"\"){\n    \n    newStr = \"0\";\n} else if (newStr.startsWith(\".\")) {\n    newStr = \"0\" + newStr;\n}\n\n// Print the result\nmsg.payload.RA = newStr;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 1460,
        "wires": [
            [
                "80eeb2e416e46c25"
            ]
        ]
    },
    {
        "id": "e62cf6fd2a924f40",
        "type": "function",
        "z": "220c4ff864c32f49",
        "g": "58cd1db56c8bd316",
        "name": "function 13",
        "func": "\n\n// A string with leading zeros\nvar str = msg.payload.BA;\n\n// Use replace() with a regular expression to remove leading zeros before the decimal point\nvar newStr = str.replace(/^0+(?=\\d*\\.\\d+)/, \"\");\n\n// If the string is empty after removing leading zeros, add a single '0'\nif (newStr === \"\") {\n    newStr = \"0\";\n} else if (newStr.startsWith(\".\")) {\n    newStr = \"0\" + newStr;\n}\n\n// Print the result\nmsg.payload.BA = newStr;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 1500,
        "wires": [
            [
                "8ab68da31f195a09"
            ]
        ]
    },
    {
        "id": "262fe69e071036a9",
        "type": "function",
        "z": "220c4ff864c32f49",
        "g": "58cd1db56c8bd316",
        "name": "function 14",
        "func": "\n\n// A string with leading zeros\nvar str = msg.payload.TA;\n\n// Use replace() with a regular expression to remove leading zeros before the decimal point\nvar newStr = str.replace(/^0+(?=\\d*\\.\\d+)/, \"\");\n\n// If the string is empty after removing leading zeros, add a single '0'\nif (newStr === \"\") {\n    newStr = \"0\";\n} else if (newStr.startsWith(\".\")) {\n    newStr = \"0\" + newStr;\n}\n\n// Print the result\nmsg.payload.TA = newStr;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 1540,
        "wires": [
            [
                "645262c5c0f5eb98"
            ]
        ]
    },
    {
        "id": "1852ea907cb1834e",
        "type": "function",
        "z": "220c4ff864c32f49",
        "g": "58cd1db56c8bd316",
        "name": "function 15",
        "func": "\n\n// A string with leading zeros\nvar str = msg.payload.YA;\n\n// Use replace() with a regular expression to remove leading zeros before the decimal point\nvar newStr = str.replace(/^0+(?=\\d*\\.\\d+)/, \"\");\n\n// If the string is empty after removing leading zeros, add a single '0'\nif (newStr === \"\") {\n    newStr = \"0\";\n} else if (newStr.startsWith(\".\")) {\n    newStr = \"0\" + newStr;\n}\n\n// Print the result\nmsg.payload.YA = newStr;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 1580,
        "wires": [
            [
                "953d9618f3398874"
            ]
        ]
    },
    {
        "id": "6ec0682ddc34f516",
        "type": "function",
        "z": "220c4ff864c32f49",
        "g": "10fb4113ae3f7f6b",
        "name": "function 16",
        "func": "\n\n// A string with leading zeros\nvar str = msg.payload.VLN;\n\n// Use replace() with a regular expression to remove leading zeros before the decimal point\nvar newStr = str.replace(/^0+(?=\\d*\\.\\d+)/, \"\");\n\n// If the string is empty after removing leading zeros, add a single '0'\nif (newStr === \"\") {\n    newStr = \"0\";\n} else if (newStr.startsWith(\".\")) {\n    newStr = \"0\" + newStr;\n}\n\n// Print the result\nmsg.payload.VLN = newStr;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 1740,
        "wires": [
            [
                "02816f40541446b1"
            ]
        ]
    },
    {
        "id": "ef8bbddf1e05c949",
        "type": "function",
        "z": "220c4ff864c32f49",
        "g": "10fb4113ae3f7f6b",
        "name": "function 17",
        "func": "\n\n// A string with leading zeros\nvar str = msg.payload.RV;\n\n// Use replace() with a regular expression to remove leading zeros before the decimal point\nvar newStr = str.replace(/^0+(?=\\d*\\.\\d+)/, \"\");\n\n// If the string is empty after removing leading zeros, add a single '0'\nif (newStr === \"\") {\n    newStr = \"0\";\n} else if (newStr.startsWith(\".\")) {\n    newStr = \"0\" + newStr;\n}\n\n// Print the result\nmsg.payload.RV = newStr;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 1780,
        "wires": [
            [
                "dbd49a8b18d5940c"
            ]
        ]
    },
    {
        "id": "bc2042b14260a298",
        "type": "function",
        "z": "220c4ff864c32f49",
        "g": "10fb4113ae3f7f6b",
        "name": "function 19",
        "func": "\n\n// A string with leading zeros\nvar str = msg.payload.YV;\n\n// Use replace() with a regular expression to remove leading zeros before the decimal point\nvar newStr = str.replace(/^0+(?=\\d*\\.\\d+)/, \"\");\n\n// If the string is empty after removing leading zeros, add a single '0'\nif (newStr === \"\") {\n    newStr = \"0\";\n} else if (newStr.startsWith(\".\")) {\n    newStr = \"0\" + newStr;\n}\n\n// Print the result\nmsg.payload.YV = newStr;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 1820,
        "wires": [
            [
                "8059502cd03a9597"
            ]
        ]
    },
    {
        "id": "fdb933d6e8eda600",
        "type": "function",
        "z": "220c4ff864c32f49",
        "g": "10fb4113ae3f7f6b",
        "name": "function 20",
        "func": "\n\n// A string with leading zeros\nvar str = msg.payload.BV;\n\n// Use replace() with a regular expression to remove leading zeros before the decimal point\nvar newStr = str.replace(/^0+(?=\\d*\\.\\d+)/, \"\");\n\n// If the string is empty after removing leading zeros, add a single '0'\nif (newStr === \"\") {\n    newStr = \"0\";\n} else if (newStr.startsWith(\".\")) {\n    newStr = \"0\" + newStr;\n}\n\n// Print the result\nmsg.payload.BV = newStr;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 1860,
        "wires": [
            [
                "1e723bafbc1f19a1"
            ]
        ]
    },
    {
        "id": "ac355dd78d50341f",
        "type": "function",
        "z": "220c4ff864c32f49",
        "g": "7fdf43f5d8a02fad",
        "name": "YV Accessing Data Function",
        "func": "// create one variable and assign it the YV value;\nvar YV = msg.payload.YV;\n\n// create object\nvar msg2 = {};\n\n// inject variable value to the payload of object\nmsg2.payload = YV;\nmsg2.topic = \"YV\"\n\n// give output as a msg2\nreturn msg2;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1000,
        "wires": [
            [
                "676732ce881b45d4"
            ]
        ]
    },
    {
        "id": "068ede4fe0a64759",
        "type": "ui_text",
        "z": "220c4ff864c32f49",
        "g": "738c62c6244a1991",
        "group": "c0839fee6b778437",
        "order": 2,
        "width": 5,
        "height": 1,
        "name": "blank space in  wh",
        "label": "",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 290,
        "y": 1660,
        "wires": []
    },
    {
        "id": "5d5fc8360254ea06",
        "type": "ui_text",
        "z": "220c4ff864c32f49",
        "g": "738c62c6244a1991",
        "group": "c0839fee6b778437",
        "order": 63,
        "width": 5,
        "height": 1,
        "name": "Below Blank Space",
        "label": "",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 290,
        "y": 1720,
        "wires": []
    },
    {
        "id": "a0da38d1318027fd",
        "type": "ui_button",
        "z": "220c4ff864c32f49",
        "g": "899c7b1d76378fe8",
        "name": "Energy Reports Button",
        "group": "d1a79b5b1b683bcd",
        "order": 3,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-solid fa-table fa-3x",
        "payload": "MainDashboard",
        "payloadType": "flow",
        "topic": "topic",
        "topicType": "msg",
        "x": 1140,
        "y": 240,
        "wires": [
            [
                "35e89134809098e9"
            ]
        ],
        "info": "<button id=\"btn\">\r\n<button>\r\n<style>\r\n.btn{\r\n    font-size:50px;\r\n}\r\n</style>\r\n"
    },
    {
        "id": "35e89134809098e9",
        "type": "change",
        "z": "220c4ff864c32f49",
        "g": "899c7b1d76378fe8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"tab\":\"Energy Meter Reports\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1440,
        "y": 240,
        "wires": [
            [
                "c559c76d6f0d031b"
            ]
        ]
    },
    {
        "id": "3162e2433e420403",
        "type": "ui_text",
        "z": "220c4ff864c32f49",
        "g": "8c4079981c186fed",
        "group": "c0839fee6b778437",
        "order": 14,
        "width": 5,
        "height": 1,
        "name": "Wh time",
        "label": "",
        "format": "{{msg.time}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 660,
        "y": 1500,
        "wires": [],
        "info": "<text></text>"
    },
    {
        "id": "11b08a249089cfec",
        "type": "ui_text",
        "z": "220c4ff864c32f49",
        "g": "8c4079981c186fed",
        "group": "c0839fee6b778437",
        "order": 18,
        "width": 5,
        "height": 1,
        "name": "Freq time",
        "label": "",
        "format": "{{msg.time}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 660,
        "y": 1540,
        "wires": [],
        "info": "<text></text>"
    },
    {
        "id": "391a8edae11647c8",
        "type": "ui_text",
        "z": "220c4ff864c32f49",
        "g": "8c4079981c186fed",
        "group": "c0839fee6b778437",
        "order": 22,
        "width": 5,
        "height": 1,
        "name": "Pf time",
        "label": "",
        "format": "{{msg.time}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 660,
        "y": 1580,
        "wires": [],
        "info": "<text></text>"
    },
    {
        "id": "2d69bde789f6e5be",
        "type": "ui_text",
        "z": "220c4ff864c32f49",
        "g": "8c4079981c186fed",
        "group": "c0839fee6b778437",
        "order": 41,
        "width": 5,
        "height": 1,
        "name": "VLN time",
        "label": "",
        "format": "{{msg.time}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 660,
        "y": 1620,
        "wires": [],
        "info": "<text></text>"
    },
    {
        "id": "3e9ba444b9b4db35",
        "type": "ui_text",
        "z": "220c4ff864c32f49",
        "g": "8c4079981c186fed",
        "group": "c0839fee6b778437",
        "order": 29,
        "width": 5,
        "height": 1,
        "name": "RV time",
        "label": "",
        "format": "{{msg.time}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 660,
        "y": 1660,
        "wires": [],
        "info": "<text></text>"
    },
    {
        "id": "f1b837ebf715177c",
        "type": "ui_text",
        "z": "220c4ff864c32f49",
        "g": "8c4079981c186fed",
        "group": "c0839fee6b778437",
        "order": 33,
        "width": 5,
        "height": 1,
        "name": "YV time",
        "label": "",
        "format": "{{msg.time}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 660,
        "y": 1700,
        "wires": [],
        "info": "<text></text>"
    },
    {
        "id": "121f4cc47ab8effc",
        "type": "ui_text",
        "z": "220c4ff864c32f49",
        "g": "8c4079981c186fed",
        "group": "c0839fee6b778437",
        "order": 37,
        "width": 5,
        "height": 1,
        "name": "BV time",
        "label": "",
        "format": "{{msg.time}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 660,
        "y": 1740,
        "wires": [],
        "info": "<text></text>"
    },
    {
        "id": "1af3db15a25f14fa",
        "type": "ui_text",
        "z": "220c4ff864c32f49",
        "g": "8c4079981c186fed",
        "group": "c0839fee6b778437",
        "order": 47,
        "width": 5,
        "height": 1,
        "name": "RA time",
        "label": "",
        "format": "{{msg.time}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 660,
        "y": 1780,
        "wires": [],
        "info": "<text></text>"
    },
    {
        "id": "400682529edcfd18",
        "type": "ui_text",
        "z": "220c4ff864c32f49",
        "g": "8c4079981c186fed",
        "group": "c0839fee6b778437",
        "order": 51,
        "width": 5,
        "height": 1,
        "name": "BA time",
        "label": "",
        "format": "{{msg.time}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 660,
        "y": 1820,
        "wires": [],
        "info": "<text></text>"
    },
    {
        "id": "3e58ca0a56de892e",
        "type": "ui_text",
        "z": "220c4ff864c32f49",
        "g": "8c4079981c186fed",
        "group": "c0839fee6b778437",
        "order": 55,
        "width": 5,
        "height": 1,
        "name": "TA time",
        "label": "",
        "format": "{{msg.time}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 660,
        "y": 1860,
        "wires": [],
        "info": "<text></text>"
    },
    {
        "id": "05075f785ca6fcc2",
        "type": "ui_text",
        "z": "220c4ff864c32f49",
        "g": "8c4079981c186fed",
        "group": "c0839fee6b778437",
        "order": 59,
        "width": 5,
        "height": 1,
        "name": "YA time",
        "label": "",
        "format": "{{msg.time}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 660,
        "y": 1900,
        "wires": [],
        "info": "<text></text>"
    },
    {
        "id": "de3d2820115acc35",
        "type": "ui_text",
        "z": "220c4ff864c32f49",
        "g": "738c62c6244a1991",
        "group": "c0839fee6b778437",
        "order": 65,
        "width": 5,
        "height": 1,
        "name": "blank space in  voltage ",
        "label": "",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 300,
        "y": 1540,
        "wires": []
    },
    {
        "id": "438731f209a28a35",
        "type": "ui_text",
        "z": "220c4ff864c32f49",
        "g": "738c62c6244a1991",
        "group": "c0839fee6b778437",
        "order": 71,
        "width": 5,
        "height": 1,
        "name": "blank space in  Current",
        "label": "",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 300,
        "y": 1600,
        "wires": []
    },
    {
        "id": "e703ecbfbc0b3793",
        "type": "ui_text",
        "z": "220c4ff864c32f49",
        "g": "899c7b1d76378fe8",
        "group": "c0839fee6b778437",
        "order": 8,
        "width": 3,
        "height": 1,
        "name": "headingTimeStamp",
        "label": "",
        "format": "<font size = 5>TimeStamp",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 470,
        "y": 240,
        "wires": [],
        "info": "<h1>\r\nClick\r\n</h1>"
    },
    {
        "id": "3abff9fdd9b5975c",
        "type": "ui_text",
        "z": "220c4ff864c32f49",
        "g": "899c7b1d76378fe8",
        "group": "c0839fee6b778437",
        "order": 10,
        "width": 3,
        "height": 1,
        "name": "heading parameter",
        "label": "",
        "format": "<font size = 5>Parameter",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 690,
        "y": 240,
        "wires": [],
        "info": "<h1>\r\nClick\r\n</h1>"
    },
    {
        "id": "6642574b6690b376",
        "type": "ui_text",
        "z": "220c4ff864c32f49",
        "g": "899c7b1d76378fe8",
        "group": "c0839fee6b778437",
        "order": 11,
        "width": 2,
        "height": 1,
        "name": "heading Values",
        "label": "",
        "format": "<font size = 5>Values",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 920,
        "y": 240,
        "wires": [],
        "info": "<h1>\r\nClick\r\n</h1>"
    },
    {
        "id": "92d143d9174cc989",
        "type": "ui_form",
        "z": "28a1f791cc37d4af",
        "name": "",
        "label": "Start date",
        "group": "e5356d149c2603da",
        "order": 8,
        "width": 10,
        "height": 1,
        "options": [
            {
                "label": "Start Date",
                "value": "StartDate",
                "type": "date",
                "required": true,
                "rows": null
            },
            {
                "label": "End Date",
                "value": "EndDate",
                "type": "date",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "StartDate": "",
            "EndDate": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 140,
        "y": 360,
        "wires": [
            [
                "ba4a827cddab8804"
            ]
        ]
    },
    {
        "id": "ba4a827cddab8804",
        "type": "function",
        "z": "28a1f791cc37d4af",
        "name": "AccessingDataFromDB",
        "func": "var startdate = msg.payload.StartDate;\nvar enddate = msg.payload.EndDate\n\nfunction extractDate(dateString) {\n    // Parse the input date string with timezone information\n    const inputDate = new Date(dateString);\n\n    // Extract the date part without time\n    const outputDate = inputDate.toISOString().slice(0, 10);\n\n    return outputDate;\n}\n\n\n// Define two input date strings\nconst inputDateStr1 = startdate;\n\nconst inputDateStr2 = enddate;\n\n\n// Extract and print the date parts\nvar outputDate1 = extractDate(inputDateStr1);\nvar outputDate2 = extractDate(inputDateStr2);\n\nfunction getNextDay(dateString) {\n  // Create a Date object from the provided string\n  var date = new Date(dateString);\n\n  // Add one day to the date\n  date.setDate(date.getDate() + 1);\n\n  // Format the date in YYYY-MM-DD format\n  var nextDay = date.toISOString().slice(0, 10);\n\n  return nextDay;\n}\n\n// Example usage:\nvar todayString = outputDate1; // Replace with your dynamic string\nvar tomorrow = getNextDay(todayString);\nvar startdt = tomorrow;\n\nvar lastdayString = outputDate2;\nvar lastday = getNextDay(lastdayString);\n\nvar enddt   = lastday;\nconsole.log(outputDate1); // Output: 2024-04-28\nconsole.log(outputDate2); // Output: 2023-10-26\n\n\nmsg.topic = `select TIMESTAMP,  RAWPACKETS from iotdevicedata where TIMESTAMP between \"${startdt + ' 00:00:00'}\"  and  \"${enddt + ' 23:59:59'}\" AND  IOTYPE = 'AI';`\n// msg.topic = `select TIMESTAMP,  RAWPACKETS from iotdevicedata where IOTYPE = 'AI';`\n\nconsole.log(msg.topic);\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 360,
        "wires": [
            [
                "9272c6e9fcb9ac1f"
            ]
        ]
    },
    {
        "id": "9272c6e9fcb9ac1f",
        "type": "mysql",
        "z": "28a1f791cc37d4af",
        "mydb": "ea4292e54e9739dd",
        "name": "Database",
        "x": 660,
        "y": 360,
        "wires": [
            [
                "3e60949afaf52918"
            ]
        ]
    },
    {
        "id": "3e60949afaf52918",
        "type": "function",
        "z": "28a1f791cc37d4af",
        "name": "WorkingOnDataReceiveFromDB",
        "func": "\nvar _aiHistory = [];\nvar data = msg.payload;\n\nfor (let i = 0; i < data.length; i++){\n\nfunction convertDateTime(dateTimeString) {\n  // Create a Date object from the input string (assuming UTC timezone)\n  const dateObj = new Date(dateTimeString);\n\n  // Get year, month, day, hours, minutes, and seconds\n  const year = dateObj.getFullYear();\n  const month = String(dateObj.getMonth() + 1).padStart(2, '0'); // Add leading zero for single-digit months\n  const day = String(dateObj.getDate()).padStart(2, '0');\n  const hours = String(dateObj.getHours()).padStart(2, '0');\n  const minutes = String(dateObj.getMinutes()).padStart(2, '0');\n  const seconds = String(dateObj.getSeconds()).padStart(2, '0');\n\n  // Format the date and time in the desired format\n  return `${day}-${month}-${year} ${hours}:${minutes}:${seconds}`;\n}\n\n// Sample input string\n  const dateTimeString = data[i].TIMESTAMP;\n\n// Convert the date and time\nconst formattedDateTime = convertDateTime(dateTimeString);\n\n    let _aiPacket = {\n      TIMESTAMP     : formattedDateTime,\n        COMM        : data[i].RAWPACKETS.COMM,\n        DEVICEID    : data[i].RAWPACKETS.DEVID,\n        AI01        : data[i].RAWPACKETS.AI01,\n        AI02        : data[i].RAWPACKETS.AI02,\n        AI03        : data[i].RAWPACKETS.AI03,\n        AI04        : data[i].RAWPACKETS.AI04,\n        AI05        : data[i].RAWPACKETS.AI05,\n        AI06        : data[i].RAWPACKETS.AI06,\n        AI07        : data[i].RAWPACKETS.AI07,\n        AI08        : data[i].RAWPACKETS.AI08\n    }\n\n    _aiHistory.push(_aiPacket);\n}\n\nmsg.payload = _aiHistory;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 360,
        "wires": [
            [
                "c40b29475836fe86",
                "ca3c97725f2ac953"
            ]
        ]
    },
    {
        "id": "ca3c97725f2ac953",
        "type": "excel",
        "z": "28a1f791cc37d4af",
        "name": "Excel file",
        "file": "d:\\VaibhavWorkSpace\\New Microsoft Excel Worksheet.xlsx",
        "x": 1180,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "c5210555f0c56796",
        "type": "ui_table",
        "z": "28a1f791cc37d4af",
        "group": "e5356d149c2603da",
        "name": "",
        "order": 10,
        "width": 30,
        "height": 10,
        "columns": [],
        "outputs": 0,
        "cts": false,
        "x": 1430,
        "y": 460,
        "wires": []
    },
    {
        "id": "c40b29475836fe86",
        "type": "ui_template",
        "z": "28a1f791cc37d4af",
        "group": "e5356d149c2603da",
        "name": "",
        "order": 4,
        "width": 3,
        "height": 1,
        "format": "<style>\n   .tabulator-col-content{\n    background-color: green !important;\n    padding: 10px;\n   }\n    </style>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1200,
        "y": 460,
        "wires": [
            [
                "c5210555f0c56796"
            ]
        ]
    },
    {
        "id": "8fee521ae997a3f0",
        "type": "ui_button",
        "z": "28a1f791cc37d4af",
        "g": "3c594854df33e109",
        "name": "Home Button",
        "group": "e5356d149c2603da",
        "order": 6,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-home fa-3x",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 550,
        "y": 80,
        "wires": [
            [
                "7270a12ffdbaebda"
            ]
        ],
        "info": "<button id=\"btn\">\r\n<button>\r\n<style>\r\n.btn{\r\n    font-size:50px;\r\n}\r\n</style>\r\n"
    },
    {
        "id": "7270a12ffdbaebda",
        "type": "change",
        "z": "28a1f791cc37d4af",
        "g": "3c594854df33e109",
        "name": "link tabs change node",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"tab\":\"Dashboard\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 80,
        "wires": [
            [
                "22e20e1ab129d3b3"
            ]
        ]
    },
    {
        "id": "22e20e1ab129d3b3",
        "type": "ui_ui_control",
        "z": "28a1f791cc37d4af",
        "g": "3c594854df33e109",
        "name": "",
        "events": "all",
        "x": 1040,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "d1a53b9b1c61ea9f",
        "type": "ui_form",
        "z": "8ef2b9c6e0a1e471",
        "name": "",
        "label": "Start date",
        "group": "a63dce05bd491489",
        "order": 6,
        "width": 10,
        "height": 1,
        "options": [
            {
                "label": "Start Date",
                "value": "StartDate",
                "type": "date",
                "required": true,
                "rows": null
            },
            {
                "label": "End Date",
                "value": "EndDate",
                "type": "date",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "StartDate": "",
            "EndDate": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 220,
        "y": 320,
        "wires": [
            [
                "4133d89a8324da5e"
            ]
        ]
    },
    {
        "id": "4133d89a8324da5e",
        "type": "function",
        "z": "8ef2b9c6e0a1e471",
        "name": "AccessingDataFromDB",
        "func": "var startdate = msg.payload.StartDate;\nvar enddate = msg.payload.EndDate\n\nfunction extractDate(dateString) {\n    // Parse the input date string with timezone information\n    const inputDate = new Date(dateString);\n\n    // Extract the date part without time\n    const outputDate = inputDate.toISOString().slice(0, 10);\n\n    return outputDate;\n}\n\n\n// Define two input date strings\nconst inputDateStr1 = startdate ;\nconst inputDateStr2 = enddate;\n\n\n// Extract and print the date parts\nvar outputDate1 = extractDate(inputDateStr1);\nvar outputDate2 = extractDate(inputDateStr2);\n\n\nconsole.log(outputDate1); // Output: 2024-04-28\nconsole.log(outputDate2); // Output: 2023-10-26\n\n\n// msg.topic = `select RAWPACKETS from iotgatewaydata where TIMESTAMP between \"${outputDate1 + ' 00:00:00'}\"  and  \"${outputDate2 +' 23:59:59'}\";`\nmsg.topic = `select TIMESTAMP,  RAWPACKETS from iotgatewaydata where IOTYPE = 'DI';`\n\n\nconsole.log(msg.topic);\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 320,
        "wires": [
            [
                "c3aac0976604f74f"
            ]
        ]
    },
    {
        "id": "c3aac0976604f74f",
        "type": "mysql",
        "z": "8ef2b9c6e0a1e471",
        "mydb": "ea4292e54e9739dd",
        "name": "Database",
        "x": 740,
        "y": 320,
        "wires": [
            [
                "8a28085f66699537"
            ]
        ]
    },
    {
        "id": "8a28085f66699537",
        "type": "function",
        "z": "8ef2b9c6e0a1e471",
        "name": "WorkingOnDataReceiveFromDB",
        "func": "// // var data = msg.payload[1].RAWPACKETS;\n// // msg.payload = data;\n// // console.log(msg);\n// // console.log(msg.payload);\n// // return msg; \n\n// const realTimeData = msg.payload;\n// for (const dataPoint of realTimeData){\n//     const location = dataPoint.LOC;\n//     const serial = dataPoint.SNO;\n//     console.log( \"Location\" : location, \"Serial No\" : serial)\n// }\n\n// var data = msg.payload;\n// data = JSON.parse(data);\n// msg.payload = data;\n// console.log(data.LOC);\n// const dataArray = [msg.payload];\n// const parsedDataArray = [];\n// for (const dataString of dataArray){\n//   const parsedData = JSON.parse(dataString);\n//   parsedDataArray.push(parsedData);\n// }\n\n// msg.payload = parsedDataArray;\n// var data = msg.payload[0].RAWPACKETS.LOC;\n// console.log(data);\n// msg.payload = ;\n// console.log(msg.payload[0].RAWPACKETS.AI08);\n\nvar _aiHistory = [];\n\nvar data = msg.payload;\nconsole.log(data);\n\nfor (let i = 0; i < data.length; i++){\n\nfunction convertDateTime(dateTimeString) {\n  // Create a Date object from the input string (assuming UTC timezone)\n  const dateObj = new Date(dateTimeString);\n\n  // Get year, month, day, hours, minutes, and seconds\n  const year = dateObj.getFullYear();\n  const month = String(dateObj.getMonth() + 1).padStart(2, '0'); // Add leading zero for single-digit months\n  const day = String(dateObj.getDate()).padStart(2, '0');\n  const hours = String(dateObj.getHours()).padStart(2, '0');\n  const minutes = String(dateObj.getMinutes()).padStart(2, '0');\n  const seconds = String(dateObj.getSeconds()).padStart(2, '0');\n\n  // Format the date and time in the desired format\n  return `${day}-${month}-${year} ${hours}:${minutes}:${seconds}`;\n}\n\n// Sample input string\n  const dateTimeString = data[i].TIMESTAMP;\n\n// Convert the date and time\nconst formattedDateTime = convertDateTime(dateTimeString);\n\n\n    let _aiPacket = {\n      TIMESTAMP     : formattedDateTime,\n        COMM        : data[i].RAWPACKETS.COMM,\n        DEVICEID    : data[i].RAWPACKETS.DEVID,\n        DI01        : data[i].RAWPACKETS.DI01,\n        DI02        : data[i].RAWPACKETS.DI02,\n        DI03        : data[i].RAWPACKETS.DI03,\n        DI04        : data[i].RAWPACKETS.DI04,\n        DI05        : data[i].RAWPACKETS.DI05,\n        DI06        : data[i].RAWPACKETS.DI06,\n        DI07        : data[i].RAWPACKETS.DI07,\n        DI08        : data[i].RAWPACKETS.DI08,\n        DI09        : data[i].RAWPACKETS.DI09,\n        DI10        : data[i].RAWPACKETS.DI10,\n        DI11        : data[i].RAWPACKETS.DI11,\n        DI12        : data[i].RAWPACKETS.DI12,\n       \n    }\n\n    _aiHistory.push(_aiPacket);\n}\n\nmsg.payload = _aiHistory;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 320,
        "wires": [
            [
                "0f7ac1a07eb7b3b1",
                "e7d0552442e57199"
            ]
        ]
    },
    {
        "id": "e7d0552442e57199",
        "type": "excel",
        "z": "8ef2b9c6e0a1e471",
        "name": "Excel file",
        "file": "d:\\VaibhavWorkSpace\\datafrommysql.xlsx",
        "x": 1460,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "8ee6625e81c78422",
        "type": "ui_table",
        "z": "8ef2b9c6e0a1e471",
        "group": "a63dce05bd491489",
        "name": "",
        "order": 10,
        "width": 30,
        "height": 10,
        "columns": [],
        "outputs": 0,
        "cts": false,
        "x": 1450,
        "y": 360,
        "wires": []
    },
    {
        "id": "0f7ac1a07eb7b3b1",
        "type": "ui_template",
        "z": "8ef2b9c6e0a1e471",
        "group": "a63dce05bd491489",
        "name": "",
        "order": 4,
        "width": 3,
        "height": 1,
        "format": "<style>\n   .tabulator-col-content{\n    background-color: green !important;\n    padding: 10px;\n   }\n    </style>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1280,
        "y": 360,
        "wires": [
            [
                "8ee6625e81c78422"
            ]
        ]
    },
    {
        "id": "5cc7a6606a59ef55",
        "type": "ui_button",
        "z": "8ef2b9c6e0a1e471",
        "name": "Home Button",
        "group": "a63dce05bd491489",
        "order": 2,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-home fa-3x",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 850,
        "y": 200,
        "wires": [
            [
                "f96745e2cb7a5f42"
            ]
        ],
        "info": "<button id=\"btn\">\r\n<button>\r\n<style>\r\n.btn{\r\n    font-size:50px;\r\n}\r\n</style>\r\n"
    },
    {
        "id": "f96745e2cb7a5f42",
        "type": "change",
        "z": "8ef2b9c6e0a1e471",
        "name": "link tabs change node",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"tab\":\"Dashboard\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1120,
        "y": 200,
        "wires": [
            [
                "22f7a0a4285e00c3"
            ]
        ]
    },
    {
        "id": "22f7a0a4285e00c3",
        "type": "ui_ui_control",
        "z": "8ef2b9c6e0a1e471",
        "name": "",
        "events": "all",
        "x": 1340,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "0aaf99d951c029b2",
        "type": "ui_form",
        "z": "f08276ee447f37b8",
        "name": "",
        "label": "Start date",
        "group": "edb81bbef5b2de26",
        "order": 6,
        "width": 10,
        "height": 1,
        "options": [
            {
                "label": "Start Date",
                "value": "StartDate",
                "type": "date",
                "required": true,
                "rows": null
            },
            {
                "label": "End Date",
                "value": "EndDate",
                "type": "date",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "StartDate": "",
            "EndDate": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 260,
        "y": 360,
        "wires": [
            [
                "6d20673dd351214a"
            ]
        ]
    },
    {
        "id": "6d20673dd351214a",
        "type": "function",
        "z": "f08276ee447f37b8",
        "name": "AccessingDataFromDB",
        "func": "var startdate = msg.payload.StartDate;\nvar enddate = msg.payload.EndDate\n\nfunction extractDate(dateString) {\n    // Parse the input date string with timezone information\n    const inputDate = new Date(dateString);\n\n    // Extract the date part without time\n    const outputDate = inputDate.toISOString().slice(0, 10);\n\n    return outputDate;\n}\n\n\n// Define two input date strings\nconst inputDateStr1 = startdate ;\nconst inputDateStr2 = enddate;\n\n\n// Extract and print the date parts\nvar outputDate1 = extractDate(inputDateStr1);\nvar outputDate2 = extractDate(inputDateStr2);\n\n\nconsole.log(outputDate1); // Output: 2024-04-28\nconsole.log(outputDate2); // Output: 2023-10-26\n\n\n// msg.topic = `select RAWPACKETS from iotgatewaydata where TIMESTAMP between \"${outputDate1 + ' 00:00:00'}\"  and  \"${outputDate2 +' 23:59:59'}\";`\nmsg.topic = `select TIMESTAMP,  RAWPACKETS from iotgatewaydata where IOTYPE = 'DO';`\n\n\nconsole.log(msg.topic);\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 360,
        "wires": [
            [
                "edf97005d16cf013"
            ]
        ]
    },
    {
        "id": "edf97005d16cf013",
        "type": "mysql",
        "z": "f08276ee447f37b8",
        "mydb": "ea4292e54e9739dd",
        "name": "Database",
        "x": 780,
        "y": 360,
        "wires": [
            [
                "86e28ff85155d35f"
            ]
        ]
    },
    {
        "id": "86e28ff85155d35f",
        "type": "function",
        "z": "f08276ee447f37b8",
        "name": "WorkingOnDataReceiveFromDB",
        "func": "// // var data = msg.payload[1].RAWPACKETS;\n// // msg.payload = data;\n// // console.log(msg);\n// // console.log(msg.payload);\n// // return msg; \n\n// const realTimeData = msg.payload;\n// for (const dataPoint of realTimeData){\n//     const location = dataPoint.LOC;\n//     const serial = dataPoint.SNO;\n//     console.log( \"Location\" : location, \"Serial No\" : serial)\n// }\n\n// var data = msg.payload;\n// data = JSON.parse(data);\n// msg.payload = data;\n// console.log(data.LOC);\n// const dataArray = [msg.payload];\n// const parsedDataArray = [];\n// for (const dataString of dataArray){\n//   const parsedData = JSON.parse(dataString);\n//   parsedDataArray.push(parsedData);\n// }\n\n// msg.payload = parsedDataArray;\n// var data = msg.payload[0].RAWPACKETS.LOC;\n// console.log(data);\n// msg.payload = ;\n// console.log(msg.payload[0].RAWPACKETS.AI08);\n\nvar _aiHistory = [];\n\nvar data = msg.payload;\nconsole.log(data);\n\nfor (let i = 0; i < data.length; i++){\n\nfunction convertDateTime(dateTimeString) {\n  // Create a Date object from the input string (assuming UTC timezone)\n  const dateObj = new Date(dateTimeString);\n\n  // Get year, month, day, hours, minutes, and seconds\n  const year = dateObj.getFullYear();\n  const month = String(dateObj.getMonth() + 1).padStart(2, '0'); // Add leading zero for single-digit months\n  const day = String(dateObj.getDate()).padStart(2, '0');\n  const hours = String(dateObj.getHours()).padStart(2, '0');\n  const minutes = String(dateObj.getMinutes()).padStart(2, '0');\n  const seconds = String(dateObj.getSeconds()).padStart(2, '0');\n\n  // Format the date and time in the desired format\n  return `${day}-${month}-${year} ${hours}:${minutes}:${seconds}`;\n}\n\n// Sample input string\n  const dateTimeString = data[i].TIMESTAMP;\n\n// Convert the date and time\nconst formattedDateTime = convertDateTime(dateTimeString);\n\n\n    let _aiPacket = {\n      TIMESTAMP     : formattedDateTime,\n        COMM        : data[i].RAWPACKETS.COMM,\n        DEVICEID    : data[i].RAWPACKETS.DEVID,\n        DO01        : data[i].RAWPACKETS.DO01,\n        DO02        : data[i].RAWPACKETS.DO02,\n        DO03        : data[i].RAWPACKETS.DO03,\n        DO04        : data[i].RAWPACKETS.DO04,\n        DO05        : data[i].RAWPACKETS.DO05,\n        DO06        : data[i].RAWPACKETS.DO06,\n        DO07        : data[i].RAWPACKETS.DO07,\n        DO08        : data[i].RAWPACKETS.DO08,\n        DO09        : data[i].RAWPACKETS.DO09,\n        DO10        : data[i].RAWPACKETS.DO10,\n        DO11        : data[i].RAWPACKETS.DO11,\n        DO12        : data[i].RAWPACKETS.DO12,\n       \n    }\n\n    _aiHistory.push(_aiPacket);\n}\n\nmsg.payload = _aiHistory;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 360,
        "wires": [
            [
                "b9ad55ba531b331b",
                "6c3971c5a42c18ef"
            ]
        ]
    },
    {
        "id": "6c3971c5a42c18ef",
        "type": "excel",
        "z": "f08276ee447f37b8",
        "name": "Excel file",
        "file": "d:\\VaibhavWorkSpace\\New Microsoft Excel Worksheet.xlsx",
        "x": 1500,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "ad472b2a14dee44a",
        "type": "ui_table",
        "z": "f08276ee447f37b8",
        "group": "edb81bbef5b2de26",
        "name": "",
        "order": 10,
        "width": 30,
        "height": 9,
        "columns": [],
        "outputs": 0,
        "cts": false,
        "x": 1510,
        "y": 420,
        "wires": []
    },
    {
        "id": "b9ad55ba531b331b",
        "type": "ui_template",
        "z": "f08276ee447f37b8",
        "group": "edb81bbef5b2de26",
        "name": "",
        "order": 2,
        "width": 3,
        "height": 1,
        "format": "<style>\n   .tabulator-col-content{\n    background-color: green !important;\n    padding: 10px;\n   }\n    </style>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1280,
        "y": 420,
        "wires": [
            [
                "ad472b2a14dee44a"
            ]
        ]
    },
    {
        "id": "9d9c6ee877ffc032",
        "type": "ui_button",
        "z": "f08276ee447f37b8",
        "name": "Home Button",
        "group": "edb81bbef5b2de26",
        "order": 4,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-home fa-3x",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 950,
        "y": 180,
        "wires": [
            [
                "cac05f7206ca628b"
            ]
        ],
        "info": "<button id=\"btn\">\r\n<button>\r\n<style>\r\n.btn{\r\n    font-size:50px;\r\n}\r\n</style>\r\n"
    },
    {
        "id": "cac05f7206ca628b",
        "type": "change",
        "z": "f08276ee447f37b8",
        "name": "link tabs change node",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"tab\":\"Dashboard\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1220,
        "y": 180,
        "wires": [
            [
                "c518fbdc9f8ec59a"
            ]
        ]
    },
    {
        "id": "c518fbdc9f8ec59a",
        "type": "ui_ui_control",
        "z": "f08276ee447f37b8",
        "name": "",
        "events": "all",
        "x": 1440,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "f077696e8bd7caef",
        "type": "ui_form",
        "z": "6f1510e0d3f3fb6d",
        "name": "",
        "label": "Start date",
        "group": "41333f3402391294",
        "order": 8,
        "width": 10,
        "height": 1,
        "options": [
            {
                "label": "Start Date",
                "value": "StartDate",
                "type": "date",
                "required": true,
                "rows": null
            },
            {
                "label": "End Date",
                "value": "EndDate",
                "type": "date",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "StartDate": "",
            "EndDate": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 240,
        "y": 420,
        "wires": [
            [
                "2f2aa607fe5094f6"
            ]
        ]
    },
    {
        "id": "2f2aa607fe5094f6",
        "type": "function",
        "z": "6f1510e0d3f3fb6d",
        "name": "Accessing Data From DB",
        "func": "var startdate = msg.payload.StartDate;\nvar enddate = msg.payload.EndDate\n\nfunction extractDate(dateString) {\n    // Parse the input date string with timezone information\n    const inputDate = new Date(dateString);\n\n    // Extract the date part without time\n    const outputDate = inputDate.toISOString().slice(0, 10);\n\n    return outputDate;\n}\n\n\n// Define two input date strings\nconst inputDateStr1 = startdate ;\nconst inputDateStr2 = enddate;\n\n\n// Extract and print the date parts\nvar outputDate1 = extractDate(inputDateStr1);\nvar outputDate2 = extractDate(inputDateStr2);\n\n\nconsole.log(outputDate1); // Output: 2024-04-28\nconsole.log(outputDate2); // Output: 2023-10-26\n\n\n// msg.topic = `select RAWPACKETS from iotgatewaydata where TIMESTAMP between \"${outputDate1 + ' 00:00:00'}\"  and  \"${outputDate2 +' 23:59:59'}\";`\nmsg.topic = `select TIMESTAMP,  RAWPACKETS from iotgatewaydata where IOTYPE = 'E';`\n\n\nconsole.log(msg.topic);\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 420,
        "wires": [
            [
                "913c3078927b8a9f"
            ]
        ]
    },
    {
        "id": "913c3078927b8a9f",
        "type": "mysql",
        "z": "6f1510e0d3f3fb6d",
        "mydb": "ea4292e54e9739dd",
        "name": "Database",
        "x": 820,
        "y": 420,
        "wires": [
            [
                "91538e9f9166a6c2"
            ]
        ]
    },
    {
        "id": "91538e9f9166a6c2",
        "type": "function",
        "z": "6f1510e0d3f3fb6d",
        "name": "WorkingOnDataReceiveFromDB",
        "func": "\nvar _aiHistory = [];\n\nvar data = msg.payload;\nconsole.log(data);\n\nfor (let i = 0; i < data.length; i++){\n\nfunction convertDateTime(dateTimeString) {\n  // Create a Date object from the input string (assuming UTC timezone)\n  const dateObj = new Date(dateTimeString);\n\n  // Get year, month, day, hours, minutes, and seconds\n  const year = dateObj.getFullYear();\n  const month = String(dateObj.getMonth() + 1).padStart(2, '0'); // Add leading zero for single-digit months\n  const day = String(dateObj.getDate()).padStart(2, '0');\n  const hours = String(dateObj.getHours()).padStart(2, '0');\n  const minutes = String(dateObj.getMinutes()).padStart(2, '0');\n  const seconds = String(dateObj.getSeconds()).padStart(2, '0');\n\n  // Format the date and time in the desired format\n  return `${day}-${month}-${year} ${hours}:${minutes}:${seconds}`;\n}\n\n// Sample input string\n  const dateTimeString = data[i].TIMESTAMP;\n\n// Convert the date and time\nconst formattedDateTime = convertDateTime(dateTimeString);\n\n    let _aiPacket = {\n      TIMESTAMP     : formattedDateTime,\n        COMM        : data[i].RAWPACKETS.COMM,\n        DEVICEID    : data[i].RAWPACKETS.DEVID,\n         WH          : data[i].RAWPACKETS.WH,\n        FREQ        : data[i].RAWPACKETS.FREQ,\n        PF          : data[i].RAWPACKETS.PF,\n        RV          : data[i].RAWPACKETS.RV,\n        YV          : data[i].RAWPACKETS.YV,\n        BV          : data[i].RAWPACKETS.BV,\n        VLN         : data[i].RAWPACKETS.VLN,\n        RA          : data[i].RAWPACKETS.RA,\n        BA          : data[i].RAWPACKETS.BA,\n        TA          : data[i].RAWPACKETS.TA,\n        YA          : data[i].RAWPACKETS.YA   \n    }\n    _aiHistory.push(_aiPacket);\n}\n\nmsg.payload = _aiHistory;\n\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1110,
        "y": 420,
        "wires": [
            [
                "e583b422a9adc04a",
                "94bd4ce54fd4f9e5",
                "2125fd2dd966a313"
            ]
        ]
    },
    {
        "id": "94bd4ce54fd4f9e5",
        "type": "excel",
        "z": "6f1510e0d3f3fb6d",
        "name": "Excel file",
        "file": "d:\\VaibhavWorkSpace\\New Microsoft Excel Worksheet.xlsx",
        "x": 1540,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "3e059574f46204a9",
        "type": "ui_table",
        "z": "6f1510e0d3f3fb6d",
        "group": "41333f3402391294",
        "name": "",
        "order": 10,
        "width": 30,
        "height": 9,
        "columns": [],
        "outputs": 0,
        "cts": false,
        "x": 1570,
        "y": 480,
        "wires": []
    },
    {
        "id": "e583b422a9adc04a",
        "type": "ui_template",
        "z": "6f1510e0d3f3fb6d",
        "group": "41333f3402391294",
        "name": "",
        "order": 2,
        "width": 3,
        "height": 1,
        "format": "<style>\n   .tabulator-col-content{\n    background-color: green !important;\n    padding: 10px;\n   }\n    </style>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1380,
        "y": 480,
        "wires": [
            [
                "3e059574f46204a9"
            ]
        ]
    },
    {
        "id": "556a70a5291c5974",
        "type": "ui_button",
        "z": "6f1510e0d3f3fb6d",
        "name": "HomeButton",
        "group": "41333f3402391294",
        "order": 6,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-home fa-3x",
        "payload": "MainDashboard",
        "payloadType": "flow",
        "topic": "topic",
        "topicType": "msg",
        "x": 890,
        "y": 280,
        "wires": [
            [
                "20bbb5bb27678476"
            ]
        ],
        "info": "<button id=\"btn\">\r\n<button>\r\n<style>\r\n.btn{\r\n    font-size:50px;\r\n}\r\n</style>\r\n"
    },
    {
        "id": "20bbb5bb27678476",
        "type": "change",
        "z": "6f1510e0d3f3fb6d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"tab\":\"Dashboard\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1220,
        "y": 280,
        "wires": [
            [
                "ca2b1d50029e1afe"
            ]
        ]
    },
    {
        "id": "ca2b1d50029e1afe",
        "type": "ui_ui_control",
        "z": "6f1510e0d3f3fb6d",
        "name": "",
        "events": "all",
        "x": 1520,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "2125fd2dd966a313",
        "type": "debug",
        "z": "6f1510e0d3f3fb6d",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1190,
        "y": 540,
        "wires": []
    },
    {
        "id": "6a55dad7c6c13ad1",
        "type": "function",
        "z": "aac47978af025130",
        "name": "AccessingDataFromDB",
        "func": "var startdate = msg.payload.StartDate;\n\nvar enddate = msg.payload.EndDate;\n\nvar value = msg.payload.Option;\n\n\nfunction extractDate(dateString) {\n    // Parse the input date string with timezone information\n    const inputDate = new Date(dateString);\n    // Extract the date part without time\n    const outputDate = inputDate.toISOString().slice(0, 10);\n    return outputDate;\n    \n}\n\n// Define two input date strings\nconst inputDateStr1 = startdate ;\nconst inputDateStr2 = enddate;\n\n// Extract and print the date parts\nvar outputDate1 = extractDate(inputDateStr1);\nvar outputDate2 = extractDate(inputDateStr2);\n\n\nmsg.topic = `select TIMESTAMP, RAWPACKETS from iotdevicedata where TIMESTAMP between \"${outputDate1 + ' 00:00:00'}\"  and  \"${outputDate2 +' 23:59:59'}\" AND IOTYPE = 'E';`\n// msg.topic = `select  RAWPACKETS from iotdevicedata where IOTYPE = 'E';`\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 300,
        "wires": [
            [
                "b61deecab1699227"
            ]
        ]
    },
    {
        "id": "b61deecab1699227",
        "type": "mysql",
        "z": "aac47978af025130",
        "mydb": "ea4292e54e9739dd",
        "name": "Database",
        "x": 840,
        "y": 300,
        "wires": [
            [
                "5f4df9348a192b08"
            ]
        ]
    },
    {
        "id": "5f4df9348a192b08",
        "type": "function",
        "z": "aac47978af025130",
        "name": "WorkingOnDataReceiveFromDB",
        "func": "\nvar data = msg.payload;\n\n  var _aiHistory = [];\n\nfor (let i = 0; i < data.length; i++){\n\n    let _aiPacket = {\n        x      : data[i].TIMESTAMP,  \n        y      : data[i].RAWPACKETS.Wh\n    }\n\n  function convertDateTimeToMillisec(dateTimeString) {\n    // Parse the date and time string\n    const dateObject = new Date(dateTimeString);\n\n    // Get the milliseconds since epoch\n    const milliseconds = dateObject.getTime();\n\n    return milliseconds;\n  }\n\n  // Example usage\n  const dateTimeString = _aiPacket.x;\n  const milliseconds = convertDateTimeToMillisec(dateTimeString);\n  \n  _aiPacket.x = milliseconds;\n\n    _aiHistory.push(_aiPacket);\n}\n\nvar series = {\n  \"series\" : [\"A\"]\n}\n\n\nvar label = {\n  \"labels\" : [\"\"]\n}\n\n\n\nvar newarr = [];\nnewarr.push(series, _aiHistory, label);\n\nmsg.payload = [{\n    \"series\": [\"A\"],\n    \"data\": [\n\n        _aiHistory\n    ],\n    \"labels\": [\"\"]\n}]\n\n//msg.payload = newarr;\nconsole.log(msg.payload);\nreturn msg;\n\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1130,
        "y": 300,
        "wires": [
            [
                "965af32611774750",
                "e7761b3c4297cb74",
                "a8cb770113500bce"
            ]
        ]
    },
    {
        "id": "e7761b3c4297cb74",
        "type": "excel",
        "z": "aac47978af025130",
        "name": "Excel file",
        "file": "d:\\VaibhavWorkSpace\\datafrommysql.xlsx",
        "x": 1420,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "84963c4fb2d52c65",
        "type": "ui_table",
        "z": "aac47978af025130",
        "group": "5ebffeb5127455f3",
        "name": "",
        "order": 7,
        "width": 29,
        "height": 10,
        "columns": [],
        "outputs": 0,
        "cts": false,
        "x": 1610,
        "y": 300,
        "wires": []
    },
    {
        "id": "965af32611774750",
        "type": "ui_template",
        "z": "aac47978af025130",
        "group": "511b53e5bae63045",
        "name": "",
        "order": 3,
        "width": 3,
        "height": 1,
        "format": "<style>\n   .tabulator-col-content{\n    background-color: green !important;\n    padding: 10px;\n   }\n    </style>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1400,
        "y": 300,
        "wires": [
            [
                "84963c4fb2d52c65"
            ]
        ]
    },
    {
        "id": "b2eee3e34e16cd6d",
        "type": "function",
        "z": "aac47978af025130",
        "name": "function 47",
        "func": "var len = msg.payload.length;\nvar data = msg.payload;\nvar type = msg.type;\n\nfor(var i = 0; i<=len ; i++){\n    msg.payload = data[i].WH;\n  \n    return msg;\n}\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "6bc3c975fbf69d30",
        "type": "db2chart",
        "z": "aac47978af025130",
        "name": "",
        "firstcol": true,
        "x": 1180,
        "y": 440,
        "wires": [
            [
                "094cc464e81a3196"
            ]
        ]
    },
    {
        "id": "a8cb770113500bce",
        "type": "ui_chart",
        "z": "aac47978af025130",
        "name": "",
        "group": "511b53e5bae63045",
        "order": 28,
        "width": 0,
        "height": 0,
        "label": "chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "auto",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1610,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "094cc464e81a3196",
        "type": "debug",
        "z": "aac47978af025130",
        "name": "debug 3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1420,
        "y": 440,
        "wires": []
    },
    {
        "id": "bb635e89debb3c3b",
        "type": "function",
        "z": "aac47978af025130",
        "name": "function 50",
        "func": "\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 300,
        "wires": [
            [
                "6a55dad7c6c13ad1"
            ]
        ]
    },
    {
        "id": "8786f2d527e3398c",
        "type": "ui_template",
        "z": "aac47978af025130",
        "group": "511b53e5bae63045",
        "name": "",
        "order": 28,
        "width": 0,
        "height": 0,
        "format": "\n\n<script>    \n    this.scope.collectDataFromInput = function (){\n        var obj = {};\n        obj.StartDate = document.getElementById(\"statrtdt\").value;\n        obj.EndDate = document.getElementById(\"enddt\").value;\n        obj.Option = document.getElementById(\"select\").value;\n        return obj;\n        //console.log(obj);\n        // var msg = {};\n        // msg.payload = obj;\n        //console.log(msg);\n        // return msg;\n    }\n</script> \n\n<form>\n    <lablel> Choose Start Date </label>\n        <input type=\"date\" id=\"statrtdt\" >\n        <br>\n\n        <label> Choose End Date </label>\n        <input type=\"date\" id=\"enddt\">\n\n        <br>\n        <select id=\"select\">\n        <option> Wh</option>\n        <option> PF</option>\n        <option> Freq</option>\n    </select>\n        <button ng-click=\"send({payload:collectDataFromInput()})\"> Submit</button>\n        <!-- <md-button ng-click=\"send({payload:collectDataFromInput()})\">\n            Click me to send a hello world\n        </md-button> -->\n</form>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 120,
        "y": 300,
        "wires": [
            [
                "bb635e89debb3c3b"
            ]
        ]
    },
    {
        "id": "80e12a216487b44f",
        "type": "function",
        "z": "0cbe8ea7e32aba1c",
        "g": "f4ac132e5fb73ead",
        "name": "Accessing Data From DB",
        "func": "var startdate = msg.payload.StartDate;\n\nvar enddate = msg.payload.EndDate;\n\n\nfunction extractDate(dateString) {\n    // Parse the input date string with timezone information\n    var inputDate = new Date(dateString);\n    // Extract the date part without time\n    var outputDate = inputDate.toISOString().slice(0, 10);\n    return outputDate; \n}\n\n// Define two input date strings\nvar inputDateStr1 = startdate;\nvar inputDateStr2 = enddate;\n\n\n// Extract and print the date parts\nvar outputDate1 = extractDate(inputDateStr1);\nvar outputDate2 = extractDate(inputDateStr2);\n\n\nmsg.topic = `select TIMESTAMP, RAWPACKETS from iotdevicedata where TIMESTAMP between \"${outputDate1 + 'T00:00:00'}\"  and  \"${outputDate2 +'T23:59:59'}\" AND IOTYPE = 'AI';`\nconsole.log(`AI01: select TIMESTAMP, RAWPACKETS from iotdevicedata where TIMESTAMP between \"${outputDate1 + 'T00:00:00'}\"  and  \"${outputDate2 +'T23:59:59'}\" AND IOTYPE = 'AI';`);\n// msg.topic = `select  RAWPACKETS from iotdevicedata where IOTYPE = 'E';`\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 240,
        "wires": [
            [
                "55aab8a78a99e0b1"
            ]
        ]
    },
    {
        "id": "55aab8a78a99e0b1",
        "type": "mysql",
        "z": "0cbe8ea7e32aba1c",
        "g": "f4ac132e5fb73ead",
        "mydb": "ea4292e54e9739dd",
        "name": "Database",
        "x": 800,
        "y": 240,
        "wires": [
            [
                "67e08e7d9ad5392a"
            ]
        ]
    },
    {
        "id": "67e08e7d9ad5392a",
        "type": "function",
        "z": "0cbe8ea7e32aba1c",
        "g": "f4ac132e5fb73ead",
        "name": "Working On Data Receive From DB",
        "func": "\nvar data = msg.payload;\nif(data[0]){\n\nvar _ai01History = [];\nfor (let i = 0; i < data.length; i++){\n\n    let _aiPacket = {\n        x      : data[i].TIMESTAMP,  \n        y      : data[i].RAWPACKETS.AI01\n    }\n\n  function convertDateTimeToMillisec(dateTimeString) {\n    // Parse the date and time string\n    const dateObject = new Date(dateTimeString);\n\n    // Get the milliseconds since epoch\n    const milliseconds = dateObject.getTime();\n\n    return milliseconds;\n  }\n\n  // Example usage\n  const dateTimeString = _aiPacket.x;\n  const milliseconds = convertDateTimeToMillisec(dateTimeString);\n  \n  _aiPacket.x = milliseconds;\n\n    _ai01History.push(_aiPacket);\n}\n\nmsg.payload = [{\n    \"series\": [\"A\"],\n    \"data\": [\n        _ai01History\n    ],\n    \"labels\": [\"\"]\n}]\n\nreturn msg;\n}\nelse{\n  msg.payload = 1;\n  return msg;\n}\n\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1120,
        "y": 240,
        "wires": [
            [
                "8bb53c4e8431f0d8",
                "1ab6ca7fec248ecf"
            ]
        ]
    },
    {
        "id": "5875da8baa8e9f7a",
        "type": "ui_template",
        "z": "0cbe8ea7e32aba1c",
        "g": "f4ac132e5fb73ead",
        "group": "d48e625dd15b16ab",
        "name": "AI01 Template",
        "order": 5,
        "width": 10,
        "height": 6,
        "format": "\n\n<script>    \n    this.scope.collectDataFromInput = function (){\n        var obj1 = {};\n        obj1.StartDate = document.getElementById(\"statrtdt\").value;\n        obj1.EndDate = document.getElementById(\"enddt\").value;\n        return obj1;\n    }\n\n</script> \n\n<form>\n    <label>Start Date </label>\n        <input type=\"date\" id=\"statrtdt\" class=\"fas fa-calander\">\n        <br>\n        <label>End &nbsp;Date </label>\n        <input type=\"date\" id=\"enddt\">\n        <br>\n        <button ng-click=\"send({payload:collectDataFromInput()})\" id=\"submitBtnAi01\"> Submit</button>\n</form>\n\n<style>\n  /* Form styling */\n  form {\n    display: flex; \n    flex-direction: column; \n    align-items: center; \n    margin: 20px auto; \n    border: 1px solid #ccc; \n    border-radius: 5px; \n    padding: 15px; \n    width: 200px; \n  }\n\n  /* Label styling */\n  label {\n    display: block; /* Display labels on new lines */\n    margin-bottom: 5px; /* Add space between labels and inputs */\n    font-weight: bold; /* Emphasize labels */\n  }\n\n  /* Input styling */\n  input[type=\"date\"] {\n    width: 60%; /* Make inputs fill the available space */\n    padding: 8px; /* Add padding for comfort */\n    border: 1px solid #ccc; /* Consistent border style */\n    border-radius: 3px; /* Rounded corners for inputs */\n  }\n\n  /* Button styling */\n  #submitBtnAi01 {\n    background-color: #4CAF50; /* Green */\n    color: white;\n    padding: 15px 32px;\n    text-align: center;\n    text-decoration: none;\n    display: inline-block;\n    font-size: 16px;\n    margin: 4px 2px;\n    cursor: pointer;\n    border: none;\n  }\n\n  #submitBtnAi01:hover {\n    background-color: #25b87f;\n  }\n\n  /* Adjusting label spacing (optional) */\n  label:nth-child(even) { /* Target every other label (for even spacing) */\n    margin-right: 10px; /* Add some space between label and colon */\n  }\n\n</style>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 120,
        "y": 240,
        "wires": [
            [
                "60f1992b63382ff2"
            ]
        ]
    },
    {
        "id": "fa5444fd418f429b",
        "type": "ui_chart",
        "z": "0cbe8ea7e32aba1c",
        "g": "f4ac132e5fb73ead",
        "name": "",
        "group": "d48e625dd15b16ab",
        "order": 18,
        "width": 10,
        "height": 6,
        "label": "chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "DD-MM-YYYY HH:MM:SS",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1570,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "60f1992b63382ff2",
        "type": "function",
        "z": "0cbe8ea7e32aba1c",
        "g": "f4ac132e5fb73ead",
        "name": "function 51",
        "func": "\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 240,
        "wires": [
            [
                "80e12a216487b44f"
            ]
        ]
    },
    {
        "id": "8bb53c4e8431f0d8",
        "type": "function",
        "z": "0cbe8ea7e32aba1c",
        "g": "f4ac132e5fb73ead",
        "name": "function 52",
        "func": "if (msg.payload == 1){\n    msg.payload = \"Please put valid date format\";\n    msg.topic = '';\n    return msg;\n}else{\n    msg.payload = 'Data fetched Successfully'\n    msg.topic = '';\n    return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1370,
        "y": 340,
        "wires": [
            [
                "bd79a077c65f9e08"
            ]
        ]
    },
    {
        "id": "bd79a077c65f9e08",
        "type": "ui_toast",
        "z": "0cbe8ea7e32aba1c",
        "g": "f4ac132e5fb73ead",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1570,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "1ab6ca7fec248ecf",
        "type": "function",
        "z": "0cbe8ea7e32aba1c",
        "g": "f4ac132e5fb73ead",
        "name": "function 53",
        "func": "if(msg.payload===1){\n   msg.payload=\"\"; \n   return msg;\n}else{\n   return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1410,
        "y": 240,
        "wires": [
            [
                "fa5444fd418f429b"
            ]
        ]
    },
    {
        "id": "fdc8c070ec104c6c",
        "type": "function",
        "z": "0cbe8ea7e32aba1c",
        "name": "Accessing Data From DB",
        "func": "var startdate = msg.payload.StartDate;\n\nvar enddate = msg.payload.EndDate;\n\n\nfunction extractDate(dateString) {\n    // Parse the input date string with timezone information\n    var inputDate = new Date(dateString);\n    // Extract the date part without time\n    var outputDate = inputDate.toISOString().slice(0, 10);\n    return outputDate; \n}\n\n// Define two input date strings\nvar  inputDateStr1 = startdate ;\nvar  inputDateStr2 = enddate;\n\n\n// Extract and print the date parts\nvar outputDate1 = extractDate(inputDateStr1);\nvar outputDate2 = extractDate(inputDateStr2);\n\n\nmsg.topic = `select TIMESTAMP, RAWPACKETS from iotdevicedata where TIMESTAMP between \"${outputDate1 + ' 00:00:00'}\"  and  \"${outputDate2 +' 23:59:59'}\" AND IOTYPE = 'AI';`\n// msg.topic = `select  RAWPACKETS from iotdevicedata where IOTYPE = 'E';`\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 600,
        "wires": [
            [
                "fd8503c00f8cbdc5"
            ]
        ]
    },
    {
        "id": "fd8503c00f8cbdc5",
        "type": "mysql",
        "z": "0cbe8ea7e32aba1c",
        "mydb": "ea4292e54e9739dd",
        "name": "Database",
        "x": 780,
        "y": 600,
        "wires": [
            [
                "4f79afda243accda"
            ]
        ]
    },
    {
        "id": "4f79afda243accda",
        "type": "function",
        "z": "0cbe8ea7e32aba1c",
        "name": "Working On Data Receive From DB",
        "func": "\nvar data = msg.payload;\nif(data[0]){\n\nvar _ai02History = [];\nfor (let i = 0; i < data.length; i++){\n\n    let _aiPacket = {\n        x      : data[i].TIMESTAMP,  \n        y      : data[i].RAWPACKETS.AI02\n    }\n\n  function convertDateTimeToMillisec(dateTimeString) {\n    // Parse the date and time string\n    const dateObject = new Date(dateTimeString);\n\n    // Get the milliseconds since epoch\n    const milliseconds = dateObject.getTime();\n\n    return milliseconds;\n  }\n\n  // Example usage\n  const dateTimeString = _aiPacket.x;\n  const milliseconds = convertDateTimeToMillisec(dateTimeString);\n  \n  _aiPacket.x = milliseconds;\n\n    _ai02History.push(_aiPacket);\n}\n\nmsg.payload = [{\n    \"series\": [\"A\"],\n    \"data\": [\n        _ai02History\n    ],\n    \"labels\": [\"\"]\n}]\n\nreturn msg;\n}\nelse{\n  msg.payload = 1;\n  return msg;\n}\n\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 600,
        "wires": [
            [
                "9a60b34cad177e93",
                "84f18c04010e7e3e"
            ]
        ]
    },
    {
        "id": "e848285fef282b1f",
        "type": "ui_template",
        "z": "0cbe8ea7e32aba1c",
        "group": "826f229308fe7b87",
        "name": "AI02 Template",
        "order": 5,
        "width": 10,
        "height": 6,
        "format": "\n\n<script>    \n    this.scope.collectDataFromInput_ai02 = function (){\n        var obj2 = {};\n        obj2.StartDate = document.getElementById(\"statrtdtai02\").value;\n        obj2.EndDate = document.getElementById(\"enddtai02\").value;\n        console.log(\"Hello\");\n        return obj2;\n        \n      \n    }\n</script> \n\n<form>\n    <lablel>Start Date </label>\n        <input type=\"date\" id=\"statrtdtai02\" class=\"fas fa-calander\">\n        <br>\n        <label>End &nbsp;Date </label>\n        <input type=\"date\" id=\"enddtai02\">\n        <br>\n        <button ng-click=\"send({payload:collectDataFromInput_ai02()})\" id=\"submitBtnAi01\"> Submit</button>\n</form>\n<style>\n    /* Form styling */\n    form {\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        margin: 20px auto;\n        border: 1px solid #ccc;\n        border-radius: 5px;\n        padding: 15px;\n        width: 200px;\n    }\n\n    /* Label styling */\n    label {\n        display: block;\n        /* Display labels on new lines */\n        margin-bottom: 5px;\n        /* Add space between labels and inputs */\n        font-weight: bold;\n        /* Emphasize labels */\n    }\n\n    /* Input styling */\n    input[type=\"date\"] {\n        width: 60%;\n        /* Make inputs fill the available space */\n        padding: 8px;\n        /* Add padding for comfort */\n        border: 1px solid #ccc;\n        /* Consistent border style */\n        border-radius: 3px;\n        /* Rounded corners for inputs */\n    }\n\n    /* Button styling */\n    #submitBtnAi01 {\n        background-color: #4CAF50;\n        /* Green */\n        color: white;\n        padding: 15px 32px;\n        text-align: center;\n        text-decoration: none;\n        display: inline-block;\n        font-size: 16px;\n        margin: 4px 2px;\n        cursor: pointer;\n        border: none;\n    }\n\n    #submitBtnAi01:hover {\n        background-color: #25b87f;\n    }\n\n    /* Adjusting label spacing (optional) */\n    label:nth-child(even) {\n        /* Target every other label (for even spacing) */\n        margin-right: 10px;\n        /* Add some space between label and colon */\n    }\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 100,
        "y": 600,
        "wires": [
            [
                "0bf8a8e9978815e3"
            ]
        ]
    },
    {
        "id": "554222e283148d37",
        "type": "ui_chart",
        "z": "0cbe8ea7e32aba1c",
        "name": "",
        "group": "826f229308fe7b87",
        "order": 18,
        "width": 10,
        "height": 6,
        "label": "chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "DD-MM-YYYY HH:MM:SS",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1550,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "0bf8a8e9978815e3",
        "type": "function",
        "z": "0cbe8ea7e32aba1c",
        "name": "function 54",
        "func": "\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 600,
        "wires": [
            [
                "fdc8c070ec104c6c"
            ]
        ]
    },
    {
        "id": "9a60b34cad177e93",
        "type": "function",
        "z": "0cbe8ea7e32aba1c",
        "name": "function 55",
        "func": "if (msg.payload == 1){\n    msg.payload = \"Please put valid date format\";\n    msg.topic = '';\n    return msg;\n}else{\n    msg.payload = 'Data fetched Successfully'\n    msg.topic = '';\n    return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1350,
        "y": 700,
        "wires": [
            [
                "f42a5342689d1146"
            ]
        ]
    },
    {
        "id": "f42a5342689d1146",
        "type": "ui_toast",
        "z": "0cbe8ea7e32aba1c",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1550,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "84f18c04010e7e3e",
        "type": "function",
        "z": "0cbe8ea7e32aba1c",
        "name": "function 56",
        "func": "if(msg.payload===1){\n   msg.payload=\"\"; \n   return msg;\n}else{\n   return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1390,
        "y": 600,
        "wires": [
            [
                "554222e283148d37"
            ]
        ]
    },
    {
        "id": "36fbb3c4e1e2fdec",
        "type": "function",
        "z": "0cbe8ea7e32aba1c",
        "name": "Accessing Data From DB",
        "func": "var startdate = msg.payload.StartDate;\n\nvar enddate = msg.payload.EndDate;\n\n\nfunction extractDate(dateString) {\n    // Parse the input date string with timezone information\n    const inputDate = new Date(dateString);\n    // Extract the date part without time\n    const outputDate = inputDate.toISOString().slice(0, 10);\n    return outputDate; \n}\n\n// Define two input date strings\nconst inputDateStr1 = startdate ;\nconst inputDateStr2 = enddate;\n\n\n// Extract and print the date parts\nvar outputDate1 = extractDate(inputDateStr1);\nvar outputDate2 = extractDate(inputDateStr2);\n\n\nmsg.topic = `select TIMESTAMP, RAWPACKETS from iotdevicedata where TIMESTAMP between \"${outputDate1 + ' 00:00:00'}\"  and  \"${outputDate2 +' 23:59:59'}\" AND IOTYPE = 'AI';`\nconsole.log(`AI03 : select TIMESTAMP, RAWPACKETS from iotdevicedata where TIMESTAMP between \"${outputDate1 + 'T00:00:00'}\"  and  \"${outputDate2 +'T23:59:59'}\" AND IOTYPE = 'AI';`)\n// msg.topic = `select  RAWPACKETS from iotdevicedata where IOTYPE = 'E';`\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 920,
        "wires": [
            [
                "96e1b5d6fd975a07"
            ]
        ]
    },
    {
        "id": "96e1b5d6fd975a07",
        "type": "mysql",
        "z": "0cbe8ea7e32aba1c",
        "mydb": "ea4292e54e9739dd",
        "name": "Database",
        "x": 780,
        "y": 920,
        "wires": [
            [
                "bb332716021c33ce"
            ]
        ]
    },
    {
        "id": "bb332716021c33ce",
        "type": "function",
        "z": "0cbe8ea7e32aba1c",
        "name": "Working On Data Receive From DB",
        "func": "\nvar data = msg.payload;\nif(data[0]){\n\nvar _aiHistory = [];\nfor (let i = 0; i < data.length; i++){\n\n    let _aiPacket = {\n        x      : data[i].TIMESTAMP,  \n        y      : data[i].RAWPACKETS.AI03\n    }\n\n  function convertDateTimeToMillisec(dateTimeString) {\n    // Parse the date and time string\n    const dateObject = new Date(dateTimeString);\n\n    // Get the milliseconds since epoch\n    const milliseconds = dateObject.getTime();\n\n    return milliseconds;\n  }\n\n  // Example usage\n  const dateTimeString = _aiPacket.x;\n  const milliseconds = convertDateTimeToMillisec(dateTimeString);\n  \n  _aiPacket.x = milliseconds;\n\n    _aiHistory.push(_aiPacket);\n}\n\nmsg.payload = [{\n    \"series\": [\"A\"],\n    \"data\": [\n        _aiHistory\n    ],\n    \"labels\": [\"\"]\n}]\n\nreturn msg;\n}\nelse{\n  msg.payload = 1;\n  return msg;\n}\n\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 920,
        "wires": [
            [
                "eda546bead2098f6",
                "4283cbc75b1a6582"
            ]
        ]
    },
    {
        "id": "9c1850c25480d368",
        "type": "ui_template",
        "z": "0cbe8ea7e32aba1c",
        "group": "595ae79c7dbc44c8",
        "name": "AI03 Template",
        "order": 5,
        "width": 10,
        "height": 6,
        "format": "\n\n<script>    \n    this.scope.collectDataFromInput = function (){\n        var obj1 = {};\n        obj1.StartDate = document.getElementById(\"statrtdtai03\").value;\n        obj1.EndDate = document.getElementById(\"enddtai03\").value;\n        return obj1;\n      \n    }\n</script> \n\n<form>\n    <lablel>Start Date </label>&nbsp;:\n        <input type=\"date\" id=\"statrtdtai03\" >\n        <br>\n        <label>End &nbsp;Date </label>&nbsp;&nbsp;:\n        <input type=\"date\" id=\"enddtai03\">\n        <br>\n        <button ng-click=\"send({payload:collectDataFromInput()})\" id=\"submitBtnai03\"> Submit</button>\n</form>\n\n<style>\n    /* Form styling */\n    form {\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        margin: 20px auto;\n        border: 1px solid #ccc;\n        border-radius: 5px;\n        padding: 15px;\n        width: 200px;\n    }\n\n    /* Label styling */\n    label {\n        display: block;\n        /* Display labels on new lines */\n        margin-bottom: 5px;\n        /* Add space between labels and inputs */\n        font-weight: bold;\n        /* Emphasize labels */\n    }\n\n    /* Input styling */\n    input[type=\"date\"] {\n        width: 60%;\n        /* Make inputs fill the available space */\n        padding: 8px;\n        /* Add padding for comfort */\n        border: 1px solid #ccc;\n        /* Consistent border style */\n        border-radius: 3px;\n        /* Rounded corners for inputs */\n    }\n\n    /* Button styling */\n    #submitBtnai03 {\n        background-color: #4CAF50;\n        /* Green */\n        color: white;\n        padding: 15px 32px;\n        text-align: center;\n        text-decoration: none;\n        display: inline-block;\n        font-size: 16px;\n        margin: 4px 2px;\n        cursor: pointer;\n        border: none;\n    }\n\n    #submitBtnai03:hover {\n        background-color: #25b87f;\n    }\n\n    /* Adjusting label spacing (optional) */\n    label:nth-child(even) {\n        /* Target every other label (for even spacing) */\n        margin-right: 10px;\n        /* Add some space between label and colon */\n    }\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 100,
        "y": 920,
        "wires": [
            [
                "a9b1bf93ea69965d"
            ]
        ]
    },
    {
        "id": "5aa764c80da1fa77",
        "type": "ui_chart",
        "z": "0cbe8ea7e32aba1c",
        "name": "",
        "group": "595ae79c7dbc44c8",
        "order": 18,
        "width": 10,
        "height": 6,
        "label": "chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "DD-MM-YYYY HH:MM:SS",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1570,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "a9b1bf93ea69965d",
        "type": "function",
        "z": "0cbe8ea7e32aba1c",
        "name": "function 57",
        "func": "\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 920,
        "wires": [
            [
                "36fbb3c4e1e2fdec"
            ]
        ]
    },
    {
        "id": "eda546bead2098f6",
        "type": "function",
        "z": "0cbe8ea7e32aba1c",
        "name": "function 58",
        "func": "if (msg.payload == 1){\n    msg.payload = \"Please put valid date format\";\n    msg.topic = '';\n    return msg;\n}else{\n    msg.payload = 'Data fetched Successfully'\n    msg.topic = '';\n    return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1350,
        "y": 1020,
        "wires": [
            [
                "b1bd6fe8f1f36d4f"
            ]
        ]
    },
    {
        "id": "b1bd6fe8f1f36d4f",
        "type": "ui_toast",
        "z": "0cbe8ea7e32aba1c",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1550,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "4283cbc75b1a6582",
        "type": "function",
        "z": "0cbe8ea7e32aba1c",
        "name": "function 59",
        "func": "if(msg.payload===1){\n   msg.payload=\"\"; \n   return msg;\n}else{\n   return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1350,
        "y": 820,
        "wires": [
            [
                "5aa764c80da1fa77"
            ]
        ]
    },
    {
        "id": "cccab026978a758c",
        "type": "function",
        "z": "0cbe8ea7e32aba1c",
        "name": "Accessing Data From DB",
        "func": "var startdate = msg.payload.StartDate;\n\nvar enddate = msg.payload.EndDate;\n\n\nfunction extractDate(dateString) {\n    // Parse the input date string with timezone information\n    const inputDate = new Date(dateString);\n    // Extract the date part without time\n    const outputDate = inputDate.toISOString().slice(0, 10);\n    return outputDate; \n}\n\n// Define two input date strings\nconst inputDateStr1 = startdate ;\nconst inputDateStr2 = enddate;\n\n\n// Extract and print the date parts\nvar outputDate1 = extractDate(inputDateStr1);\nvar outputDate2 = extractDate(inputDateStr2);\n\n\nmsg.topic = `select TIMESTAMP, RAWPACKETS from iotdevicedata where TIMESTAMP between \"${outputDate1 + ' 00:00:00'}\"  and  \"${outputDate2 +' 23:59:59'}\" AND IOTYPE = 'AI';`\n// msg.topic = `select  RAWPACKETS from iotdevicedata where IOTYPE = 'E';`\nconsole.log(`AI04 : select TIMESTAMP, RAWPACKETS from iotdevicedata where TIMESTAMP between \"${outputDate1 + 'T00:00:00'}\"  and  \"${outputDate2 +'T23:59:59'}\" AND IOTYPE = 'AI';`)\n\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 1240,
        "wires": [
            [
                "66b15df73db3d577"
            ]
        ]
    },
    {
        "id": "66b15df73db3d577",
        "type": "mysql",
        "z": "0cbe8ea7e32aba1c",
        "mydb": "ea4292e54e9739dd",
        "name": "Database",
        "x": 780,
        "y": 1240,
        "wires": [
            [
                "e109de4ca28b3a5f"
            ]
        ]
    },
    {
        "id": "e109de4ca28b3a5f",
        "type": "function",
        "z": "0cbe8ea7e32aba1c",
        "name": "Working On Data Receive From DB",
        "func": "\nvar data = msg.payload;\nif(data[0]){\n\nvar _aiHistory = [];\nfor (let i = 0; i < data.length; i++){\n\n    let _aiPacket = {\n        x      : data[i].TIMESTAMP,  \n        y      : data[i].RAWPACKETS.AI04\n    }\n\n  function convertDateTimeToMillisec(dateTimeString) {\n    // Parse the date and time string\n    const dateObject = new Date(dateTimeString);\n\n    // Get the milliseconds since epoch\n    const milliseconds = dateObject.getTime();\n\n    return milliseconds;\n  }\n\n  // Example usage\n  const dateTimeString = _aiPacket.x;\n  const milliseconds = convertDateTimeToMillisec(dateTimeString);\n  \n  _aiPacket.x = milliseconds;\n\n    _aiHistory.push(_aiPacket);\n}\n\nmsg.payload = [{\n    \"series\": [\"A\"],\n    \"data\": [\n        _aiHistory\n    ],\n    \"labels\": [\"\"]\n}]\n\nreturn msg;\n}\nelse{\n  msg.payload = 1;\n  return msg;\n}\n\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 1240,
        "wires": [
            [
                "f78b0d6f9bacb5c2",
                "441fa2003f2be620"
            ]
        ]
    },
    {
        "id": "6644d780966f1503",
        "type": "ui_template",
        "z": "0cbe8ea7e32aba1c",
        "group": "0aaefe6cc998c233",
        "name": "AI04 Template",
        "order": 5,
        "width": 10,
        "height": 6,
        "format": "\n\n<script>    \n    this.scope.collectDataFromInput = function (){\n        var obj1 = {};\n        obj1.StartDate = document.getElementById(\"statrtdtai04\").value;\n        obj1.EndDate = document.getElementById(\"enddtai05\").value;\n        return obj1;\n      \n    }\n</script> \n\n<form>\n    <lablel>Start Date </label>&nbsp;:\n        <input type=\"date\" id=\"statrtdtai04\" >\n        <br>\n        <label>End &nbsp;Date </label>&nbsp;&nbsp;:\n        <input type=\"date\" id=\"enddtai05\">\n        <br>\n        <button ng-click=\"send({payload:collectDataFromInput()})\" id=\"submitBtnAi04\"> Submit</button>\n</form>\n\n<style>\n    /* Form styling */\n    form {\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        margin: 20px auto;\n        border: 1px solid #ccc;\n        border-radius: 5px;\n        padding: 15px;\n        width: 200px;\n    }\n\n    /* Label styling */\n    label {\n        display: block;\n        /* Display labels on new lines */\n        margin-bottom: 5px;\n        /* Add space between labels and inputs */\n        font-weight: bold;\n        /* Emphasize labels */\n    }\n\n    /* Input styling */\n    input[type=\"date\"] {\n        width: 60%;\n        /* Make inputs fill the available space */\n        padding: 8px;\n        /* Add padding for comfort */\n        border: 1px solid #ccc;\n        /* Consistent border style */\n        border-radius: 3px;\n        /* Rounded corners for inputs */\n    }\n\n    /* Button styling */\n    #submitBtnAi04 {\n        background-color: #4CAF50;\n        /* Green */\n        color: white;\n        padding: 15px 32px;\n        text-align: center;\n        text-decoration: none;\n        display: inline-block;\n        font-size: 16px;\n        margin: 4px 2px;\n        cursor: pointer;\n        border: none;\n    }\n\n    #btn:hover {\n        background-color: #25b87f;\n    }\n\n    /* Adjusting label spacing (optional) */\n    label:nth-child(even) {\n        /* Target every other label (for even spacing) */\n        margin-right: 10px;\n        /* Add some space between label and colon */\n    }\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 100,
        "y": 1240,
        "wires": [
            [
                "f1f111502602e7a9"
            ]
        ]
    },
    {
        "id": "826935aede00dbd9",
        "type": "ui_chart",
        "z": "0cbe8ea7e32aba1c",
        "name": "",
        "group": "0aaefe6cc998c233",
        "order": 18,
        "width": 10,
        "height": 6,
        "label": "chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "DD-MM-YYYY HH:MM:SS",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1550,
        "y": 1240,
        "wires": [
            []
        ]
    },
    {
        "id": "f1f111502602e7a9",
        "type": "function",
        "z": "0cbe8ea7e32aba1c",
        "name": "function 60",
        "func": "\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 1240,
        "wires": [
            [
                "cccab026978a758c"
            ]
        ]
    },
    {
        "id": "f78b0d6f9bacb5c2",
        "type": "function",
        "z": "0cbe8ea7e32aba1c",
        "name": "function 61",
        "func": "if (msg.payload == 1){\n    msg.payload = \"Please put valid date format\";\n    msg.topic = '';\n    return msg;\n}else{\n    msg.payload = 'Data fetched Successfully'\n    msg.topic = '';\n    return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1350,
        "y": 1340,
        "wires": [
            [
                "f2b1758a11068eb3"
            ]
        ]
    },
    {
        "id": "f2b1758a11068eb3",
        "type": "ui_toast",
        "z": "0cbe8ea7e32aba1c",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1550,
        "y": 1340,
        "wires": [
            []
        ]
    },
    {
        "id": "441fa2003f2be620",
        "type": "function",
        "z": "0cbe8ea7e32aba1c",
        "name": "function 62",
        "func": "if(msg.payload===1){\n   msg.payload=\"\"; \n   return msg;\n}else{\n   return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1390,
        "y": 1240,
        "wires": [
            [
                "826935aede00dbd9"
            ]
        ]
    },
    {
        "id": "c10746122d455938",
        "type": "function",
        "z": "0cbe8ea7e32aba1c",
        "name": "Accessing Data From DB",
        "func": "var startdate = msg.payload.StartDate;\n\nvar enddate = msg.payload.EndDate;\n\n\nfunction extractDate(dateString) {\n    // Parse the input date string with timezone information\n    const inputDate = new Date(dateString);\n    // Extract the date part without time\n    const outputDate = inputDate.toISOString().slice(0, 10);\n    return outputDate; \n}\n\n// Define two input date strings\nconst inputDateStr1 = startdate ;\nconst inputDateStr2 = enddate;\n\n\n// Extract and print the date parts\nvar outputDate1 = extractDate(inputDateStr1);\nvar outputDate2 = extractDate(inputDateStr2);\n\n\nmsg.topic = `select TIMESTAMP, RAWPACKETS from iotdevicedata where TIMESTAMP between \"${outputDate1 + ' 00:00:00'}\"  and  \"${outputDate2 +' 23:59:59'}\" AND IOTYPE = 'AI';`\nconsole.log(`AI05 : select TIMESTAMP, RAWPACKETS from iotdevicedata where TIMESTAMP between \"${outputDate1 + 'T00:00:00'}\"  and  \"${outputDate2 +'T23:59:59'}\" AND IOTYPE = 'AI';`)\n\n// msg.topic = `select  RAWPACKETS from iotdevicedata where IOTYPE = 'E';`\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 1560,
        "wires": [
            [
                "68d880ca36c5eba0"
            ]
        ]
    },
    {
        "id": "68d880ca36c5eba0",
        "type": "mysql",
        "z": "0cbe8ea7e32aba1c",
        "mydb": "ea4292e54e9739dd",
        "name": "Database",
        "x": 780,
        "y": 1560,
        "wires": [
            [
                "c0dc83b5adba881b"
            ]
        ]
    },
    {
        "id": "c0dc83b5adba881b",
        "type": "function",
        "z": "0cbe8ea7e32aba1c",
        "name": "Working On Data Receive From DB",
        "func": "\nvar data = msg.payload;\nif(data[0]){\n\nvar _aiHistory = [];\nfor (let i = 0; i < data.length; i++){\n\n    let _aiPacket = {\n        x      : data[i].TIMESTAMP,  \n        y      : data[i].RAWPACKETS.AI05\n    }\n\n  function convertDateTimeToMillisec(dateTimeString) {\n    // Parse the date and time string\n    const dateObject = new Date(dateTimeString);\n\n    // Get the milliseconds since epoch\n    const milliseconds = dateObject.getTime();\n\n    return milliseconds;\n  }\n\n  // Example usage\n  const dateTimeString = _aiPacket.x;\n  const milliseconds = convertDateTimeToMillisec(dateTimeString);\n  \n  _aiPacket.x = milliseconds;\n\n    _aiHistory.push(_aiPacket);\n}\n\nmsg.payload = [{\n    \"series\": [\"A\"],\n    \"data\": [\n        _aiHistory\n    ],\n    \"labels\": [\"\"]\n}]\n\nreturn msg;\n}\nelse{\n  msg.payload = 1;\n  return msg;\n}\n\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 1560,
        "wires": [
            [
                "f8e934dc86398f68",
                "bf0f891fb1d3b7de"
            ]
        ]
    },
    {
        "id": "65bc85037ce95f73",
        "type": "ui_template",
        "z": "0cbe8ea7e32aba1c",
        "group": "1b90b305910104f3",
        "name": "AI05 Template",
        "order": 5,
        "width": 10,
        "height": 6,
        "format": "\n\n<script>    \n    this.scope.collectDataFromInput = function (){\n        var obj1 = {};\n        obj1.StartDate = document.getElementById(\"statrtdt05\").value;\n        obj1.EndDate = document.getElementById(\"enddt05\").value;\n        return obj1;\n      \n    }\n</script> \n\n<form>\n    <lablel>Start Date </label>&nbsp;:\n        <input type=\"date\" id=\"statrtdt05\" >\n        <br>\n        <label>End &nbsp;Date </label>&nbsp;&nbsp;:\n        <input type=\"date\" id=\"enddt05\">\n        <br>\n        <button ng-click=\"send({payload:collectDataFromInput()})\" id=\"submitBtnAi05\"> Submit</button>\n</form>\n\n<style>\n    /* Form styling */\n    form {\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        margin: 20px auto;\n        border: 1px solid #ccc;\n        border-radius: 5px;\n        padding: 15px;\n        width: 200px;\n    }\n\n    /* Label styling */\n    label {\n        display: block;\n        /* Display labels on new lines */\n        margin-bottom: 5px;\n        /* Add space between labels and inputs */\n        font-weight: bold;\n        /* Emphasize labels */\n    }\n\n    /* Input styling */\n    input[type=\"date\"] {\n        width: 60%;\n        /* Make inputs fill the available space */\n        padding: 8px;\n        /* Add padding for comfort */\n        border: 1px solid #ccc;\n        /* Consistent border style */\n        border-radius: 3px;\n        /* Rounded corners for inputs */\n    }\n\n    /* Button styling */\n    #submitBtnAi05 {\n        background-color: #4CAF50;\n        /* Green */\n        color: white;\n        padding: 15px 32px;\n        text-align: center;\n        text-decoration: none;\n        display: inline-block;\n        font-size: 16px;\n        margin: 4px 2px;\n        cursor: pointer;\n        border: none;\n    }\n\n    #submitBtnAi05:hover {\n        background-color: #25b87f;\n    }\n\n    /* Adjusting label spacing (optional) */\n    label:nth-child(even) {\n        /* Target every other label (for even spacing) */\n        margin-right: 10px;\n        /* Add some space between label and colon */\n    }\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 100,
        "y": 1560,
        "wires": [
            [
                "cc765bc4707bc193"
            ]
        ]
    },
    {
        "id": "1de2cacdef35fe54",
        "type": "ui_chart",
        "z": "0cbe8ea7e32aba1c",
        "name": "",
        "group": "1b90b305910104f3",
        "order": 18,
        "width": 10,
        "height": 6,
        "label": "chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "DD-MM-YYYY HH:MM:SS",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1550,
        "y": 1560,
        "wires": [
            []
        ]
    },
    {
        "id": "cc765bc4707bc193",
        "type": "function",
        "z": "0cbe8ea7e32aba1c",
        "name": "function 63",
        "func": "\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 1560,
        "wires": [
            [
                "c10746122d455938"
            ]
        ]
    },
    {
        "id": "f8e934dc86398f68",
        "type": "function",
        "z": "0cbe8ea7e32aba1c",
        "name": "function 64",
        "func": "if (msg.payload == 1){\n    msg.payload = \"Please put valid date format\";\n    msg.topic = '';\n    return msg;\n}else{\n    msg.payload = 'Data fetched Successfully'\n    msg.topic = '';\n    return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1350,
        "y": 1660,
        "wires": [
            [
                "7ebdfb242b184e20"
            ]
        ]
    },
    {
        "id": "7ebdfb242b184e20",
        "type": "ui_toast",
        "z": "0cbe8ea7e32aba1c",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1550,
        "y": 1660,
        "wires": [
            []
        ]
    },
    {
        "id": "bf0f891fb1d3b7de",
        "type": "function",
        "z": "0cbe8ea7e32aba1c",
        "name": "function 65",
        "func": "if(msg.payload===1){\n   msg.payload=\"\"; \n   return msg;\n}else{\n   return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1390,
        "y": 1560,
        "wires": [
            [
                "1de2cacdef35fe54"
            ]
        ]
    },
    {
        "id": "a82bdb37762deb96",
        "type": "function",
        "z": "0cbe8ea7e32aba1c",
        "name": "Accessing Data From DB",
        "func": "var startdate = msg.payload.StartDate;\n\nvar enddate = msg.payload.EndDate;\n\n\nfunction extractDate(dateString) {\n    // Parse the input date string with timezone information\n    const inputDate = new Date(dateString);\n    // Extract the date part without time\n    const outputDate = inputDate.toISOString().slice(0, 10);\n    return outputDate; \n}\n\n// Define two input date strings\nconst inputDateStr1 = startdate ;\nconst inputDateStr2 = enddate;\n\n\n// Extract and print the date parts\nvar outputDate1 = extractDate(inputDateStr1);\nvar outputDate2 = extractDate(inputDateStr2);\n\n\nmsg.topic = `select TIMESTAMP, RAWPACKETS from iotdevicedata where TIMESTAMP between \"${outputDate1 + ' 00:00:00'}\"  and  \"${outputDate2 +' 23:59:59'}\" AND IOTYPE = 'AI';`\nconsole.log(`AI06 : select TIMESTAMP, RAWPACKETS from iotdevicedata where TIMESTAMP between \"${outputDate1 + 'T00:00:00'}\"  and  \"${outputDate2 +'T23:59:59'}\" AND IOTYPE = 'AI';`)\n\n// msg.topic = `select  RAWPACKETS from iotdevicedata where IOTYPE = 'E';`\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 1840,
        "wires": [
            [
                "5db34e8bae148da4"
            ]
        ]
    },
    {
        "id": "5db34e8bae148da4",
        "type": "mysql",
        "z": "0cbe8ea7e32aba1c",
        "mydb": "ea4292e54e9739dd",
        "name": "Database",
        "x": 780,
        "y": 1840,
        "wires": [
            [
                "2766ae9e92ae4c11"
            ]
        ]
    },
    {
        "id": "2766ae9e92ae4c11",
        "type": "function",
        "z": "0cbe8ea7e32aba1c",
        "name": "Working On Data Receive From DB",
        "func": "\nvar data = msg.payload;\nif(data[0]){\n\nvar _aiHistory = [];\nfor (let i = 0; i < data.length; i++){\n\n    let _aiPacket = {\n        x      : data[i].TIMESTAMP,  \n        y      : data[i].RAWPACKETS.AI06\n    }\n\n  function convertDateTimeToMillisec(dateTimeString) {\n    // Parse the date and time string\n    const dateObject = new Date(dateTimeString);\n\n    // Get the milliseconds since epoch\n    const milliseconds = dateObject.getTime();\n\n    return milliseconds;\n  }\n\n  // Example usage\n  const dateTimeString = _aiPacket.x;\n  const milliseconds = convertDateTimeToMillisec(dateTimeString);\n  \n  _aiPacket.x = milliseconds;\n\n    _aiHistory.push(_aiPacket);\n}\n\nmsg.payload = [{\n    \"series\": [\"A\"],\n    \"data\": [\n        _aiHistory\n    ],\n    \"labels\": [\"\"]\n}]\n\nreturn msg;\n}\nelse{\n  msg.payload = 1;\n  return msg;\n}\n\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 1840,
        "wires": [
            [
                "0b58e57f6b8aebce",
                "539aa3770deabf4e"
            ]
        ]
    },
    {
        "id": "669a65507366f6f8",
        "type": "ui_template",
        "z": "0cbe8ea7e32aba1c",
        "group": "cd1a2cabae6f16ee",
        "name": "AI06 Template",
        "order": 5,
        "width": 10,
        "height": 6,
        "format": "\n\n<script>    \n    this.scope.collectDataFromInput = function (){\n        var obj1 = {};\n        obj1.StartDate = document.getElementById(\"statrtdtai06\").value;\n        obj1.EndDate = document.getElementById(\"enddtai06\").value;\n        return obj1;\n      \n    }\n</script> \n\n<form>\n    <lablel>Start Date </label>&nbsp;:\n        <input type=\"date\" id=\"statrtdtai06\" >\n        <br>\n        <label>End &nbsp;Date </label>&nbsp;&nbsp;:\n        <input type=\"date\" id=\"enddtai06\">\n        <br>\n        <button ng-click=\"send({payload:collectDataFromInput()})\" id=\"submitBtnAi06\"> Submit</button>\n</form>\n\n<style>\n    /* Form styling */\n    form {\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        margin: 20px auto;\n        border: 1px solid #ccc;\n        border-radius: 5px;\n        padding: 15px;\n        width: 200px;\n    }\n\n    /* Label styling */\n    label {\n        display: block;\n        /* Display labels on new lines */\n        margin-bottom: 5px;\n        /* Add space between labels and inputs */\n        font-weight: bold;\n        /* Emphasize labels */\n    }\n\n    /* Input styling */\n    input[type=\"date\"] {\n        width: 60%;\n        /* Make inputs fill the available space */\n        padding: 8px;\n        /* Add padding for comfort */\n        border: 1px solid #ccc;\n        /* Consistent border style */\n        border-radius: 3px;\n        /* Rounded corners for inputs */\n    }\n\n    /* Button styling */\n    #submitBtnAi06 {\n        background-color: #4CAF50;\n        /* Green */\n        color: white;\n        padding: 15px 32px;\n        text-align: center;\n        text-decoration: none;\n        display: inline-block;\n        font-size: 16px;\n        margin: 4px 2px;\n        cursor: pointer;\n        border: none;\n    }\n\n    #submitBtnAi06:hover {\n        background-color: #25b87f;\n    }\n\n    /* Adjusting label spacing (optional) */\n    label:nth-child(even) {\n        /* Target every other label (for even spacing) */\n        margin-right: 10px;\n        /* Add some space between label and colon */\n    }\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 100,
        "y": 1840,
        "wires": [
            [
                "4ae123369fb3cdd2"
            ]
        ]
    },
    {
        "id": "b8eea58f02f883a7",
        "type": "ui_chart",
        "z": "0cbe8ea7e32aba1c",
        "name": "",
        "group": "cd1a2cabae6f16ee",
        "order": 18,
        "width": 10,
        "height": 6,
        "label": "chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "DD-MM-YYYY HH:MM:SS",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1550,
        "y": 1840,
        "wires": [
            []
        ]
    },
    {
        "id": "4ae123369fb3cdd2",
        "type": "function",
        "z": "0cbe8ea7e32aba1c",
        "name": "function 66",
        "func": "\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 1840,
        "wires": [
            [
                "a82bdb37762deb96"
            ]
        ]
    },
    {
        "id": "0b58e57f6b8aebce",
        "type": "function",
        "z": "0cbe8ea7e32aba1c",
        "name": "function 67",
        "func": "if (msg.payload == 1){\n    msg.payload = \"Please put valid date format\";\n    msg.topic = '';\n    return msg;\n}else{\n    msg.payload = 'Data fetched Successfully'\n    msg.topic = '';\n    return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1350,
        "y": 1940,
        "wires": [
            [
                "6623208d44b3673f"
            ]
        ]
    },
    {
        "id": "6623208d44b3673f",
        "type": "ui_toast",
        "z": "0cbe8ea7e32aba1c",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1550,
        "y": 1940,
        "wires": [
            []
        ]
    },
    {
        "id": "539aa3770deabf4e",
        "type": "function",
        "z": "0cbe8ea7e32aba1c",
        "name": "function 68",
        "func": "if(msg.payload===1){\n   msg.payload=\"\"; \n   return msg;\n}else{\n   return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1390,
        "y": 1840,
        "wires": [
            [
                "b8eea58f02f883a7"
            ]
        ]
    },
    {
        "id": "f99f101ca3d6433d",
        "type": "function",
        "z": "0cbe8ea7e32aba1c",
        "name": "Accessing Data From DB",
        "func": "var startdate = msg.payload.StartDate;\n\nvar enddate = msg.payload.EndDate;\n\n\nfunction extractDate(dateString) {\n    // Parse the input date string with timezone information\n    const inputDate = new Date(dateString);\n    // Extract the date part without time\n    const outputDate = inputDate.toISOString().slice(0, 10);\n    return outputDate; \n}\n\n// Define two input date strings\nconst inputDateStr1 = startdate ;\nconst inputDateStr2 = enddate;\n\n\n// Extract and print the date parts\nvar outputDate1 = extractDate(inputDateStr1);\nvar outputDate2 = extractDate(inputDateStr2);\n\n\nmsg.topic = `select TIMESTAMP, RAWPACKETS from iotdevicedata where TIMESTAMP between \"${outputDate1 + ' 00:00:00'}\"  and  \"${outputDate2 +' 23:59:59'}\" AND IOTYPE = 'AI';`\nconsole.log(`AI07 : select TIMESTAMP, RAWPACKETS from iotdevicedata where TIMESTAMP between \"${outputDate1 + 'T00:00:00'}\"  and  \"${outputDate2 + 'T23:59:59'}\" AND IOTYPE = 'AI';`)\n\n// msg.topic = `select  RAWPACKETS from iotdevicedata where IOTYPE = 'E';`\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 2100,
        "wires": [
            [
                "eebb94a65b1f316b"
            ]
        ]
    },
    {
        "id": "eebb94a65b1f316b",
        "type": "mysql",
        "z": "0cbe8ea7e32aba1c",
        "mydb": "ea4292e54e9739dd",
        "name": "Database",
        "x": 800,
        "y": 2100,
        "wires": [
            [
                "e208e9d1ae116e5d"
            ]
        ]
    },
    {
        "id": "e208e9d1ae116e5d",
        "type": "function",
        "z": "0cbe8ea7e32aba1c",
        "name": "Working On Data Receive From DB",
        "func": "\nvar data = msg.payload;\nconsole.log(data);\nif(data[0]){\n\nvar _aiHistory = [];\nfor (let i = 0; i < data.length; i++){\n\n    let _aiPacket = {\n        x      : data[i].TIMESTAMP,  \n        y      : data[i].RAWPACKETS.AI07\n    }\n\n  function convertDateTimeToMillisec(dateTimeString) {\n    // Parse the date and time string\n    const dateObject = new Date(dateTimeString);\n\n    // Get the milliseconds since epoch\n    const milliseconds = dateObject.getTime();\n\n    return milliseconds;\n  }\n\n  // Example usage\n  const dateTimeString = _aiPacket.x;\n  const milliseconds = convertDateTimeToMillisec(dateTimeString);\n  \n  _aiPacket.x = milliseconds;\n\n    _aiHistory.push(_aiPacket);\n}\n\nmsg.payload = [{\n    \"series\": [\"A\"],\n    \"data\": [\n        _aiHistory\n    ],\n    \"labels\": [\"\"]\n}]\n\nreturn msg;\n}\nelse{\n  msg.payload = 1;\n  return msg;\n}\n\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1120,
        "y": 2100,
        "wires": [
            [
                "9c7b0aa1f7772854",
                "890cb85deef3acf4"
            ]
        ]
    },
    {
        "id": "e260b69cb20d9d11",
        "type": "ui_template",
        "z": "0cbe8ea7e32aba1c",
        "group": "d24e03d8bee24e99",
        "name": "AI07 Template",
        "order": 5,
        "width": 10,
        "height": 6,
        "format": "\n\n<script>    \n    this.scope.collectDataFromInput = function (){\n        var obj1 = {};\n        obj1.StartDate = document.getElementById(\"startdtai07\").value;\n        obj1.EndDate = document.getElementById(\"enddtai07\").value;\n        return obj1;\n      \n    }\n</script> \n\n<form>\n    <lablel>Start Date </label>&nbsp;:\n        <input type=\"date\" id=\"startdtai07\" >\n        <br>\n        <label>End &nbsp;Date </label>&nbsp;&nbsp;:\n        <input type=\"date\" id=\"endDateAi07\">\n        <br>\n        <button id=\"submitBtnAi07\" ng-click=\"send({payload:collectDataFromInput()})\"> Submit</button>\n</form>\n\n<style>\n  /* Form styling */\n  form {\n    display: flex; \n    flex-direction: column; \n    align-items: center; \n    margin: 20px auto; \n    border: 1px solid #ccc; \n    border-radius: 5px; \n    padding: 15px; \n    width: 200px; \n  }\n\n  /* Label styling */\n  label {\n    display: block; /* Display labels on new lines */\n    margin-bottom: 5px; /* Add space between labels and inputs */\n    font-weight: bold; /* Emphasize labels */\n  }\n\n  /* Input styling */\n  input[type=\"date\"] {\n    width: 60%; /* Make inputs fill the available space */\n    padding: 8px; /* Add padding for comfort */\n    border: 1px solid #ccc; /* Consistent border style */\n    border-radius: 3px; /* Rounded corners for inputs */\n  }\n\n  /* Button styling */\n  #submitBtnAi07 {\n    background-color: #4CAF50; /* Green */\n    color: white;\n    padding: 15px 32px;\n    text-align: center;\n    text-decoration: none;\n    display: inline-block;\n    font-size: 16px;\n    margin: 4px 2px;\n    cursor: pointer;\n    border: none;\n  }\n\n  #submitBtnAi07:hover {\n    background-color: #25b87f;\n  }\n\n  /* Adjusting label spacing (optional) */\n  label:nth-child(even) { /* Target every other label (for even spacing) */\n    margin-right: 10px; /* Add some space between label and colon */\n  }\n\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 120,
        "y": 2100,
        "wires": [
            [
                "1e9e38d6266db25b"
            ]
        ]
    },
    {
        "id": "25c336b7f453aa37",
        "type": "ui_chart",
        "z": "0cbe8ea7e32aba1c",
        "name": "",
        "group": "d24e03d8bee24e99",
        "order": 18,
        "width": 10,
        "height": 6,
        "label": "chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "DD-MM-YYYY HH:MM:SS",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1570,
        "y": 2100,
        "wires": [
            []
        ]
    },
    {
        "id": "1e9e38d6266db25b",
        "type": "function",
        "z": "0cbe8ea7e32aba1c",
        "name": "function 69",
        "func": "\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 2100,
        "wires": [
            [
                "f99f101ca3d6433d"
            ]
        ]
    },
    {
        "id": "9c7b0aa1f7772854",
        "type": "function",
        "z": "0cbe8ea7e32aba1c",
        "name": "function 70",
        "func": "if (msg.payload == 1){\n    msg.payload = \"Please put valid date format\";\n    msg.topic = '';\n    return msg;\n}else{\n    msg.payload = 'Data fetched Successfully'\n    msg.topic = '';\n    return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1370,
        "y": 2200,
        "wires": [
            [
                "bd6b4d479dbf9bb0"
            ]
        ]
    },
    {
        "id": "bd6b4d479dbf9bb0",
        "type": "ui_toast",
        "z": "0cbe8ea7e32aba1c",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1570,
        "y": 2200,
        "wires": [
            []
        ]
    },
    {
        "id": "890cb85deef3acf4",
        "type": "function",
        "z": "0cbe8ea7e32aba1c",
        "name": "function 71",
        "func": "if(msg.payload===1){\n   msg.payload=\"\"; \n   return msg;\n}else{\n   return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1410,
        "y": 2100,
        "wires": [
            [
                "25c336b7f453aa37"
            ]
        ]
    },
    {
        "id": "d7855e173ffd5362",
        "type": "function",
        "z": "0cbe8ea7e32aba1c",
        "name": "Accessing Data From DB",
        "func": "var startdate = msg.payload.StartDate;\n\nvar enddate = msg.payload.EndDate;\n\n\nfunction extractDate(dateString) {\n    // Parse the input date string with timezone information\n    const inputDate = new Date(dateString);\n    // Extract the date part without time\n    const outputDate = inputDate.toISOString().slice(0, 10);\n    return outputDate; \n}\n\n// Define two input date strings\nconst inputDateStr1 = startdate ;\nconst inputDateStr2 = enddate;\n\n\n// Extract and print the date parts\nvar outputDate1 = extractDate(inputDateStr1);\nvar outputDate2 = extractDate(inputDateStr2);\n\n\nmsg.topic = `select TIMESTAMP, RAWPACKETS from iotdevicedata where TIMESTAMP between \"${outputDate1 + ' 00:00:00'}\"  and  \"${outputDate2 +' 23:59:59'}\" AND IOTYPE = 'AI';`\nconsole.log(`AI08 : select TIMESTAMP, RAWPACKETS from iotdevicedata where TIMESTAMP between \"${outputDate1 + 'T00:00:00'}\"  and  \"${outputDate2 + 'T23:59:59'}\" AND IOTYPE = 'AI';`)\n\n// msg.topic = `select  RAWPACKETS from iotdevicedata where IOTYPE = 'E';`\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 2400,
        "wires": [
            [
                "2ebb4308604f1052"
            ]
        ]
    },
    {
        "id": "2ebb4308604f1052",
        "type": "mysql",
        "z": "0cbe8ea7e32aba1c",
        "mydb": "ea4292e54e9739dd",
        "name": "Database",
        "x": 820,
        "y": 2400,
        "wires": [
            [
                "d12868644b7d93a6"
            ]
        ]
    },
    {
        "id": "d12868644b7d93a6",
        "type": "function",
        "z": "0cbe8ea7e32aba1c",
        "name": "Working On Data Receive From DB",
        "func": "\nvar data = msg.payload;\nif(data[0]){\n\nvar _aiHistory = [];\nfor (let i = 0; i < data.length; i++){\n\n    let _aiPacket = {\n        x      : data[i].TIMESTAMP,  \n        y      : data[i].RAWPACKETS.AI08\n    }\n\n  function convertDateTimeToMillisec(dateTimeString) {\n    // Parse the date and time string\n    const dateObject = new Date(dateTimeString);\n\n    // Get the milliseconds since epoch\n    const milliseconds = dateObject.getTime();\n\n    return milliseconds;\n  }\n\n  // Example usage\n  const dateTimeString = _aiPacket.x;\n  const milliseconds = convertDateTimeToMillisec(dateTimeString);\n  \n  _aiPacket.x = milliseconds;\n\n    _aiHistory.push(_aiPacket);\n}\n\nmsg.payload = [{\n    \"series\": [\"A\"],\n    \"data\": [\n        _aiHistory\n    ],\n    \"labels\": [\"\"]\n}]\n\nreturn msg;\n}\nelse{\n  msg.payload = 1;\n  return msg;\n}\n\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1140,
        "y": 2400,
        "wires": [
            [
                "59b52d3eee8baca4",
                "4ab2988a5bd0c5f8"
            ]
        ]
    },
    {
        "id": "65ae1de5e44af7de",
        "type": "ui_template",
        "z": "0cbe8ea7e32aba1c",
        "group": "6d712b1eab3d1520",
        "name": "AI08 Template",
        "order": 5,
        "width": 10,
        "height": 6,
        "format": "\n\n<script>    \n    this.scope.collectDataFromInput = function (){\n        var obj1 = {};\n        obj1.StartDate = document.getElementById(\"statrtdtai08\").value;\n        obj1.EndDate = document.getElementById(\"enddtai08\").value;\n        return obj1;\n      \n    }\n</script> \n\n<form>\n    <lablel>Start Date </label>&nbsp;:\n        <input type=\"date\" id=\"statrtdtai08\" >\n        <br>\n        <label>End &nbsp;Date </label>&nbsp;&nbsp;:\n        <input type=\"date\" id=\"enddtai08\">\n        <br>\n        <button id=\"submitBtnAi08\" ng-click=\"send({payload:collectDataFromInput()})\"> Submit</button>\n</form>\n\n<style>\n  /* Form styling */\n  form {\n    display: flex; \n    flex-direction: column; \n    align-items: center; \n    margin: 20px auto; \n    border: 1px solid #ccc; \n    border-radius: 5px; \n    padding: 15px; \n    width: 200px; \n  }\n\n  /* Label styling */\n  label {\n    display: block; /* Display labels on new lines */\n    margin-bottom: 5px; /* Add space between labels and inputs */\n    font-weight: bold; /* Emphasize labels */\n  }\n\n  /* Input styling */\n  input[type=\"date\"] {\n    width: 60%; /* Make inputs fill the available space */\n    padding: 8px; /* Add padding for comfort */\n    border: 1px solid #ccc; /* Consistent border style */\n    border-radius: 3px; /* Rounded corners for inputs */\n  }\n\n  /* Button styling */\n  #submitBtnAi08 {\n    background-color: #4CAF50; /* Green */\n    color: white;\n    padding: 15px 32px;\n    text-align: center;\n    text-decoration: none;\n    display: inline-block;\n    font-size: 16px;\n    margin: 4px 2px;\n    cursor: pointer;\n    border: none;\n  }\n\n  #submitBtnAi08:hover {\n    background-color: #25b87f;\n  }\n\n  /* Adjusting label spacing (optional) */\n  label:nth-child(even) { /* Target every other label (for even spacing) */\n    margin-right: 10px; /* Add some space between label and colon */\n  }\n\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 140,
        "y": 2400,
        "wires": [
            [
                "45a57ad177ad571d"
            ]
        ]
    },
    {
        "id": "9d74249188a41d2d",
        "type": "ui_chart",
        "z": "0cbe8ea7e32aba1c",
        "name": "",
        "group": "6d712b1eab3d1520",
        "order": 18,
        "width": 10,
        "height": 6,
        "label": "chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "DD-MM-YYYY HH:MM:SS",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1590,
        "y": 2400,
        "wires": [
            []
        ]
    },
    {
        "id": "45a57ad177ad571d",
        "type": "function",
        "z": "0cbe8ea7e32aba1c",
        "name": "function 72",
        "func": "\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 2400,
        "wires": [
            [
                "d7855e173ffd5362"
            ]
        ]
    },
    {
        "id": "59b52d3eee8baca4",
        "type": "function",
        "z": "0cbe8ea7e32aba1c",
        "name": "function 73",
        "func": "if (msg.payload == 1){\n    msg.payload = \"Please put valid date format\";\n    msg.topic = '';\n    return msg;\n}else{\n    msg.payload = 'Data fetched Successfully'\n    msg.topic = '';\n    return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1390,
        "y": 2520,
        "wires": [
            [
                "7191547744ad0390"
            ]
        ]
    },
    {
        "id": "7191547744ad0390",
        "type": "ui_toast",
        "z": "0cbe8ea7e32aba1c",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1590,
        "y": 2500,
        "wires": [
            []
        ]
    },
    {
        "id": "4ab2988a5bd0c5f8",
        "type": "function",
        "z": "0cbe8ea7e32aba1c",
        "name": "function 74",
        "func": "if(msg.payload===1){\n   msg.payload=\"\"; \n   return msg;\n}else{\n   return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1430,
        "y": 2400,
        "wires": [
            [
                "9d74249188a41d2d"
            ]
        ]
    },
    {
        "id": "44437c65efbff8f0",
        "type": "ui_text",
        "z": "0cbe8ea7e32aba1c",
        "group": "d48e625dd15b16ab",
        "order": 2,
        "width": 3,
        "height": 1,
        "name": "AI01",
        "label": "<b><font size=5px>AI01</b>",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 330,
        "y": 460,
        "wires": []
    },
    {
        "id": "858c41345c35c362",
        "type": "ui_text",
        "z": "0cbe8ea7e32aba1c",
        "group": "826f229308fe7b87",
        "order": 2,
        "width": 3,
        "height": 1,
        "name": "AI02",
        "label": "<b><font size=5px>AI02</b>",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 450,
        "y": 460,
        "wires": []
    },
    {
        "id": "692945bf8286abb4",
        "type": "ui_text",
        "z": "0cbe8ea7e32aba1c",
        "group": "595ae79c7dbc44c8",
        "order": 2,
        "width": 3,
        "height": 1,
        "name": "AI03",
        "label": "<b><font size=5px>AI03</b>",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 570,
        "y": 460,
        "wires": []
    },
    {
        "id": "f7f976d90f5f4b31",
        "type": "ui_text",
        "z": "0cbe8ea7e32aba1c",
        "group": "0aaefe6cc998c233",
        "order": 2,
        "width": 3,
        "height": 1,
        "name": "AI04",
        "label": "<b><font size=5px>AI04</b>",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 690,
        "y": 460,
        "wires": []
    },
    {
        "id": "fdddfd9845f06b18",
        "type": "ui_text",
        "z": "0cbe8ea7e32aba1c",
        "group": "1b90b305910104f3",
        "order": 2,
        "width": 3,
        "height": 1,
        "name": "AI05",
        "label": "<b><font size=5px>AI05</b>",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 330,
        "y": 500,
        "wires": []
    },
    {
        "id": "f2f577218198c938",
        "type": "ui_text",
        "z": "0cbe8ea7e32aba1c",
        "group": "cd1a2cabae6f16ee",
        "order": 2,
        "width": 3,
        "height": 1,
        "name": "AI06",
        "label": "<b><font size=5px>AI06</b>",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 450,
        "y": 500,
        "wires": []
    },
    {
        "id": "04b7134bf31542f1",
        "type": "ui_text",
        "z": "0cbe8ea7e32aba1c",
        "group": "d24e03d8bee24e99",
        "order": 2,
        "width": 3,
        "height": 1,
        "name": "AI07",
        "label": "<b><font size=5px>AI07</b>",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 570,
        "y": 500,
        "wires": []
    },
    {
        "id": "2bed008bdad67eec",
        "type": "ui_text",
        "z": "0cbe8ea7e32aba1c",
        "group": "6d712b1eab3d1520",
        "order": 2,
        "width": 3,
        "height": 1,
        "name": "AI08",
        "label": "<b><font size=5px>AI08</b>",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 690,
        "y": 500,
        "wires": []
    }
]